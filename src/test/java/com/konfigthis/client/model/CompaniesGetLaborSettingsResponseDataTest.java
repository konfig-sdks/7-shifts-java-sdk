/*
 * 7shifts API
 * 7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.
 *
 * The version of the OpenAPI document: 2023-05-01
 * Contact: api-support@7shifts.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for CompaniesGetLaborSettingsResponseData
 */
public class CompaniesGetLaborSettingsResponseDataTest {
    private final CompaniesGetLaborSettingsResponseData model = new CompaniesGetLaborSettingsResponseData();

    /**
     * Model tests for CompaniesGetLaborSettingsResponseData
     */
    @Test
    public void testCompaniesGetLaborSettingsResponseData() {
        // TODO: test CompaniesGetLaborSettingsResponseData
    }

    /**
     * Test the property 'companyId'
     */
    @Test
    public void companyIdTest() {
        // TODO: test companyId
    }

    /**
     * Test the property 'consecutiveDaysThreshold'
     */
    @Test
    public void consecutiveDaysThresholdTest() {
        // TODO: test consecutiveDaysThreshold
    }

    /**
     * Test the property 'consecutiveDaysMultiplier'
     */
    @Test
    public void consecutiveDaysMultiplierTest() {
        // TODO: test consecutiveDaysMultiplier
    }

    /**
     * Test the property 'regularRateOfPayEnabled'
     */
    @Test
    public void regularRateOfPayEnabledTest() {
        // TODO: test regularRateOfPayEnabled
    }

    /**
     * Test the property 'exceptionCostEnabled'
     */
    @Test
    public void exceptionCostEnabledTest() {
        // TODO: test exceptionCostEnabled
    }

    /**
     * Test the property 'overtimeByLocationEnabled'
     */
    @Test
    public void overtimeByLocationEnabledTest() {
        // TODO: test overtimeByLocationEnabled
    }

    /**
     * Test the property 'autoBreakEnabled'
     */
    @Test
    public void autoBreakEnabledTest() {
        // TODO: test autoBreakEnabled
    }

    /**
     * Test the property 'autoBreakHours'
     */
    @Test
    public void autoBreakHoursTest() {
        // TODO: test autoBreakHours
    }

    /**
     * Test the property 'autoBreakMinutes'
     */
    @Test
    public void autoBreakMinutesTest() {
        // TODO: test autoBreakMinutes
    }

    /**
     * Test the property 'autoBreakHours2'
     */
    @Test
    public void autoBreakHours2Test() {
        // TODO: test autoBreakHours2
    }

    /**
     * Test the property 'autoBreakMinutes2'
     */
    @Test
    public void autoBreakMinutes2Test() {
        // TODO: test autoBreakMinutes2
    }

    /**
     * Test the property 'overtimeEnabled'
     */
    @Test
    public void overtimeEnabledTest() {
        // TODO: test overtimeEnabled
    }

    /**
     * Test the property 'dailyOvertimeThreshold'
     */
    @Test
    public void dailyOvertimeThresholdTest() {
        // TODO: test dailyOvertimeThreshold
    }

    /**
     * Test the property 'dailyOvertimeMultiplier'
     */
    @Test
    public void dailyOvertimeMultiplierTest() {
        // TODO: test dailyOvertimeMultiplier
    }

    /**
     * Test the property 'premiumOvertimeThreshold'
     */
    @Test
    public void premiumOvertimeThresholdTest() {
        // TODO: test premiumOvertimeThreshold
    }

    /**
     * Test the property 'premiumOvertimeMultiplier'
     */
    @Test
    public void premiumOvertimeMultiplierTest() {
        // TODO: test premiumOvertimeMultiplier
    }

    /**
     * Test the property 'weeklyOvertimeThreshold'
     */
    @Test
    public void weeklyOvertimeThresholdTest() {
        // TODO: test weeklyOvertimeThreshold
    }

    /**
     * Test the property 'weeklyOvertimeMultiplier'
     */
    @Test
    public void weeklyOvertimeMultiplierTest() {
        // TODO: test weeklyOvertimeMultiplier
    }

    /**
     * Test the property 'otAlertsEnabled'
     */
    @Test
    public void otAlertsEnabledTest() {
        // TODO: test otAlertsEnabled
    }

    /**
     * Test the property 'otAlertsBufferMinutes'
     */
    @Test
    public void otAlertsBufferMinutesTest() {
        // TODO: test otAlertsBufferMinutes
    }

    /**
     * Test the property 'splitHoursOnHolidays'
     */
    @Test
    public void splitHoursOnHolidaysTest() {
        // TODO: test splitHoursOnHolidays
    }

    /**
     * Test the property 'wageBasedRolesEnabled'
     */
    @Test
    public void wageBasedRolesEnabledTest() {
        // TODO: test wageBasedRolesEnabled
    }

    /**
     * Test the property 'jurisdiction'
     */
    @Test
    public void jurisdictionTest() {
        // TODO: test jurisdiction
    }

    /**
     * Test the property 'isCustom'
     */
    @Test
    public void isCustomTest() {
        // TODO: test isCustom
    }

    /**
     * Test the property 'useJurisdictionMinimumWageForOt'
     */
    @Test
    public void useJurisdictionMinimumWageForOtTest() {
        // TODO: test useJurisdictionMinimumWageForOt
    }

}
