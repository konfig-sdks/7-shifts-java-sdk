/*
 * 7shifts API
 * 7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.
 *
 * The version of the OpenAPI document: 2023-05-01
 * Contact: api-support@7shifts.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.util.UUID;
import com.konfigthis.client.model.WebhooksCreateRequest;
import com.konfigthis.client.model.WebhooksCreateResponse;
import com.konfigthis.client.model.WebhooksListResponse;
import com.konfigthis.client.model.WebhooksUpdateRequest;
import com.konfigthis.client.model.WebhooksUpdateResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhooksApi
 */
@Disabled
public class WebhooksApiTest {

    private static WebhooksApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new WebhooksApi(apiClient);
    }

    /**
     * Create Webhook
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        String url = null;
        String method = null;
        String event = null;
        Long companyId = null;
        String xApiVersion = null;
        UUID xCompanyGuid = null;
        WebhooksCreateResponse response = api.create(url, method, event, companyId)
                .xApiVersion(xApiVersion)
                .xCompanyGuid(xCompanyGuid)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Webhook
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteWebhookByIdTest() throws ApiException {
        Long companyId = null;
        Long webhookId = null;
        String xApiVersion = null;
        UUID xCompanyGuid = null;
        api.deleteWebhookById(companyId, webhookId)
                .xApiVersion(xApiVersion)
                .xCompanyGuid(xCompanyGuid)
                .execute();
        // TODO: test validations
    }

    /**
     * Test Webhook
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWebhookTest() throws ApiException {
        Integer companyId = null;
        String topic = null;
        String xApiVersion = null;
        UUID xCompanyGuid = null;
        Long webhookId = null;
        Object response = api.getWebhook(companyId, topic)
                .xApiVersion(xApiVersion)
                .xCompanyGuid(xCompanyGuid)
                .webhookId(webhookId)
                .execute();
        // TODO: test validations
    }

    /**
     * List Webhooks
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        Long companyId = null;
        String xApiVersion = null;
        UUID xCompanyGuid = null;
        String modifiedSince = null;
        String cursor = null;
        Long limit = null;
        WebhooksListResponse response = api.list(companyId)
                .xApiVersion(xApiVersion)
                .xCompanyGuid(xCompanyGuid)
                .modifiedSince(modifiedSince)
                .cursor(cursor)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     * Update Webhook
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        String url = null;
        Long companyId = null;
        Long webhookId = null;
        String xApiVersion = null;
        UUID xCompanyGuid = null;
        WebhooksUpdateResponse response = api.update(url, companyId, webhookId)
                .xApiVersion(xApiVersion)
                .xCompanyGuid(xCompanyGuid)
                .execute();
        // TODO: test validations
    }

}
