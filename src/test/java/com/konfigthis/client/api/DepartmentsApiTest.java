/*
 * 7shifts API
 * 7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.
 *
 * The version of the OpenAPI document: 2023-05-01
 * Contact: api-support@7shifts.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.DepartmentsCreateNewDepartmentRequest;
import com.konfigthis.client.model.DepartmentsCreateNewDepartmentResponse;
import com.konfigthis.client.model.DepartmentsGetDepartmentResponse;
import com.konfigthis.client.model.DepartmentsListResponse;
import com.konfigthis.client.model.DepartmentsUpdateDepartmentRequest;
import com.konfigthis.client.model.DepartmentsUpdateDepartmentResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DepartmentsApi
 */
@Disabled
public class DepartmentsApiTest {

    private static DepartmentsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new DepartmentsApi(apiClient);
    }

    /**
     * Create Department
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewDepartmentTest() throws ApiException {
        Double locationId = null;
        String name = null;
        Boolean _default = null;
        Long companyId = null;
        String xApiVersion = null;
        UUID xCompanyGuid = null;
        DepartmentsCreateNewDepartmentResponse response = api.createNewDepartment(locationId, name, _default, companyId)
                .xApiVersion(xApiVersion)
                .xCompanyGuid(xCompanyGuid)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Department
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteByIdTest() throws ApiException {
        Long companyId = null;
        Long departmentId = null;
        String xApiVersion = null;
        UUID xCompanyGuid = null;
        Long transferTo = null;
        api.deleteById(companyId, departmentId)
                .xApiVersion(xApiVersion)
                .xCompanyGuid(xCompanyGuid)
                .transferTo(transferTo)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve Department
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDepartmentTest() throws ApiException {
        Long companyId = null;
        Long departmentId = null;
        String xApiVersion = null;
        UUID xCompanyGuid = null;
        DepartmentsGetDepartmentResponse response = api.getDepartment(companyId, departmentId)
                .xApiVersion(xApiVersion)
                .xCompanyGuid(xCompanyGuid)
                .execute();
        // TODO: test validations
    }

    /**
     * List Departments
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        Long companyId = null;
        String xApiVersion = null;
        UUID xCompanyGuid = null;
        String modifiedSince = null;
        String cursor = null;
        Long limit = null;
        Long locationId = null;
        DepartmentsListResponse response = api.list(companyId)
                .xApiVersion(xApiVersion)
                .xCompanyGuid(xCompanyGuid)
                .modifiedSince(modifiedSince)
                .cursor(cursor)
                .limit(limit)
                .locationId(locationId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update Department
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDepartmentTest() throws ApiException {
        String name = null;
        Boolean _default = null;
        Long companyId = null;
        Long departmentId = null;
        String xApiVersion = null;
        UUID xCompanyGuid = null;
        DepartmentsUpdateDepartmentResponse response = api.updateDepartment(name, _default, companyId, departmentId)
                .xApiVersion(xApiVersion)
                .xCompanyGuid(xCompanyGuid)
                .execute();
        // TODO: test validations
    }

}
