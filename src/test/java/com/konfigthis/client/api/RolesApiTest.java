/*
 * 7shifts API
 * 7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.
 *
 * The version of the OpenAPI document: 2023-05-01
 * Contact: api-support@7shifts.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.RolesCreateRoleRequest;
import com.konfigthis.client.model.RolesCreateRoleRequestStationsInner;
import com.konfigthis.client.model.RolesCreateRoleResponse;
import com.konfigthis.client.model.RolesGetRoleResponse;
import com.konfigthis.client.model.RolesListResponse;
import com.konfigthis.client.model.RolesUpdateRoleByIdRequest;
import com.konfigthis.client.model.RolesUpdateRoleByIdRequestStationsInner;
import com.konfigthis.client.model.RolesUpdateRoleByIdResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RolesApi
 */
@Disabled
public class RolesApiTest {

    private static RolesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new RolesApi(apiClient);
    }

    /**
     * Create Role
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRoleTest() throws ApiException {
        String name = null;
        String color = null;
        Integer locationId = null;
        Integer departmentId = null;
        Long companyId = null;
        Integer sort = null;
        String jobCode = null;
        List<RolesCreateRoleRequestStationsInner> stations = null;
        String xApiVersion = null;
        UUID xCompanyGuid = null;
        RolesCreateRoleResponse response = api.createRole(name, color, locationId, departmentId, companyId)
                .sort(sort)
                .jobCode(jobCode)
                .stations(stations)
                .xApiVersion(xApiVersion)
                .xCompanyGuid(xCompanyGuid)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Role
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRoleTest() throws ApiException {
        Long companyId = null;
        Long roleId = null;
        String xApiVersion = null;
        UUID xCompanyGuid = null;
        api.deleteRole(companyId, roleId)
                .xApiVersion(xApiVersion)
                .xCompanyGuid(xCompanyGuid)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve Role
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRoleTest() throws ApiException {
        Long companyId = null;
        Long roleId = null;
        String xApiVersion = null;
        UUID xCompanyGuid = null;
        RolesGetRoleResponse response = api.getRole(companyId, roleId)
                .xApiVersion(xApiVersion)
                .xCompanyGuid(xCompanyGuid)
                .execute();
        // TODO: test validations
    }

    /**
     * List Roles
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        Long companyId = null;
        String xApiVersion = null;
        UUID xCompanyGuid = null;
        Long locationId = null;
        Long departmentId = null;
        List<Long> ids = null;
        String modifiedSince = null;
        String cursor = null;
        Long limit = null;
        RolesListResponse response = api.list(companyId)
                .xApiVersion(xApiVersion)
                .xCompanyGuid(xCompanyGuid)
                .locationId(locationId)
                .departmentId(departmentId)
                .ids(ids)
                .modifiedSince(modifiedSince)
                .cursor(cursor)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     * Update Role
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRoleByIdTest() throws ApiException {
        Long companyId = null;
        Long roleId = null;
        Integer departmentId = null;
        Integer sort = null;
        String color = null;
        String name = null;
        String jobCode = null;
        List<RolesUpdateRoleByIdRequestStationsInner> stations = null;
        String xApiVersion = null;
        UUID xCompanyGuid = null;
        RolesUpdateRoleByIdResponse response = api.updateRoleById(companyId, roleId)
                .departmentId(departmentId)
                .sort(sort)
                .color(color)
                .name(name)
                .jobCode(jobCode)
                .stations(stations)
                .xApiVersion(xApiVersion)
                .xCompanyGuid(xCompanyGuid)
                .execute();
        // TODO: test validations
    }

}
