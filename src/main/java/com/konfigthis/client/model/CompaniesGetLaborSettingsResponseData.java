/*
 * 7shifts API
 * 7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.
 *
 * The version of the OpenAPI document: 2023-05-01
 * Contact: api-support@7shifts.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CompaniesGetLaborSettingsResponseData
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CompaniesGetLaborSettingsResponseData {
  public static final String SERIALIZED_NAME_COMPANY_ID = "company_id";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private Integer companyId;

  public static final String SERIALIZED_NAME_CONSECUTIVE_DAYS_THRESHOLD = "consecutive_days_threshold";
  @SerializedName(SERIALIZED_NAME_CONSECUTIVE_DAYS_THRESHOLD)
  private Integer consecutiveDaysThreshold;

  public static final String SERIALIZED_NAME_CONSECUTIVE_DAYS_MULTIPLIER = "consecutive_days_multiplier";
  @SerializedName(SERIALIZED_NAME_CONSECUTIVE_DAYS_MULTIPLIER)
  private Double consecutiveDaysMultiplier;

  public static final String SERIALIZED_NAME_REGULAR_RATE_OF_PAY_ENABLED = "regular_rate_of_pay_enabled";
  @SerializedName(SERIALIZED_NAME_REGULAR_RATE_OF_PAY_ENABLED)
  private Boolean regularRateOfPayEnabled;

  public static final String SERIALIZED_NAME_EXCEPTION_COST_ENABLED = "exception_cost_enabled";
  @SerializedName(SERIALIZED_NAME_EXCEPTION_COST_ENABLED)
  private Boolean exceptionCostEnabled;

  public static final String SERIALIZED_NAME_OVERTIME_BY_LOCATION_ENABLED = "overtime_by_location_enabled";
  @SerializedName(SERIALIZED_NAME_OVERTIME_BY_LOCATION_ENABLED)
  private Boolean overtimeByLocationEnabled;

  public static final String SERIALIZED_NAME_AUTO_BREAK_ENABLED = "auto_break_enabled";
  @SerializedName(SERIALIZED_NAME_AUTO_BREAK_ENABLED)
  private Boolean autoBreakEnabled;

  public static final String SERIALIZED_NAME_AUTO_BREAK_HOURS = "auto_break_hours";
  @SerializedName(SERIALIZED_NAME_AUTO_BREAK_HOURS)
  private Double autoBreakHours;

  public static final String SERIALIZED_NAME_AUTO_BREAK_MINUTES = "auto_break_minutes";
  @SerializedName(SERIALIZED_NAME_AUTO_BREAK_MINUTES)
  private Integer autoBreakMinutes;

  public static final String SERIALIZED_NAME_AUTO_BREAK_HOURS2 = "auto_break_hours_2";
  @SerializedName(SERIALIZED_NAME_AUTO_BREAK_HOURS2)
  private Double autoBreakHours2;

  public static final String SERIALIZED_NAME_AUTO_BREAK_MINUTES2 = "auto_break_minutes_2";
  @SerializedName(SERIALIZED_NAME_AUTO_BREAK_MINUTES2)
  private Integer autoBreakMinutes2;

  public static final String SERIALIZED_NAME_OVERTIME_ENABLED = "overtime_enabled";
  @SerializedName(SERIALIZED_NAME_OVERTIME_ENABLED)
  private Boolean overtimeEnabled;

  public static final String SERIALIZED_NAME_DAILY_OVERTIME_THRESHOLD = "daily_overtime_threshold";
  @SerializedName(SERIALIZED_NAME_DAILY_OVERTIME_THRESHOLD)
  private Double dailyOvertimeThreshold;

  public static final String SERIALIZED_NAME_DAILY_OVERTIME_MULTIPLIER = "daily_overtime_multiplier";
  @SerializedName(SERIALIZED_NAME_DAILY_OVERTIME_MULTIPLIER)
  private Double dailyOvertimeMultiplier;

  public static final String SERIALIZED_NAME_PREMIUM_OVERTIME_THRESHOLD = "premium_overtime_threshold";
  @SerializedName(SERIALIZED_NAME_PREMIUM_OVERTIME_THRESHOLD)
  private Integer premiumOvertimeThreshold;

  public static final String SERIALIZED_NAME_PREMIUM_OVERTIME_MULTIPLIER = "premium_overtime_multiplier";
  @SerializedName(SERIALIZED_NAME_PREMIUM_OVERTIME_MULTIPLIER)
  private Double premiumOvertimeMultiplier;

  public static final String SERIALIZED_NAME_WEEKLY_OVERTIME_THRESHOLD = "weekly_overtime_threshold";
  @SerializedName(SERIALIZED_NAME_WEEKLY_OVERTIME_THRESHOLD)
  private Double weeklyOvertimeThreshold;

  public static final String SERIALIZED_NAME_WEEKLY_OVERTIME_MULTIPLIER = "weekly_overtime_multiplier";
  @SerializedName(SERIALIZED_NAME_WEEKLY_OVERTIME_MULTIPLIER)
  private Double weeklyOvertimeMultiplier;

  public static final String SERIALIZED_NAME_OT_ALERTS_ENABLED = "ot_alerts_enabled";
  @SerializedName(SERIALIZED_NAME_OT_ALERTS_ENABLED)
  private Boolean otAlertsEnabled;

  public static final String SERIALIZED_NAME_OT_ALERTS_BUFFER_MINUTES = "ot_alerts_buffer_minutes";
  @SerializedName(SERIALIZED_NAME_OT_ALERTS_BUFFER_MINUTES)
  private Integer otAlertsBufferMinutes;

  public static final String SERIALIZED_NAME_SPLIT_HOURS_ON_HOLIDAYS = "split_hours_on_holidays";
  @SerializedName(SERIALIZED_NAME_SPLIT_HOURS_ON_HOLIDAYS)
  private Boolean splitHoursOnHolidays;

  public static final String SERIALIZED_NAME_WAGE_BASED_ROLES_ENABLED = "wage_based_roles_enabled";
  @SerializedName(SERIALIZED_NAME_WAGE_BASED_ROLES_ENABLED)
  private Boolean wageBasedRolesEnabled;

  public static final String SERIALIZED_NAME_JURISDICTION = "jurisdiction";
  @SerializedName(SERIALIZED_NAME_JURISDICTION)
  private String jurisdiction;

  public static final String SERIALIZED_NAME_IS_CUSTOM = "is_custom";
  @SerializedName(SERIALIZED_NAME_IS_CUSTOM)
  private Boolean isCustom;

  public static final String SERIALIZED_NAME_USE_JURISDICTION_MINIMUM_WAGE_FOR_OT = "use_jurisdiction_minimum_wage_for_ot";
  @SerializedName(SERIALIZED_NAME_USE_JURISDICTION_MINIMUM_WAGE_FOR_OT)
  private Boolean useJurisdictionMinimumWageForOt;

  public CompaniesGetLaborSettingsResponseData() {
  }

  public CompaniesGetLaborSettingsResponseData companyId(Integer companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getCompanyId() {
    return companyId;
  }


  public void setCompanyId(Integer companyId) {
    
    
    
    this.companyId = companyId;
  }


  public CompaniesGetLaborSettingsResponseData consecutiveDaysThreshold(Integer consecutiveDaysThreshold) {
    
    
    
    
    this.consecutiveDaysThreshold = consecutiveDaysThreshold;
    return this;
  }

   /**
   * Number of consecutive days threshold an employee works before overtime
   * @return consecutiveDaysThreshold
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Number of consecutive days threshold an employee works before overtime")

  public Integer getConsecutiveDaysThreshold() {
    return consecutiveDaysThreshold;
  }


  public void setConsecutiveDaysThreshold(Integer consecutiveDaysThreshold) {
    
    
    
    this.consecutiveDaysThreshold = consecutiveDaysThreshold;
  }


  public CompaniesGetLaborSettingsResponseData consecutiveDaysMultiplier(Double consecutiveDaysMultiplier) {
    
    
    
    
    this.consecutiveDaysMultiplier = consecutiveDaysMultiplier;
    return this;
  }

  public CompaniesGetLaborSettingsResponseData consecutiveDaysMultiplier(Integer consecutiveDaysMultiplier) {
    
    
    
    
    this.consecutiveDaysMultiplier = consecutiveDaysMultiplier.doubleValue();
    return this;
  }

   /**
   * The overtime pay multiplier
   * @return consecutiveDaysMultiplier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The overtime pay multiplier")

  public Double getConsecutiveDaysMultiplier() {
    return consecutiveDaysMultiplier;
  }


  public void setConsecutiveDaysMultiplier(Double consecutiveDaysMultiplier) {
    
    
    
    this.consecutiveDaysMultiplier = consecutiveDaysMultiplier;
  }


  public CompaniesGetLaborSettingsResponseData regularRateOfPayEnabled(Boolean regularRateOfPayEnabled) {
    
    
    
    
    this.regularRateOfPayEnabled = regularRateOfPayEnabled;
    return this;
  }

   /**
   * When true, the regular rate of pay considers the number of hours worked at different pay rates while calculating overtime
   * @return regularRateOfPayEnabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When true, the regular rate of pay considers the number of hours worked at different pay rates while calculating overtime")

  public Boolean getRegularRateOfPayEnabled() {
    return regularRateOfPayEnabled;
  }


  public void setRegularRateOfPayEnabled(Boolean regularRateOfPayEnabled) {
    
    
    
    this.regularRateOfPayEnabled = regularRateOfPayEnabled;
  }


  public CompaniesGetLaborSettingsResponseData exceptionCostEnabled(Boolean exceptionCostEnabled) {
    
    
    
    
    this.exceptionCostEnabled = exceptionCostEnabled;
    return this;
  }

   /**
   * When true, exception costs are displayed in reports
   * @return exceptionCostEnabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When true, exception costs are displayed in reports")

  public Boolean getExceptionCostEnabled() {
    return exceptionCostEnabled;
  }


  public void setExceptionCostEnabled(Boolean exceptionCostEnabled) {
    
    
    
    this.exceptionCostEnabled = exceptionCostEnabled;
  }


  public CompaniesGetLaborSettingsResponseData overtimeByLocationEnabled(Boolean overtimeByLocationEnabled) {
    
    
    
    
    this.overtimeByLocationEnabled = overtimeByLocationEnabled;
    return this;
  }

   /**
   * Get overtimeByLocationEnabled
   * @return overtimeByLocationEnabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getOvertimeByLocationEnabled() {
    return overtimeByLocationEnabled;
  }


  public void setOvertimeByLocationEnabled(Boolean overtimeByLocationEnabled) {
    
    
    
    this.overtimeByLocationEnabled = overtimeByLocationEnabled;
  }


  public CompaniesGetLaborSettingsResponseData autoBreakEnabled(Boolean autoBreakEnabled) {
    
    
    
    
    this.autoBreakEnabled = autoBreakEnabled;
    return this;
  }

   /**
   * When true, use break conditions to alter labor costs and hour
   * @return autoBreakEnabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When true, use break conditions to alter labor costs and hour")

  public Boolean getAutoBreakEnabled() {
    return autoBreakEnabled;
  }


  public void setAutoBreakEnabled(Boolean autoBreakEnabled) {
    
    
    
    this.autoBreakEnabled = autoBreakEnabled;
  }


  public CompaniesGetLaborSettingsResponseData autoBreakHours(Double autoBreakHours) {
    
    
    
    
    this.autoBreakHours = autoBreakHours;
    return this;
  }

  public CompaniesGetLaborSettingsResponseData autoBreakHours(Integer autoBreakHours) {
    
    
    
    
    this.autoBreakHours = autoBreakHours.doubleValue();
    return this;
  }

   /**
   * Get autoBreakHours
   * @return autoBreakHours
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getAutoBreakHours() {
    return autoBreakHours;
  }


  public void setAutoBreakHours(Double autoBreakHours) {
    
    
    
    this.autoBreakHours = autoBreakHours;
  }


  public CompaniesGetLaborSettingsResponseData autoBreakMinutes(Integer autoBreakMinutes) {
    
    
    
    
    this.autoBreakMinutes = autoBreakMinutes;
    return this;
  }

   /**
   * Get autoBreakMinutes
   * @return autoBreakMinutes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getAutoBreakMinutes() {
    return autoBreakMinutes;
  }


  public void setAutoBreakMinutes(Integer autoBreakMinutes) {
    
    
    
    this.autoBreakMinutes = autoBreakMinutes;
  }


  public CompaniesGetLaborSettingsResponseData autoBreakHours2(Double autoBreakHours2) {
    
    
    
    
    this.autoBreakHours2 = autoBreakHours2;
    return this;
  }

  public CompaniesGetLaborSettingsResponseData autoBreakHours2(Integer autoBreakHours2) {
    
    
    
    
    this.autoBreakHours2 = autoBreakHours2.doubleValue();
    return this;
  }

   /**
   * Get autoBreakHours2
   * @return autoBreakHours2
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getAutoBreakHours2() {
    return autoBreakHours2;
  }


  public void setAutoBreakHours2(Double autoBreakHours2) {
    
    
    
    this.autoBreakHours2 = autoBreakHours2;
  }


  public CompaniesGetLaborSettingsResponseData autoBreakMinutes2(Integer autoBreakMinutes2) {
    
    
    
    
    this.autoBreakMinutes2 = autoBreakMinutes2;
    return this;
  }

   /**
   * Get autoBreakMinutes2
   * @return autoBreakMinutes2
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getAutoBreakMinutes2() {
    return autoBreakMinutes2;
  }


  public void setAutoBreakMinutes2(Integer autoBreakMinutes2) {
    
    
    
    this.autoBreakMinutes2 = autoBreakMinutes2;
  }


  public CompaniesGetLaborSettingsResponseData overtimeEnabled(Boolean overtimeEnabled) {
    
    
    
    
    this.overtimeEnabled = overtimeEnabled;
    return this;
  }

   /**
   * Get overtimeEnabled
   * @return overtimeEnabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getOvertimeEnabled() {
    return overtimeEnabled;
  }


  public void setOvertimeEnabled(Boolean overtimeEnabled) {
    
    
    
    this.overtimeEnabled = overtimeEnabled;
  }


  public CompaniesGetLaborSettingsResponseData dailyOvertimeThreshold(Double dailyOvertimeThreshold) {
    
    
    
    
    this.dailyOvertimeThreshold = dailyOvertimeThreshold;
    return this;
  }

  public CompaniesGetLaborSettingsResponseData dailyOvertimeThreshold(Integer dailyOvertimeThreshold) {
    
    
    
    
    this.dailyOvertimeThreshold = dailyOvertimeThreshold.doubleValue();
    return this;
  }

   /**
   * Get dailyOvertimeThreshold
   * @return dailyOvertimeThreshold
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getDailyOvertimeThreshold() {
    return dailyOvertimeThreshold;
  }


  public void setDailyOvertimeThreshold(Double dailyOvertimeThreshold) {
    
    
    
    this.dailyOvertimeThreshold = dailyOvertimeThreshold;
  }


  public CompaniesGetLaborSettingsResponseData dailyOvertimeMultiplier(Double dailyOvertimeMultiplier) {
    
    
    
    
    this.dailyOvertimeMultiplier = dailyOvertimeMultiplier;
    return this;
  }

  public CompaniesGetLaborSettingsResponseData dailyOvertimeMultiplier(Integer dailyOvertimeMultiplier) {
    
    
    
    
    this.dailyOvertimeMultiplier = dailyOvertimeMultiplier.doubleValue();
    return this;
  }

   /**
   * Get dailyOvertimeMultiplier
   * @return dailyOvertimeMultiplier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getDailyOvertimeMultiplier() {
    return dailyOvertimeMultiplier;
  }


  public void setDailyOvertimeMultiplier(Double dailyOvertimeMultiplier) {
    
    
    
    this.dailyOvertimeMultiplier = dailyOvertimeMultiplier;
  }


  public CompaniesGetLaborSettingsResponseData premiumOvertimeThreshold(Integer premiumOvertimeThreshold) {
    
    
    
    
    this.premiumOvertimeThreshold = premiumOvertimeThreshold;
    return this;
  }

   /**
   * Get premiumOvertimeThreshold
   * @return premiumOvertimeThreshold
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Integer getPremiumOvertimeThreshold() {
    return premiumOvertimeThreshold;
  }


  public void setPremiumOvertimeThreshold(Integer premiumOvertimeThreshold) {
    
    
    
    this.premiumOvertimeThreshold = premiumOvertimeThreshold;
  }


  public CompaniesGetLaborSettingsResponseData premiumOvertimeMultiplier(Double premiumOvertimeMultiplier) {
    
    
    
    
    this.premiumOvertimeMultiplier = premiumOvertimeMultiplier;
    return this;
  }

  public CompaniesGetLaborSettingsResponseData premiumOvertimeMultiplier(Integer premiumOvertimeMultiplier) {
    
    
    
    
    this.premiumOvertimeMultiplier = premiumOvertimeMultiplier.doubleValue();
    return this;
  }

   /**
   * Get premiumOvertimeMultiplier
   * @return premiumOvertimeMultiplier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Double getPremiumOvertimeMultiplier() {
    return premiumOvertimeMultiplier;
  }


  public void setPremiumOvertimeMultiplier(Double premiumOvertimeMultiplier) {
    
    
    
    this.premiumOvertimeMultiplier = premiumOvertimeMultiplier;
  }


  public CompaniesGetLaborSettingsResponseData weeklyOvertimeThreshold(Double weeklyOvertimeThreshold) {
    
    
    
    
    this.weeklyOvertimeThreshold = weeklyOvertimeThreshold;
    return this;
  }

  public CompaniesGetLaborSettingsResponseData weeklyOvertimeThreshold(Integer weeklyOvertimeThreshold) {
    
    
    
    
    this.weeklyOvertimeThreshold = weeklyOvertimeThreshold.doubleValue();
    return this;
  }

   /**
   * Get weeklyOvertimeThreshold
   * @return weeklyOvertimeThreshold
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getWeeklyOvertimeThreshold() {
    return weeklyOvertimeThreshold;
  }


  public void setWeeklyOvertimeThreshold(Double weeklyOvertimeThreshold) {
    
    
    
    this.weeklyOvertimeThreshold = weeklyOvertimeThreshold;
  }


  public CompaniesGetLaborSettingsResponseData weeklyOvertimeMultiplier(Double weeklyOvertimeMultiplier) {
    
    
    
    
    this.weeklyOvertimeMultiplier = weeklyOvertimeMultiplier;
    return this;
  }

  public CompaniesGetLaborSettingsResponseData weeklyOvertimeMultiplier(Integer weeklyOvertimeMultiplier) {
    
    
    
    
    this.weeklyOvertimeMultiplier = weeklyOvertimeMultiplier.doubleValue();
    return this;
  }

   /**
   * Get weeklyOvertimeMultiplier
   * @return weeklyOvertimeMultiplier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getWeeklyOvertimeMultiplier() {
    return weeklyOvertimeMultiplier;
  }


  public void setWeeklyOvertimeMultiplier(Double weeklyOvertimeMultiplier) {
    
    
    
    this.weeklyOvertimeMultiplier = weeklyOvertimeMultiplier;
  }


  public CompaniesGetLaborSettingsResponseData otAlertsEnabled(Boolean otAlertsEnabled) {
    
    
    
    
    this.otAlertsEnabled = otAlertsEnabled;
    return this;
  }

   /**
   * Get otAlertsEnabled
   * @return otAlertsEnabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getOtAlertsEnabled() {
    return otAlertsEnabled;
  }


  public void setOtAlertsEnabled(Boolean otAlertsEnabled) {
    
    
    
    this.otAlertsEnabled = otAlertsEnabled;
  }


  public CompaniesGetLaborSettingsResponseData otAlertsBufferMinutes(Integer otAlertsBufferMinutes) {
    
    
    
    
    this.otAlertsBufferMinutes = otAlertsBufferMinutes;
    return this;
  }

   /**
   * Get otAlertsBufferMinutes
   * @return otAlertsBufferMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Integer getOtAlertsBufferMinutes() {
    return otAlertsBufferMinutes;
  }


  public void setOtAlertsBufferMinutes(Integer otAlertsBufferMinutes) {
    
    
    
    this.otAlertsBufferMinutes = otAlertsBufferMinutes;
  }


  public CompaniesGetLaborSettingsResponseData splitHoursOnHolidays(Boolean splitHoursOnHolidays) {
    
    
    
    
    this.splitHoursOnHolidays = splitHoursOnHolidays;
    return this;
  }

   /**
   * Get splitHoursOnHolidays
   * @return splitHoursOnHolidays
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getSplitHoursOnHolidays() {
    return splitHoursOnHolidays;
  }


  public void setSplitHoursOnHolidays(Boolean splitHoursOnHolidays) {
    
    
    
    this.splitHoursOnHolidays = splitHoursOnHolidays;
  }


  public CompaniesGetLaborSettingsResponseData wageBasedRolesEnabled(Boolean wageBasedRolesEnabled) {
    
    
    
    
    this.wageBasedRolesEnabled = wageBasedRolesEnabled;
    return this;
  }

   /**
   * When true, allows employees to have a separate wage for
   * @return wageBasedRolesEnabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When true, allows employees to have a separate wage for")

  public Boolean getWageBasedRolesEnabled() {
    return wageBasedRolesEnabled;
  }


  public void setWageBasedRolesEnabled(Boolean wageBasedRolesEnabled) {
    
    
    
    this.wageBasedRolesEnabled = wageBasedRolesEnabled;
  }


  public CompaniesGetLaborSettingsResponseData jurisdiction(String jurisdiction) {
    
    
    
    
    this.jurisdiction = jurisdiction;
    return this;
  }

   /**
   * Get jurisdiction
   * @return jurisdiction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getJurisdiction() {
    return jurisdiction;
  }


  public void setJurisdiction(String jurisdiction) {
    
    
    
    this.jurisdiction = jurisdiction;
  }


  public CompaniesGetLaborSettingsResponseData isCustom(Boolean isCustom) {
    
    
    
    
    this.isCustom = isCustom;
    return this;
  }

   /**
   * Get isCustom
   * @return isCustom
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getIsCustom() {
    return isCustom;
  }


  public void setIsCustom(Boolean isCustom) {
    
    
    
    this.isCustom = isCustom;
  }


  public CompaniesGetLaborSettingsResponseData useJurisdictionMinimumWageForOt(Boolean useJurisdictionMinimumWageForOt) {
    
    
    
    
    this.useJurisdictionMinimumWageForOt = useJurisdictionMinimumWageForOt;
    return this;
  }

   /**
   * When true, minimum wage will be used when calculating overtime pay
   * @return useJurisdictionMinimumWageForOt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When true, minimum wage will be used when calculating overtime pay")

  public Boolean getUseJurisdictionMinimumWageForOt() {
    return useJurisdictionMinimumWageForOt;
  }


  public void setUseJurisdictionMinimumWageForOt(Boolean useJurisdictionMinimumWageForOt) {
    
    
    
    this.useJurisdictionMinimumWageForOt = useJurisdictionMinimumWageForOt;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CompaniesGetLaborSettingsResponseData instance itself
   */
  public CompaniesGetLaborSettingsResponseData putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompaniesGetLaborSettingsResponseData companiesGetLaborSettingsResponseData = (CompaniesGetLaborSettingsResponseData) o;
    return Objects.equals(this.companyId, companiesGetLaborSettingsResponseData.companyId) &&
        Objects.equals(this.consecutiveDaysThreshold, companiesGetLaborSettingsResponseData.consecutiveDaysThreshold) &&
        Objects.equals(this.consecutiveDaysMultiplier, companiesGetLaborSettingsResponseData.consecutiveDaysMultiplier) &&
        Objects.equals(this.regularRateOfPayEnabled, companiesGetLaborSettingsResponseData.regularRateOfPayEnabled) &&
        Objects.equals(this.exceptionCostEnabled, companiesGetLaborSettingsResponseData.exceptionCostEnabled) &&
        Objects.equals(this.overtimeByLocationEnabled, companiesGetLaborSettingsResponseData.overtimeByLocationEnabled) &&
        Objects.equals(this.autoBreakEnabled, companiesGetLaborSettingsResponseData.autoBreakEnabled) &&
        Objects.equals(this.autoBreakHours, companiesGetLaborSettingsResponseData.autoBreakHours) &&
        Objects.equals(this.autoBreakMinutes, companiesGetLaborSettingsResponseData.autoBreakMinutes) &&
        Objects.equals(this.autoBreakHours2, companiesGetLaborSettingsResponseData.autoBreakHours2) &&
        Objects.equals(this.autoBreakMinutes2, companiesGetLaborSettingsResponseData.autoBreakMinutes2) &&
        Objects.equals(this.overtimeEnabled, companiesGetLaborSettingsResponseData.overtimeEnabled) &&
        Objects.equals(this.dailyOvertimeThreshold, companiesGetLaborSettingsResponseData.dailyOvertimeThreshold) &&
        Objects.equals(this.dailyOvertimeMultiplier, companiesGetLaborSettingsResponseData.dailyOvertimeMultiplier) &&
        Objects.equals(this.premiumOvertimeThreshold, companiesGetLaborSettingsResponseData.premiumOvertimeThreshold) &&
        Objects.equals(this.premiumOvertimeMultiplier, companiesGetLaborSettingsResponseData.premiumOvertimeMultiplier) &&
        Objects.equals(this.weeklyOvertimeThreshold, companiesGetLaborSettingsResponseData.weeklyOvertimeThreshold) &&
        Objects.equals(this.weeklyOvertimeMultiplier, companiesGetLaborSettingsResponseData.weeklyOvertimeMultiplier) &&
        Objects.equals(this.otAlertsEnabled, companiesGetLaborSettingsResponseData.otAlertsEnabled) &&
        Objects.equals(this.otAlertsBufferMinutes, companiesGetLaborSettingsResponseData.otAlertsBufferMinutes) &&
        Objects.equals(this.splitHoursOnHolidays, companiesGetLaborSettingsResponseData.splitHoursOnHolidays) &&
        Objects.equals(this.wageBasedRolesEnabled, companiesGetLaborSettingsResponseData.wageBasedRolesEnabled) &&
        Objects.equals(this.jurisdiction, companiesGetLaborSettingsResponseData.jurisdiction) &&
        Objects.equals(this.isCustom, companiesGetLaborSettingsResponseData.isCustom) &&
        Objects.equals(this.useJurisdictionMinimumWageForOt, companiesGetLaborSettingsResponseData.useJurisdictionMinimumWageForOt)&&
        Objects.equals(this.additionalProperties, companiesGetLaborSettingsResponseData.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyId, consecutiveDaysThreshold, consecutiveDaysMultiplier, regularRateOfPayEnabled, exceptionCostEnabled, overtimeByLocationEnabled, autoBreakEnabled, autoBreakHours, autoBreakMinutes, autoBreakHours2, autoBreakMinutes2, overtimeEnabled, dailyOvertimeThreshold, dailyOvertimeMultiplier, premiumOvertimeThreshold, premiumOvertimeMultiplier, weeklyOvertimeThreshold, weeklyOvertimeMultiplier, otAlertsEnabled, otAlertsBufferMinutes, splitHoursOnHolidays, wageBasedRolesEnabled, jurisdiction, isCustom, useJurisdictionMinimumWageForOt, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompaniesGetLaborSettingsResponseData {\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    consecutiveDaysThreshold: ").append(toIndentedString(consecutiveDaysThreshold)).append("\n");
    sb.append("    consecutiveDaysMultiplier: ").append(toIndentedString(consecutiveDaysMultiplier)).append("\n");
    sb.append("    regularRateOfPayEnabled: ").append(toIndentedString(regularRateOfPayEnabled)).append("\n");
    sb.append("    exceptionCostEnabled: ").append(toIndentedString(exceptionCostEnabled)).append("\n");
    sb.append("    overtimeByLocationEnabled: ").append(toIndentedString(overtimeByLocationEnabled)).append("\n");
    sb.append("    autoBreakEnabled: ").append(toIndentedString(autoBreakEnabled)).append("\n");
    sb.append("    autoBreakHours: ").append(toIndentedString(autoBreakHours)).append("\n");
    sb.append("    autoBreakMinutes: ").append(toIndentedString(autoBreakMinutes)).append("\n");
    sb.append("    autoBreakHours2: ").append(toIndentedString(autoBreakHours2)).append("\n");
    sb.append("    autoBreakMinutes2: ").append(toIndentedString(autoBreakMinutes2)).append("\n");
    sb.append("    overtimeEnabled: ").append(toIndentedString(overtimeEnabled)).append("\n");
    sb.append("    dailyOvertimeThreshold: ").append(toIndentedString(dailyOvertimeThreshold)).append("\n");
    sb.append("    dailyOvertimeMultiplier: ").append(toIndentedString(dailyOvertimeMultiplier)).append("\n");
    sb.append("    premiumOvertimeThreshold: ").append(toIndentedString(premiumOvertimeThreshold)).append("\n");
    sb.append("    premiumOvertimeMultiplier: ").append(toIndentedString(premiumOvertimeMultiplier)).append("\n");
    sb.append("    weeklyOvertimeThreshold: ").append(toIndentedString(weeklyOvertimeThreshold)).append("\n");
    sb.append("    weeklyOvertimeMultiplier: ").append(toIndentedString(weeklyOvertimeMultiplier)).append("\n");
    sb.append("    otAlertsEnabled: ").append(toIndentedString(otAlertsEnabled)).append("\n");
    sb.append("    otAlertsBufferMinutes: ").append(toIndentedString(otAlertsBufferMinutes)).append("\n");
    sb.append("    splitHoursOnHolidays: ").append(toIndentedString(splitHoursOnHolidays)).append("\n");
    sb.append("    wageBasedRolesEnabled: ").append(toIndentedString(wageBasedRolesEnabled)).append("\n");
    sb.append("    jurisdiction: ").append(toIndentedString(jurisdiction)).append("\n");
    sb.append("    isCustom: ").append(toIndentedString(isCustom)).append("\n");
    sb.append("    useJurisdictionMinimumWageForOt: ").append(toIndentedString(useJurisdictionMinimumWageForOt)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("company_id");
    openapiFields.add("consecutive_days_threshold");
    openapiFields.add("consecutive_days_multiplier");
    openapiFields.add("regular_rate_of_pay_enabled");
    openapiFields.add("exception_cost_enabled");
    openapiFields.add("overtime_by_location_enabled");
    openapiFields.add("auto_break_enabled");
    openapiFields.add("auto_break_hours");
    openapiFields.add("auto_break_minutes");
    openapiFields.add("auto_break_hours_2");
    openapiFields.add("auto_break_minutes_2");
    openapiFields.add("overtime_enabled");
    openapiFields.add("daily_overtime_threshold");
    openapiFields.add("daily_overtime_multiplier");
    openapiFields.add("premium_overtime_threshold");
    openapiFields.add("premium_overtime_multiplier");
    openapiFields.add("weekly_overtime_threshold");
    openapiFields.add("weekly_overtime_multiplier");
    openapiFields.add("ot_alerts_enabled");
    openapiFields.add("ot_alerts_buffer_minutes");
    openapiFields.add("split_hours_on_holidays");
    openapiFields.add("wage_based_roles_enabled");
    openapiFields.add("jurisdiction");
    openapiFields.add("is_custom");
    openapiFields.add("use_jurisdiction_minimum_wage_for_ot");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("company_id");
    openapiRequiredFields.add("consecutive_days_threshold");
    openapiRequiredFields.add("consecutive_days_multiplier");
    openapiRequiredFields.add("regular_rate_of_pay_enabled");
    openapiRequiredFields.add("exception_cost_enabled");
    openapiRequiredFields.add("overtime_by_location_enabled");
    openapiRequiredFields.add("auto_break_enabled");
    openapiRequiredFields.add("auto_break_hours");
    openapiRequiredFields.add("auto_break_minutes");
    openapiRequiredFields.add("auto_break_hours_2");
    openapiRequiredFields.add("auto_break_minutes_2");
    openapiRequiredFields.add("overtime_enabled");
    openapiRequiredFields.add("daily_overtime_threshold");
    openapiRequiredFields.add("daily_overtime_multiplier");
    openapiRequiredFields.add("premium_overtime_threshold");
    openapiRequiredFields.add("premium_overtime_multiplier");
    openapiRequiredFields.add("weekly_overtime_threshold");
    openapiRequiredFields.add("weekly_overtime_multiplier");
    openapiRequiredFields.add("ot_alerts_enabled");
    openapiRequiredFields.add("ot_alerts_buffer_minutes");
    openapiRequiredFields.add("split_hours_on_holidays");
    openapiRequiredFields.add("wage_based_roles_enabled");
    openapiRequiredFields.add("jurisdiction");
    openapiRequiredFields.add("is_custom");
    openapiRequiredFields.add("use_jurisdiction_minimum_wage_for_ot");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CompaniesGetLaborSettingsResponseData
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CompaniesGetLaborSettingsResponseData.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CompaniesGetLaborSettingsResponseData is not found in the empty JSON string", CompaniesGetLaborSettingsResponseData.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CompaniesGetLaborSettingsResponseData.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("jurisdiction").isJsonNull() && !jsonObj.get("jurisdiction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jurisdiction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jurisdiction").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CompaniesGetLaborSettingsResponseData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CompaniesGetLaborSettingsResponseData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CompaniesGetLaborSettingsResponseData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CompaniesGetLaborSettingsResponseData.class));

       return (TypeAdapter<T>) new TypeAdapter<CompaniesGetLaborSettingsResponseData>() {
           @Override
           public void write(JsonWriter out, CompaniesGetLaborSettingsResponseData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CompaniesGetLaborSettingsResponseData read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CompaniesGetLaborSettingsResponseData instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CompaniesGetLaborSettingsResponseData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CompaniesGetLaborSettingsResponseData
  * @throws IOException if the JSON string is invalid with respect to CompaniesGetLaborSettingsResponseData
  */
  public static CompaniesGetLaborSettingsResponseData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CompaniesGetLaborSettingsResponseData.class);
  }

 /**
  * Convert an instance of CompaniesGetLaborSettingsResponseData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

