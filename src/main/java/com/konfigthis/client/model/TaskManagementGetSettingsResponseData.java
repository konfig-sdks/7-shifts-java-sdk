/*
 * 7shifts API
 * 7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.
 *
 * The version of the OpenAPI document: 2023-05-01
 * Contact: api-support@7shifts.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * TaskManagementGetSettingsResponseData
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TaskManagementGetSettingsResponseData {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_COMPANY_ID = "company_id";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private Integer companyId;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_PROMPTED_AUTO_ASSIGN_IDS = "prompted_auto_assign_ids";
  @SerializedName(SERIALIZED_NAME_PROMPTED_AUTO_ASSIGN_IDS)
  private Boolean promptedAutoAssignIds;

  public static final String SERIALIZED_NAME_HAS_CREATED_LIST = "has_created_list";
  @SerializedName(SERIALIZED_NAME_HAS_CREATED_LIST)
  private Boolean hasCreatedList;

  public static final String SERIALIZED_NAME_CAN_USE_TASK_MANAGEMENT = "can_use_task_management";
  @SerializedName(SERIALIZED_NAME_CAN_USE_TASK_MANAGEMENT)
  private Boolean canUseTaskManagement;

  public static final String SERIALIZED_NAME_EMPLOYEE_LOGIN = "employee_login";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_LOGIN)
  private Boolean employeeLogin;

  public static final String SERIALIZED_NAME_EMPLOYEE_REMINDER = "employee_reminder";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_REMINDER)
  private Boolean employeeReminder;

  public static final String SERIALIZED_NAME_OVERDUE_ALERT = "overdue_alert";
  @SerializedName(SERIALIZED_NAME_OVERDUE_ALERT)
  private Boolean overdueAlert;

  public TaskManagementGetSettingsResponseData() {
  }

  public TaskManagementGetSettingsResponseData id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }


  public TaskManagementGetSettingsResponseData companyId(Integer companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getCompanyId() {
    return companyId;
  }


  public void setCompanyId(Integer companyId) {
    
    
    
    this.companyId = companyId;
  }


  public TaskManagementGetSettingsResponseData enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public TaskManagementGetSettingsResponseData promptedAutoAssignIds(Boolean promptedAutoAssignIds) {
    
    
    
    
    this.promptedAutoAssignIds = promptedAutoAssignIds;
    return this;
  }

   /**
   * Get promptedAutoAssignIds
   * @return promptedAutoAssignIds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getPromptedAutoAssignIds() {
    return promptedAutoAssignIds;
  }


  public void setPromptedAutoAssignIds(Boolean promptedAutoAssignIds) {
    
    
    
    this.promptedAutoAssignIds = promptedAutoAssignIds;
  }


  public TaskManagementGetSettingsResponseData hasCreatedList(Boolean hasCreatedList) {
    
    
    
    
    this.hasCreatedList = hasCreatedList;
    return this;
  }

   /**
   * Get hasCreatedList
   * @return hasCreatedList
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getHasCreatedList() {
    return hasCreatedList;
  }


  public void setHasCreatedList(Boolean hasCreatedList) {
    
    
    
    this.hasCreatedList = hasCreatedList;
  }


  public TaskManagementGetSettingsResponseData canUseTaskManagement(Boolean canUseTaskManagement) {
    
    
    
    
    this.canUseTaskManagement = canUseTaskManagement;
    return this;
  }

   /**
   * Get canUseTaskManagement
   * @return canUseTaskManagement
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanUseTaskManagement() {
    return canUseTaskManagement;
  }


  public void setCanUseTaskManagement(Boolean canUseTaskManagement) {
    
    
    
    this.canUseTaskManagement = canUseTaskManagement;
  }


  public TaskManagementGetSettingsResponseData employeeLogin(Boolean employeeLogin) {
    
    
    
    
    this.employeeLogin = employeeLogin;
    return this;
  }

   /**
   * Get employeeLogin
   * @return employeeLogin
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getEmployeeLogin() {
    return employeeLogin;
  }


  public void setEmployeeLogin(Boolean employeeLogin) {
    
    
    
    this.employeeLogin = employeeLogin;
  }


  public TaskManagementGetSettingsResponseData employeeReminder(Boolean employeeReminder) {
    
    
    
    
    this.employeeReminder = employeeReminder;
    return this;
  }

   /**
   * Get employeeReminder
   * @return employeeReminder
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getEmployeeReminder() {
    return employeeReminder;
  }


  public void setEmployeeReminder(Boolean employeeReminder) {
    
    
    
    this.employeeReminder = employeeReminder;
  }


  public TaskManagementGetSettingsResponseData overdueAlert(Boolean overdueAlert) {
    
    
    
    
    this.overdueAlert = overdueAlert;
    return this;
  }

   /**
   * Get overdueAlert
   * @return overdueAlert
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getOverdueAlert() {
    return overdueAlert;
  }


  public void setOverdueAlert(Boolean overdueAlert) {
    
    
    
    this.overdueAlert = overdueAlert;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the TaskManagementGetSettingsResponseData instance itself
   */
  public TaskManagementGetSettingsResponseData putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskManagementGetSettingsResponseData taskManagementGetSettingsResponseData = (TaskManagementGetSettingsResponseData) o;
    return Objects.equals(this.id, taskManagementGetSettingsResponseData.id) &&
        Objects.equals(this.companyId, taskManagementGetSettingsResponseData.companyId) &&
        Objects.equals(this.enabled, taskManagementGetSettingsResponseData.enabled) &&
        Objects.equals(this.promptedAutoAssignIds, taskManagementGetSettingsResponseData.promptedAutoAssignIds) &&
        Objects.equals(this.hasCreatedList, taskManagementGetSettingsResponseData.hasCreatedList) &&
        Objects.equals(this.canUseTaskManagement, taskManagementGetSettingsResponseData.canUseTaskManagement) &&
        Objects.equals(this.employeeLogin, taskManagementGetSettingsResponseData.employeeLogin) &&
        Objects.equals(this.employeeReminder, taskManagementGetSettingsResponseData.employeeReminder) &&
        Objects.equals(this.overdueAlert, taskManagementGetSettingsResponseData.overdueAlert)&&
        Objects.equals(this.additionalProperties, taskManagementGetSettingsResponseData.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, companyId, enabled, promptedAutoAssignIds, hasCreatedList, canUseTaskManagement, employeeLogin, employeeReminder, overdueAlert, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskManagementGetSettingsResponseData {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    promptedAutoAssignIds: ").append(toIndentedString(promptedAutoAssignIds)).append("\n");
    sb.append("    hasCreatedList: ").append(toIndentedString(hasCreatedList)).append("\n");
    sb.append("    canUseTaskManagement: ").append(toIndentedString(canUseTaskManagement)).append("\n");
    sb.append("    employeeLogin: ").append(toIndentedString(employeeLogin)).append("\n");
    sb.append("    employeeReminder: ").append(toIndentedString(employeeReminder)).append("\n");
    sb.append("    overdueAlert: ").append(toIndentedString(overdueAlert)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("company_id");
    openapiFields.add("enabled");
    openapiFields.add("prompted_auto_assign_ids");
    openapiFields.add("has_created_list");
    openapiFields.add("can_use_task_management");
    openapiFields.add("employee_login");
    openapiFields.add("employee_reminder");
    openapiFields.add("overdue_alert");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("company_id");
    openapiRequiredFields.add("enabled");
    openapiRequiredFields.add("prompted_auto_assign_ids");
    openapiRequiredFields.add("has_created_list");
    openapiRequiredFields.add("can_use_task_management");
    openapiRequiredFields.add("employee_login");
    openapiRequiredFields.add("employee_reminder");
    openapiRequiredFields.add("overdue_alert");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TaskManagementGetSettingsResponseData
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TaskManagementGetSettingsResponseData.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaskManagementGetSettingsResponseData is not found in the empty JSON string", TaskManagementGetSettingsResponseData.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TaskManagementGetSettingsResponseData.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaskManagementGetSettingsResponseData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaskManagementGetSettingsResponseData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaskManagementGetSettingsResponseData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaskManagementGetSettingsResponseData.class));

       return (TypeAdapter<T>) new TypeAdapter<TaskManagementGetSettingsResponseData>() {
           @Override
           public void write(JsonWriter out, TaskManagementGetSettingsResponseData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public TaskManagementGetSettingsResponseData read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             TaskManagementGetSettingsResponseData instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TaskManagementGetSettingsResponseData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TaskManagementGetSettingsResponseData
  * @throws IOException if the JSON string is invalid with respect to TaskManagementGetSettingsResponseData
  */
  public static TaskManagementGetSettingsResponseData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaskManagementGetSettingsResponseData.class);
  }

 /**
  * Convert an instance of TaskManagementGetSettingsResponseData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

