/*
 * 7shifts API
 * 7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.
 *
 * The version of the OpenAPI document: 2023-05-01
 * Contact: api-support@7shifts.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * LocationsCreateRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class LocationsCreateRequest {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_FORMATTED_ADDRESS = "formatted_address";
  @SerializedName(SERIALIZED_NAME_FORMATTED_ADDRESS)
  private String formattedAddress;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private String latitude;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private String longitude;

  public static final String SERIALIZED_NAME_PLACE_ID = "place_id";
  @SerializedName(SERIALIZED_NAME_PLACE_ID)
  private String placeId;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  public static final String SERIALIZED_NAME_HOLIDAY_PAY = "holiday_pay";
  @SerializedName(SERIALIZED_NAME_HOLIDAY_PAY)
  private Boolean holidayPay;

  public static final String SERIALIZED_NAME_SUN_HOURS_CLOSE = "sun_hours_close";
  @SerializedName(SERIALIZED_NAME_SUN_HOURS_CLOSE)
  private String sunHoursClose = "00:00:00";

  public static final String SERIALIZED_NAME_MON_HOURS_CLOSE = "mon_hours_close";
  @SerializedName(SERIALIZED_NAME_MON_HOURS_CLOSE)
  private String monHoursClose = "00:00:00";

  public static final String SERIALIZED_NAME_TUE_HOURS_CLOSE = "tue_hours_close";
  @SerializedName(SERIALIZED_NAME_TUE_HOURS_CLOSE)
  private String tueHoursClose = "00:00:00";

  public static final String SERIALIZED_NAME_WED_HOURS_CLOSE = "wed_hours_close";
  @SerializedName(SERIALIZED_NAME_WED_HOURS_CLOSE)
  private String wedHoursClose = "00:00:00";

  public static final String SERIALIZED_NAME_THU_HOURS_CLOSE = "thu_hours_close";
  @SerializedName(SERIALIZED_NAME_THU_HOURS_CLOSE)
  private String thuHoursClose = "00:00:00";

  public static final String SERIALIZED_NAME_FRI_HOURS_CLOSE = "fri_hours_close";
  @SerializedName(SERIALIZED_NAME_FRI_HOURS_CLOSE)
  private String friHoursClose = "00:00:00";

  public static final String SERIALIZED_NAME_SAT_HOURS_CLOSE = "sat_hours_close";
  @SerializedName(SERIALIZED_NAME_SAT_HOURS_CLOSE)
  private String satHoursClose = "00:00:00";

  public static final String SERIALIZED_NAME_SUN_HOURS_OPEN = "sun_hours_open";
  @SerializedName(SERIALIZED_NAME_SUN_HOURS_OPEN)
  private String sunHoursOpen = "07:00:00";

  public static final String SERIALIZED_NAME_MON_HOURS_OPEN = "mon_hours_open";
  @SerializedName(SERIALIZED_NAME_MON_HOURS_OPEN)
  private String monHoursOpen = "07:00:00";

  public static final String SERIALIZED_NAME_TUE_HOURS_OPEN = "tue_hours_open";
  @SerializedName(SERIALIZED_NAME_TUE_HOURS_OPEN)
  private String tueHoursOpen = "07:00:00";

  public static final String SERIALIZED_NAME_WED_HOURS_OPEN = "wed_hours_open";
  @SerializedName(SERIALIZED_NAME_WED_HOURS_OPEN)
  private String wedHoursOpen = "07:00:00";

  public static final String SERIALIZED_NAME_THU_HOURS_OPEN = "thu_hours_open";
  @SerializedName(SERIALIZED_NAME_THU_HOURS_OPEN)
  private String thuHoursOpen = "07:00:00";

  public static final String SERIALIZED_NAME_FRI_HOURS_OPEN = "fri_hours_open";
  @SerializedName(SERIALIZED_NAME_FRI_HOURS_OPEN)
  private String friHoursOpen = "07:00:00";

  public static final String SERIALIZED_NAME_SAT_HOURS_OPEN = "sat_hours_open";
  @SerializedName(SERIALIZED_NAME_SAT_HOURS_OPEN)
  private String satHoursOpen = "07:00:00";

  public static final String SERIALIZED_NAME_SUN_IS_CLOSED = "sun_is_closed";
  @SerializedName(SERIALIZED_NAME_SUN_IS_CLOSED)
  private Boolean sunIsClosed;

  public static final String SERIALIZED_NAME_MON_IS_CLOSED = "mon_is_closed";
  @SerializedName(SERIALIZED_NAME_MON_IS_CLOSED)
  private Boolean monIsClosed;

  public static final String SERIALIZED_NAME_TUE_IS_CLOSED = "tue_is_closed";
  @SerializedName(SERIALIZED_NAME_TUE_IS_CLOSED)
  private Boolean tueIsClosed;

  public static final String SERIALIZED_NAME_WED_IS_CLOSED = "wed_is_closed";
  @SerializedName(SERIALIZED_NAME_WED_IS_CLOSED)
  private Boolean wedIsClosed;

  public static final String SERIALIZED_NAME_THU_IS_CLOSED = "thu_is_closed";
  @SerializedName(SERIALIZED_NAME_THU_IS_CLOSED)
  private Boolean thuIsClosed;

  public static final String SERIALIZED_NAME_FRI_IS_CLOSED = "fri_is_closed";
  @SerializedName(SERIALIZED_NAME_FRI_IS_CLOSED)
  private Boolean friIsClosed;

  public static final String SERIALIZED_NAME_SAT_IS_CLOSED = "sat_is_closed";
  @SerializedName(SERIALIZED_NAME_SAT_IS_CLOSED)
  private Boolean satIsClosed;

  public static final String SERIALIZED_NAME_ENABLE_SHIFT_FEEDBACK = "enable_shift_feedback";
  @SerializedName(SERIALIZED_NAME_ENABLE_SHIFT_FEEDBACK)
  private Boolean enableShiftFeedback;

  public static final String SERIALIZED_NAME_SHIFT_FEEDBACK = "shift_feedback";
  @SerializedName(SERIALIZED_NAME_SHIFT_FEEDBACK)
  private Boolean shiftFeedback;

  public static final String SERIALIZED_NAME_COUPON = "coupon";
  @SerializedName(SERIALIZED_NAME_COUPON)
  private String coupon;

  public static final String SERIALIZED_NAME_STRIPE_TOKEN_ID = "stripe_token_id";
  @SerializedName(SERIALIZED_NAME_STRIPE_TOKEN_ID)
  private String stripeTokenId;

  public static final String SERIALIZED_NAME_COPY_FROM_ID = "copy_from_id";
  @SerializedName(SERIALIZED_NAME_COPY_FROM_ID)
  private Integer copyFromId;

  public LocationsCreateRequest() {
  }

  public LocationsCreateRequest name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Location name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Quackers", required = true, value = "Location name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public LocationsCreateRequest country(String country) {
    
    
    
    
    this.country = country;
    return this;
  }

   /**
   * Country two letter abbreviation
   * @return country
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "CA", required = true, value = "Country two letter abbreviation")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    
    
    
    this.country = country;
  }


  public LocationsCreateRequest formattedAddress(String formattedAddress) {
    
    
    
    
    this.formattedAddress = formattedAddress;
    return this;
  }

   /**
   * Full address
   * @return formattedAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "701 Broadway Ave #200, MadeUpCity, SK SVN 1C3, Canada", value = "Full address")

  public String getFormattedAddress() {
    return formattedAddress;
  }


  public void setFormattedAddress(String formattedAddress) {
    
    
    
    this.formattedAddress = formattedAddress;
  }


  public LocationsCreateRequest state(String state) {
    
    
    
    
    this.state = state;
    return this;
  }

   /**
   * State or province
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "State or province")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    
    
    
    this.state = state;
  }


  public LocationsCreateRequest city(String city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * City
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Toronto", value = "City")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    
    
    
    this.city = city;
  }


  public LocationsCreateRequest latitude(String latitude) {
    
    
    
    
    this.latitude = latitude;
    return this;
  }

   /**
   * locations latitude coordinates
   * @return latitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "locations latitude coordinates")

  public String getLatitude() {
    return latitude;
  }


  public void setLatitude(String latitude) {
    
    
    
    this.latitude = latitude;
  }


  public LocationsCreateRequest longitude(String longitude) {
    
    
    
    
    this.longitude = longitude;
    return this;
  }

   /**
   * locations longitude coordinates
   * @return longitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "locations longitude coordinates")

  public String getLongitude() {
    return longitude;
  }


  public void setLongitude(String longitude) {
    
    
    
    this.longitude = longitude;
  }


  public LocationsCreateRequest placeId(String placeId) {
    
    
    
    
    this.placeId = placeId;
    return this;
  }

   /**
   * Google Places location Id
   * @return placeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Google Places location Id")

  public String getPlaceId() {
    return placeId;
  }


  public void setPlaceId(String placeId) {
    
    
    
    this.placeId = placeId;
  }


  public LocationsCreateRequest timezone(String timezone) {
    
    
    
    
    this.timezone = timezone;
    return this;
  }

   /**
   * Timezone. Valid zone info name
   * @return timezone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "America/Chicago", value = "Timezone. Valid zone info name")

  public String getTimezone() {
    return timezone;
  }


  public void setTimezone(String timezone) {
    
    
    
    this.timezone = timezone;
  }


  public LocationsCreateRequest holidayPay(Boolean holidayPay) {
    
    
    
    
    this.holidayPay = holidayPay;
    return this;
  }

   /**
   * When true, holiday pay is enabled
   * @return holidayPay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "When true, holiday pay is enabled")

  public Boolean getHolidayPay() {
    return holidayPay;
  }


  public void setHolidayPay(Boolean holidayPay) {
    
    
    
    this.holidayPay = holidayPay;
  }


  public LocationsCreateRequest sunHoursClose(String sunHoursClose) {
    
    
    
    
    this.sunHoursClose = sunHoursClose;
    return this;
  }

   /**
   * Sunday closing time
   * @return sunHoursClose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "57030", value = "Sunday closing time")

  public String getSunHoursClose() {
    return sunHoursClose;
  }


  public void setSunHoursClose(String sunHoursClose) {
    
    
    
    this.sunHoursClose = sunHoursClose;
  }


  public LocationsCreateRequest monHoursClose(String monHoursClose) {
    
    
    
    
    this.monHoursClose = monHoursClose;
    return this;
  }

   /**
   * Monday closing time
   * @return monHoursClose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "57030", value = "Monday closing time")

  public String getMonHoursClose() {
    return monHoursClose;
  }


  public void setMonHoursClose(String monHoursClose) {
    
    
    
    this.monHoursClose = monHoursClose;
  }


  public LocationsCreateRequest tueHoursClose(String tueHoursClose) {
    
    
    
    
    this.tueHoursClose = tueHoursClose;
    return this;
  }

   /**
   * Tuesday closing time
   * @return tueHoursClose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "57030", value = "Tuesday closing time")

  public String getTueHoursClose() {
    return tueHoursClose;
  }


  public void setTueHoursClose(String tueHoursClose) {
    
    
    
    this.tueHoursClose = tueHoursClose;
  }


  public LocationsCreateRequest wedHoursClose(String wedHoursClose) {
    
    
    
    
    this.wedHoursClose = wedHoursClose;
    return this;
  }

   /**
   * Wednesday closing time
   * @return wedHoursClose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "57030", value = "Wednesday closing time")

  public String getWedHoursClose() {
    return wedHoursClose;
  }


  public void setWedHoursClose(String wedHoursClose) {
    
    
    
    this.wedHoursClose = wedHoursClose;
  }


  public LocationsCreateRequest thuHoursClose(String thuHoursClose) {
    
    
    
    
    this.thuHoursClose = thuHoursClose;
    return this;
  }

   /**
   * Thursday closing time
   * @return thuHoursClose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "57030", value = "Thursday closing time")

  public String getThuHoursClose() {
    return thuHoursClose;
  }


  public void setThuHoursClose(String thuHoursClose) {
    
    
    
    this.thuHoursClose = thuHoursClose;
  }


  public LocationsCreateRequest friHoursClose(String friHoursClose) {
    
    
    
    
    this.friHoursClose = friHoursClose;
    return this;
  }

   /**
   * Friday closing time
   * @return friHoursClose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "57030", value = "Friday closing time")

  public String getFriHoursClose() {
    return friHoursClose;
  }


  public void setFriHoursClose(String friHoursClose) {
    
    
    
    this.friHoursClose = friHoursClose;
  }


  public LocationsCreateRequest satHoursClose(String satHoursClose) {
    
    
    
    
    this.satHoursClose = satHoursClose;
    return this;
  }

   /**
   * Saturday closing time
   * @return satHoursClose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "57030", value = "Saturday closing time")

  public String getSatHoursClose() {
    return satHoursClose;
  }


  public void setSatHoursClose(String satHoursClose) {
    
    
    
    this.satHoursClose = satHoursClose;
  }


  public LocationsCreateRequest sunHoursOpen(String sunHoursOpen) {
    
    
    
    
    this.sunHoursOpen = sunHoursOpen;
    return this;
  }

   /**
   * Sunday opening time
   * @return sunHoursOpen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "57030", value = "Sunday opening time")

  public String getSunHoursOpen() {
    return sunHoursOpen;
  }


  public void setSunHoursOpen(String sunHoursOpen) {
    
    
    
    this.sunHoursOpen = sunHoursOpen;
  }


  public LocationsCreateRequest monHoursOpen(String monHoursOpen) {
    
    
    
    
    this.monHoursOpen = monHoursOpen;
    return this;
  }

   /**
   * Monday opening time
   * @return monHoursOpen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "57030", value = "Monday opening time")

  public String getMonHoursOpen() {
    return monHoursOpen;
  }


  public void setMonHoursOpen(String monHoursOpen) {
    
    
    
    this.monHoursOpen = monHoursOpen;
  }


  public LocationsCreateRequest tueHoursOpen(String tueHoursOpen) {
    
    
    
    
    this.tueHoursOpen = tueHoursOpen;
    return this;
  }

   /**
   * Tuesday opening time
   * @return tueHoursOpen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "57030", value = "Tuesday opening time")

  public String getTueHoursOpen() {
    return tueHoursOpen;
  }


  public void setTueHoursOpen(String tueHoursOpen) {
    
    
    
    this.tueHoursOpen = tueHoursOpen;
  }


  public LocationsCreateRequest wedHoursOpen(String wedHoursOpen) {
    
    
    
    
    this.wedHoursOpen = wedHoursOpen;
    return this;
  }

   /**
   * Wednesday opening time
   * @return wedHoursOpen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "57030", value = "Wednesday opening time")

  public String getWedHoursOpen() {
    return wedHoursOpen;
  }


  public void setWedHoursOpen(String wedHoursOpen) {
    
    
    
    this.wedHoursOpen = wedHoursOpen;
  }


  public LocationsCreateRequest thuHoursOpen(String thuHoursOpen) {
    
    
    
    
    this.thuHoursOpen = thuHoursOpen;
    return this;
  }

   /**
   * Thursday opening time
   * @return thuHoursOpen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "57030", value = "Thursday opening time")

  public String getThuHoursOpen() {
    return thuHoursOpen;
  }


  public void setThuHoursOpen(String thuHoursOpen) {
    
    
    
    this.thuHoursOpen = thuHoursOpen;
  }


  public LocationsCreateRequest friHoursOpen(String friHoursOpen) {
    
    
    
    
    this.friHoursOpen = friHoursOpen;
    return this;
  }

   /**
   * Friday opening time
   * @return friHoursOpen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "57030", value = "Friday opening time")

  public String getFriHoursOpen() {
    return friHoursOpen;
  }


  public void setFriHoursOpen(String friHoursOpen) {
    
    
    
    this.friHoursOpen = friHoursOpen;
  }


  public LocationsCreateRequest satHoursOpen(String satHoursOpen) {
    
    
    
    
    this.satHoursOpen = satHoursOpen;
    return this;
  }

   /**
   * Saturday opening time
   * @return satHoursOpen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "57030", value = "Saturday opening time")

  public String getSatHoursOpen() {
    return satHoursOpen;
  }


  public void setSatHoursOpen(String satHoursOpen) {
    
    
    
    this.satHoursOpen = satHoursOpen;
  }


  public LocationsCreateRequest sunIsClosed(Boolean sunIsClosed) {
    
    
    
    
    this.sunIsClosed = sunIsClosed;
    return this;
  }

   /**
   * If true, location is closed on Sunday
   * @return sunIsClosed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If true, location is closed on Sunday")

  public Boolean getSunIsClosed() {
    return sunIsClosed;
  }


  public void setSunIsClosed(Boolean sunIsClosed) {
    
    
    
    this.sunIsClosed = sunIsClosed;
  }


  public LocationsCreateRequest monIsClosed(Boolean monIsClosed) {
    
    
    
    
    this.monIsClosed = monIsClosed;
    return this;
  }

   /**
   * If true, location is closed on Monday
   * @return monIsClosed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If true, location is closed on Monday")

  public Boolean getMonIsClosed() {
    return monIsClosed;
  }


  public void setMonIsClosed(Boolean monIsClosed) {
    
    
    
    this.monIsClosed = monIsClosed;
  }


  public LocationsCreateRequest tueIsClosed(Boolean tueIsClosed) {
    
    
    
    
    this.tueIsClosed = tueIsClosed;
    return this;
  }

   /**
   * If true, location is closed on Tuesday
   * @return tueIsClosed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If true, location is closed on Tuesday")

  public Boolean getTueIsClosed() {
    return tueIsClosed;
  }


  public void setTueIsClosed(Boolean tueIsClosed) {
    
    
    
    this.tueIsClosed = tueIsClosed;
  }


  public LocationsCreateRequest wedIsClosed(Boolean wedIsClosed) {
    
    
    
    
    this.wedIsClosed = wedIsClosed;
    return this;
  }

   /**
   * If true, location is closed on Wednesday
   * @return wedIsClosed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If true, location is closed on Wednesday")

  public Boolean getWedIsClosed() {
    return wedIsClosed;
  }


  public void setWedIsClosed(Boolean wedIsClosed) {
    
    
    
    this.wedIsClosed = wedIsClosed;
  }


  public LocationsCreateRequest thuIsClosed(Boolean thuIsClosed) {
    
    
    
    
    this.thuIsClosed = thuIsClosed;
    return this;
  }

   /**
   * If true, location is closed on Thursday
   * @return thuIsClosed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If true, location is closed on Thursday")

  public Boolean getThuIsClosed() {
    return thuIsClosed;
  }


  public void setThuIsClosed(Boolean thuIsClosed) {
    
    
    
    this.thuIsClosed = thuIsClosed;
  }


  public LocationsCreateRequest friIsClosed(Boolean friIsClosed) {
    
    
    
    
    this.friIsClosed = friIsClosed;
    return this;
  }

   /**
   * If true, location is closed on Friday
   * @return friIsClosed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If true, location is closed on Friday")

  public Boolean getFriIsClosed() {
    return friIsClosed;
  }


  public void setFriIsClosed(Boolean friIsClosed) {
    
    
    
    this.friIsClosed = friIsClosed;
  }


  public LocationsCreateRequest satIsClosed(Boolean satIsClosed) {
    
    
    
    
    this.satIsClosed = satIsClosed;
    return this;
  }

   /**
   * If true, location is closed on Saturday
   * @return satIsClosed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If true, location is closed on Saturday")

  public Boolean getSatIsClosed() {
    return satIsClosed;
  }


  public void setSatIsClosed(Boolean satIsClosed) {
    
    
    
    this.satIsClosed = satIsClosed;
  }


  public LocationsCreateRequest enableShiftFeedback(Boolean enableShiftFeedback) {
    
    
    
    
    this.enableShiftFeedback = enableShiftFeedback;
    return this;
  }

   /**
   * If true end of shift feedback requests are enabled
   * @return enableShiftFeedback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If true end of shift feedback requests are enabled")

  public Boolean getEnableShiftFeedback() {
    return enableShiftFeedback;
  }


  public void setEnableShiftFeedback(Boolean enableShiftFeedback) {
    
    
    
    this.enableShiftFeedback = enableShiftFeedback;
  }


  public LocationsCreateRequest shiftFeedback(Boolean shiftFeedback) {
    
    
    
    
    this.shiftFeedback = shiftFeedback;
    return this;
  }

   /**
   * If true end of shift feedback requests are enabled
   * @return shiftFeedback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If true end of shift feedback requests are enabled")

  public Boolean getShiftFeedback() {
    return shiftFeedback;
  }


  public void setShiftFeedback(Boolean shiftFeedback) {
    
    
    
    this.shiftFeedback = shiftFeedback;
  }


  public LocationsCreateRequest coupon(String coupon) {
    
    
    
    
    this.coupon = coupon;
    return this;
  }

   /**
   * Optional coupon to apply to this location&#39;s billing
   * @return coupon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Quakers", value = "Optional coupon to apply to this location's billing")

  public String getCoupon() {
    return coupon;
  }


  public void setCoupon(String coupon) {
    
    
    
    this.coupon = coupon;
  }


  public LocationsCreateRequest stripeTokenId(String stripeTokenId) {
    
    
    
    
    this.stripeTokenId = stripeTokenId;
    return this;
  }

   /**
   * Optional stripe payment token. If this is not provided, the account&#39;s default payment information will be used.
   * @return stripeTokenId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "tok_1KG8LT2eZvKYlo2CODSv0IXB", value = "Optional stripe payment token. If this is not provided, the account's default payment information will be used.")

  public String getStripeTokenId() {
    return stripeTokenId;
  }


  public void setStripeTokenId(String stripeTokenId) {
    
    
    
    this.stripeTokenId = stripeTokenId;
  }


  public LocationsCreateRequest copyFromId(Integer copyFromId) {
    
    
    
    
    this.copyFromId = copyFromId;
    return this;
  }

   /**
   * Optional existing location id whose department and role structure the new location should copy
   * @return copyFromId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "123", value = "Optional existing location id whose department and role structure the new location should copy")

  public Integer getCopyFromId() {
    return copyFromId;
  }


  public void setCopyFromId(Integer copyFromId) {
    
    
    
    this.copyFromId = copyFromId;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the LocationsCreateRequest instance itself
   */
  public LocationsCreateRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocationsCreateRequest locationsCreateRequest = (LocationsCreateRequest) o;
    return Objects.equals(this.name, locationsCreateRequest.name) &&
        Objects.equals(this.country, locationsCreateRequest.country) &&
        Objects.equals(this.formattedAddress, locationsCreateRequest.formattedAddress) &&
        Objects.equals(this.state, locationsCreateRequest.state) &&
        Objects.equals(this.city, locationsCreateRequest.city) &&
        Objects.equals(this.latitude, locationsCreateRequest.latitude) &&
        Objects.equals(this.longitude, locationsCreateRequest.longitude) &&
        Objects.equals(this.placeId, locationsCreateRequest.placeId) &&
        Objects.equals(this.timezone, locationsCreateRequest.timezone) &&
        Objects.equals(this.holidayPay, locationsCreateRequest.holidayPay) &&
        Objects.equals(this.sunHoursClose, locationsCreateRequest.sunHoursClose) &&
        Objects.equals(this.monHoursClose, locationsCreateRequest.monHoursClose) &&
        Objects.equals(this.tueHoursClose, locationsCreateRequest.tueHoursClose) &&
        Objects.equals(this.wedHoursClose, locationsCreateRequest.wedHoursClose) &&
        Objects.equals(this.thuHoursClose, locationsCreateRequest.thuHoursClose) &&
        Objects.equals(this.friHoursClose, locationsCreateRequest.friHoursClose) &&
        Objects.equals(this.satHoursClose, locationsCreateRequest.satHoursClose) &&
        Objects.equals(this.sunHoursOpen, locationsCreateRequest.sunHoursOpen) &&
        Objects.equals(this.monHoursOpen, locationsCreateRequest.monHoursOpen) &&
        Objects.equals(this.tueHoursOpen, locationsCreateRequest.tueHoursOpen) &&
        Objects.equals(this.wedHoursOpen, locationsCreateRequest.wedHoursOpen) &&
        Objects.equals(this.thuHoursOpen, locationsCreateRequest.thuHoursOpen) &&
        Objects.equals(this.friHoursOpen, locationsCreateRequest.friHoursOpen) &&
        Objects.equals(this.satHoursOpen, locationsCreateRequest.satHoursOpen) &&
        Objects.equals(this.sunIsClosed, locationsCreateRequest.sunIsClosed) &&
        Objects.equals(this.monIsClosed, locationsCreateRequest.monIsClosed) &&
        Objects.equals(this.tueIsClosed, locationsCreateRequest.tueIsClosed) &&
        Objects.equals(this.wedIsClosed, locationsCreateRequest.wedIsClosed) &&
        Objects.equals(this.thuIsClosed, locationsCreateRequest.thuIsClosed) &&
        Objects.equals(this.friIsClosed, locationsCreateRequest.friIsClosed) &&
        Objects.equals(this.satIsClosed, locationsCreateRequest.satIsClosed) &&
        Objects.equals(this.enableShiftFeedback, locationsCreateRequest.enableShiftFeedback) &&
        Objects.equals(this.shiftFeedback, locationsCreateRequest.shiftFeedback) &&
        Objects.equals(this.coupon, locationsCreateRequest.coupon) &&
        Objects.equals(this.stripeTokenId, locationsCreateRequest.stripeTokenId) &&
        Objects.equals(this.copyFromId, locationsCreateRequest.copyFromId)&&
        Objects.equals(this.additionalProperties, locationsCreateRequest.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, country, formattedAddress, state, city, latitude, longitude, placeId, timezone, holidayPay, sunHoursClose, monHoursClose, tueHoursClose, wedHoursClose, thuHoursClose, friHoursClose, satHoursClose, sunHoursOpen, monHoursOpen, tueHoursOpen, wedHoursOpen, thuHoursOpen, friHoursOpen, satHoursOpen, sunIsClosed, monIsClosed, tueIsClosed, wedIsClosed, thuIsClosed, friIsClosed, satIsClosed, enableShiftFeedback, shiftFeedback, coupon, stripeTokenId, copyFromId, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocationsCreateRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    formattedAddress: ").append(toIndentedString(formattedAddress)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    placeId: ").append(toIndentedString(placeId)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    holidayPay: ").append(toIndentedString(holidayPay)).append("\n");
    sb.append("    sunHoursClose: ").append(toIndentedString(sunHoursClose)).append("\n");
    sb.append("    monHoursClose: ").append(toIndentedString(monHoursClose)).append("\n");
    sb.append("    tueHoursClose: ").append(toIndentedString(tueHoursClose)).append("\n");
    sb.append("    wedHoursClose: ").append(toIndentedString(wedHoursClose)).append("\n");
    sb.append("    thuHoursClose: ").append(toIndentedString(thuHoursClose)).append("\n");
    sb.append("    friHoursClose: ").append(toIndentedString(friHoursClose)).append("\n");
    sb.append("    satHoursClose: ").append(toIndentedString(satHoursClose)).append("\n");
    sb.append("    sunHoursOpen: ").append(toIndentedString(sunHoursOpen)).append("\n");
    sb.append("    monHoursOpen: ").append(toIndentedString(monHoursOpen)).append("\n");
    sb.append("    tueHoursOpen: ").append(toIndentedString(tueHoursOpen)).append("\n");
    sb.append("    wedHoursOpen: ").append(toIndentedString(wedHoursOpen)).append("\n");
    sb.append("    thuHoursOpen: ").append(toIndentedString(thuHoursOpen)).append("\n");
    sb.append("    friHoursOpen: ").append(toIndentedString(friHoursOpen)).append("\n");
    sb.append("    satHoursOpen: ").append(toIndentedString(satHoursOpen)).append("\n");
    sb.append("    sunIsClosed: ").append(toIndentedString(sunIsClosed)).append("\n");
    sb.append("    monIsClosed: ").append(toIndentedString(monIsClosed)).append("\n");
    sb.append("    tueIsClosed: ").append(toIndentedString(tueIsClosed)).append("\n");
    sb.append("    wedIsClosed: ").append(toIndentedString(wedIsClosed)).append("\n");
    sb.append("    thuIsClosed: ").append(toIndentedString(thuIsClosed)).append("\n");
    sb.append("    friIsClosed: ").append(toIndentedString(friIsClosed)).append("\n");
    sb.append("    satIsClosed: ").append(toIndentedString(satIsClosed)).append("\n");
    sb.append("    enableShiftFeedback: ").append(toIndentedString(enableShiftFeedback)).append("\n");
    sb.append("    shiftFeedback: ").append(toIndentedString(shiftFeedback)).append("\n");
    sb.append("    coupon: ").append(toIndentedString(coupon)).append("\n");
    sb.append("    stripeTokenId: ").append(toIndentedString(stripeTokenId)).append("\n");
    sb.append("    copyFromId: ").append(toIndentedString(copyFromId)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("country");
    openapiFields.add("formatted_address");
    openapiFields.add("state");
    openapiFields.add("city");
    openapiFields.add("latitude");
    openapiFields.add("longitude");
    openapiFields.add("place_id");
    openapiFields.add("timezone");
    openapiFields.add("holiday_pay");
    openapiFields.add("sun_hours_close");
    openapiFields.add("mon_hours_close");
    openapiFields.add("tue_hours_close");
    openapiFields.add("wed_hours_close");
    openapiFields.add("thu_hours_close");
    openapiFields.add("fri_hours_close");
    openapiFields.add("sat_hours_close");
    openapiFields.add("sun_hours_open");
    openapiFields.add("mon_hours_open");
    openapiFields.add("tue_hours_open");
    openapiFields.add("wed_hours_open");
    openapiFields.add("thu_hours_open");
    openapiFields.add("fri_hours_open");
    openapiFields.add("sat_hours_open");
    openapiFields.add("sun_is_closed");
    openapiFields.add("mon_is_closed");
    openapiFields.add("tue_is_closed");
    openapiFields.add("wed_is_closed");
    openapiFields.add("thu_is_closed");
    openapiFields.add("fri_is_closed");
    openapiFields.add("sat_is_closed");
    openapiFields.add("enable_shift_feedback");
    openapiFields.add("shift_feedback");
    openapiFields.add("coupon");
    openapiFields.add("stripe_token_id");
    openapiFields.add("copy_from_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("country");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to LocationsCreateRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!LocationsCreateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LocationsCreateRequest is not found in the empty JSON string", LocationsCreateRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : LocationsCreateRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("formatted_address") != null && !jsonObj.get("formatted_address").isJsonNull()) && !jsonObj.get("formatted_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `formatted_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("formatted_address").toString()));
      }
      if (!jsonObj.get("state").isJsonNull() && (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if (!jsonObj.get("city").isJsonNull() && (jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("latitude") != null && !jsonObj.get("latitude").isJsonNull()) && !jsonObj.get("latitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latitude").toString()));
      }
      if ((jsonObj.get("longitude") != null && !jsonObj.get("longitude").isJsonNull()) && !jsonObj.get("longitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `longitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("longitude").toString()));
      }
      if ((jsonObj.get("place_id") != null && !jsonObj.get("place_id").isJsonNull()) && !jsonObj.get("place_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `place_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("place_id").toString()));
      }
      if ((jsonObj.get("timezone") != null && !jsonObj.get("timezone").isJsonNull()) && !jsonObj.get("timezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezone").toString()));
      }
      if ((jsonObj.get("sun_hours_close") != null && !jsonObj.get("sun_hours_close").isJsonNull()) && !jsonObj.get("sun_hours_close").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sun_hours_close` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sun_hours_close").toString()));
      }
      if ((jsonObj.get("mon_hours_close") != null && !jsonObj.get("mon_hours_close").isJsonNull()) && !jsonObj.get("mon_hours_close").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mon_hours_close` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mon_hours_close").toString()));
      }
      if ((jsonObj.get("tue_hours_close") != null && !jsonObj.get("tue_hours_close").isJsonNull()) && !jsonObj.get("tue_hours_close").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tue_hours_close` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tue_hours_close").toString()));
      }
      if ((jsonObj.get("wed_hours_close") != null && !jsonObj.get("wed_hours_close").isJsonNull()) && !jsonObj.get("wed_hours_close").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wed_hours_close` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wed_hours_close").toString()));
      }
      if ((jsonObj.get("thu_hours_close") != null && !jsonObj.get("thu_hours_close").isJsonNull()) && !jsonObj.get("thu_hours_close").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thu_hours_close` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thu_hours_close").toString()));
      }
      if ((jsonObj.get("fri_hours_close") != null && !jsonObj.get("fri_hours_close").isJsonNull()) && !jsonObj.get("fri_hours_close").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fri_hours_close` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fri_hours_close").toString()));
      }
      if ((jsonObj.get("sat_hours_close") != null && !jsonObj.get("sat_hours_close").isJsonNull()) && !jsonObj.get("sat_hours_close").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sat_hours_close` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sat_hours_close").toString()));
      }
      if ((jsonObj.get("sun_hours_open") != null && !jsonObj.get("sun_hours_open").isJsonNull()) && !jsonObj.get("sun_hours_open").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sun_hours_open` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sun_hours_open").toString()));
      }
      if (!jsonObj.get("mon_hours_open").isJsonNull() && (jsonObj.get("mon_hours_open") != null && !jsonObj.get("mon_hours_open").isJsonNull()) && !jsonObj.get("mon_hours_open").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mon_hours_open` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mon_hours_open").toString()));
      }
      if (!jsonObj.get("tue_hours_open").isJsonNull() && (jsonObj.get("tue_hours_open") != null && !jsonObj.get("tue_hours_open").isJsonNull()) && !jsonObj.get("tue_hours_open").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tue_hours_open` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tue_hours_open").toString()));
      }
      if (!jsonObj.get("wed_hours_open").isJsonNull() && (jsonObj.get("wed_hours_open") != null && !jsonObj.get("wed_hours_open").isJsonNull()) && !jsonObj.get("wed_hours_open").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wed_hours_open` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wed_hours_open").toString()));
      }
      if (!jsonObj.get("thu_hours_open").isJsonNull() && (jsonObj.get("thu_hours_open") != null && !jsonObj.get("thu_hours_open").isJsonNull()) && !jsonObj.get("thu_hours_open").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thu_hours_open` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thu_hours_open").toString()));
      }
      if (!jsonObj.get("fri_hours_open").isJsonNull() && (jsonObj.get("fri_hours_open") != null && !jsonObj.get("fri_hours_open").isJsonNull()) && !jsonObj.get("fri_hours_open").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fri_hours_open` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fri_hours_open").toString()));
      }
      if (!jsonObj.get("sat_hours_open").isJsonNull() && (jsonObj.get("sat_hours_open") != null && !jsonObj.get("sat_hours_open").isJsonNull()) && !jsonObj.get("sat_hours_open").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sat_hours_open` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sat_hours_open").toString()));
      }
      if (!jsonObj.get("coupon").isJsonNull() && (jsonObj.get("coupon") != null && !jsonObj.get("coupon").isJsonNull()) && !jsonObj.get("coupon").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coupon` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coupon").toString()));
      }
      if ((jsonObj.get("stripe_token_id") != null && !jsonObj.get("stripe_token_id").isJsonNull()) && !jsonObj.get("stripe_token_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stripe_token_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stripe_token_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LocationsCreateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LocationsCreateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LocationsCreateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LocationsCreateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<LocationsCreateRequest>() {
           @Override
           public void write(JsonWriter out, LocationsCreateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public LocationsCreateRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             LocationsCreateRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of LocationsCreateRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of LocationsCreateRequest
  * @throws IOException if the JSON string is invalid with respect to LocationsCreateRequest
  */
  public static LocationsCreateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LocationsCreateRequest.class);
  }

 /**
  * Convert an instance of LocationsCreateRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

