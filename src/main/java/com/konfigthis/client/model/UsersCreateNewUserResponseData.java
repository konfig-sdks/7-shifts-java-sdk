/*
 * 7shifts API
 * 7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.
 *
 * The version of the OpenAPI document: 2023-05-01
 * Contact: api-support@7shifts.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AuthenticationGetIdentityResponseDataUsersInnerMeta;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * UsersCreateNewUserResponseData
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class UsersCreateNewUserResponseData {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IDENTITY_ID = "identity_id";
  @SerializedName(SERIALIZED_NAME_IDENTITY_ID)
  private Integer identityId;

  public static final String SERIALIZED_NAME_COMPANY_ID = "company_id";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private Integer companyId;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_PREFERRED_FIRST_NAME = "preferred_first_name";
  @SerializedName(SERIALIZED_NAME_PREFERRED_FIRST_NAME)
  private String preferredFirstName;

  public static final String SERIALIZED_NAME_PREFERRED_LAST_NAME = "preferred_last_name";
  @SerializedName(SERIALIZED_NAME_PREFERRED_LAST_NAME)
  private String preferredLastName;

  public static final String SERIALIZED_NAME_PRONOUNS = "pronouns";
  @SerializedName(SERIALIZED_NAME_PRONOUNS)
  private String pronouns;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_MOBILE_NUMBER = "mobile_number";
  @SerializedName(SERIALIZED_NAME_MOBILE_NUMBER)
  private String mobileNumber;

  public static final String SERIALIZED_NAME_HOME_NUMBER = "home_number";
  @SerializedName(SERIALIZED_NAME_HOME_NUMBER)
  private String homeNumber;

  public static final String SERIALIZED_NAME_BIRTH_DATE = "birth_date";
  @SerializedName(SERIALIZED_NAME_BIRTH_DATE)
  private LocalDate birthDate;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_POSTAL_ZIP = "postal_zip";
  @SerializedName(SERIALIZED_NAME_POSTAL_ZIP)
  private String postalZip;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_PROV_STATE = "prov_state";
  @SerializedName(SERIALIZED_NAME_PROV_STATE)
  private String provState;

  /**
   * Invitation status to join 7shifts
   */
  @JsonAdapter(InviteStatusEnum.Adapter.class)
 public enum InviteStatusEnum {
    ACCEPTED("accepted"),
    
    PENDING("pending"),
    
    REQUIRED("required"),
    
    MISSING_CONTACT_INFO("missing_contact_info");

    private String value;

    InviteStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InviteStatusEnum fromValue(String value) {
      for (InviteStatusEnum b : InviteStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<InviteStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InviteStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InviteStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return InviteStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_INVITE_STATUS = "invite_status";
  @SerializedName(SERIALIZED_NAME_INVITE_STATUS)
  private InviteStatusEnum inviteStatus;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_PHOTO = "photo";
  @SerializedName(SERIALIZED_NAME_PHOTO)
  private String photo;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_HIRE_DATE = "hire_date";
  @SerializedName(SERIALIZED_NAME_HIRE_DATE)
  private LocalDate hireDate;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  /**
   * User type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
 public enum TypeEnum {
    EMPLOYEE("employee"),
    
    ASST_MANAGER("asst_manager"),
    
    MANAGER("manager"),
    
    EMPLOYER("employer");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employee_id";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_MAX_WEEKLY_HOURS = "max_weekly_hours";
  @SerializedName(SERIALIZED_NAME_MAX_WEEKLY_HOURS)
  private String maxWeeklyHours;

  public static final String SERIALIZED_NAME_PUNCH_ID = "punch_id";
  @SerializedName(SERIALIZED_NAME_PUNCH_ID)
  private String punchId;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private String created;

  public static final String SERIALIZED_NAME_MODIFIED = "modified";
  @SerializedName(SERIALIZED_NAME_MODIFIED)
  private String modified;

  public static final String SERIALIZED_NAME_INVITED = "invited";
  @SerializedName(SERIALIZED_NAME_INVITED)
  private String invited;

  public static final String SERIALIZED_NAME_INVITE_ACCEPTED = "invite_accepted";
  @SerializedName(SERIALIZED_NAME_INVITE_ACCEPTED)
  private String inviteAccepted;

  public static final String SERIALIZED_NAME_IS_NEW = "is_new";
  @SerializedName(SERIALIZED_NAME_IS_NEW)
  private Boolean isNew;

  public static final String SERIALIZED_NAME_APPEAR_AS_EMPLOYEE = "appear_as_employee";
  @SerializedName(SERIALIZED_NAME_APPEAR_AS_EMPLOYEE)
  private Boolean appearAsEmployee;

  public static final String SERIALIZED_NAME_SUBSCRIBE_TO_UPDATES = "subscribe_to_updates";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBE_TO_UPDATES)
  private Boolean subscribeToUpdates;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_PUSH = "push";
  @SerializedName(SERIALIZED_NAME_PUSH)
  private Boolean push;

  public static final String SERIALIZED_NAME_SKILL_LEVEL = "skill_level";
  @SerializedName(SERIALIZED_NAME_SKILL_LEVEL)
  private Integer skillLevel;

  public static final String SERIALIZED_NAME_HOURLY_WAGE = "hourly_wage";
  @SerializedName(SERIALIZED_NAME_HOURLY_WAGE)
  private Integer hourlyWage;

  public static final String SERIALIZED_NAME_WAGE_TYPE = "wage_type";
  @SerializedName(SERIALIZED_NAME_WAGE_TYPE)
  private String wageType;

  public static final String SERIALIZED_NAME_SMS_ME_SCHEDULES = "sms_me_schedules";
  @SerializedName(SERIALIZED_NAME_SMS_ME_SCHEDULES)
  private Boolean smsMeSchedules;

  public static final String SERIALIZED_NAME_NOTIFY_OT_RISK = "notify_ot_risk";
  @SerializedName(SERIALIZED_NAME_NOTIFY_OT_RISK)
  private Boolean notifyOtRisk;

  public static final String SERIALIZED_NAME_PERMISSIONS_TEMPLATE_ID = "permissions_template_id";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS_TEMPLATE_ID)
  private Integer permissionsTemplateId;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  private AuthenticationGetIdentityResponseDataUsersInnerMeta meta;

  public UsersCreateNewUserResponseData() {
  }

  public UsersCreateNewUserResponseData id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * User ID
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "User ID")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }


  public UsersCreateNewUserResponseData identityId(Integer identityId) {
    
    
    
    
    this.identityId = identityId;
    return this;
  }

   /**
   * Internal use
   * @return identityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Internal use")

  public Integer getIdentityId() {
    return identityId;
  }


  public void setIdentityId(Integer identityId) {
    
    
    
    this.identityId = identityId;
  }


  public UsersCreateNewUserResponseData companyId(Integer companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Company ID
   * @return companyId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Company ID")

  public Integer getCompanyId() {
    return companyId;
  }


  public void setCompanyId(Integer companyId) {
    
    
    
    this.companyId = companyId;
  }


  public UsersCreateNewUserResponseData firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * First Name
   * @return firstName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "First Name")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public UsersCreateNewUserResponseData lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Last Name
   * @return lastName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Last Name")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public UsersCreateNewUserResponseData preferredFirstName(String preferredFirstName) {
    
    
    
    
    this.preferredFirstName = preferredFirstName;
    return this;
  }

   /**
   * Preferred first name
   * @return preferredFirstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Preferred first name")

  public String getPreferredFirstName() {
    return preferredFirstName;
  }


  public void setPreferredFirstName(String preferredFirstName) {
    
    
    
    this.preferredFirstName = preferredFirstName;
  }


  public UsersCreateNewUserResponseData preferredLastName(String preferredLastName) {
    
    
    
    
    this.preferredLastName = preferredLastName;
    return this;
  }

   /**
   * Preferred last name
   * @return preferredLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Preferred last name")

  public String getPreferredLastName() {
    return preferredLastName;
  }


  public void setPreferredLastName(String preferredLastName) {
    
    
    
    this.preferredLastName = preferredLastName;
  }


  public UsersCreateNewUserResponseData pronouns(String pronouns) {
    
    
    
    
    this.pronouns = pronouns;
    return this;
  }

   /**
   * Pronouns
   * @return pronouns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pronouns")

  public String getPronouns() {
    return pronouns;
  }


  public void setPronouns(String pronouns) {
    
    
    
    this.pronouns = pronouns;
  }


  public UsersCreateNewUserResponseData email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Email Address
   * @return email
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Email Address")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public UsersCreateNewUserResponseData mobileNumber(String mobileNumber) {
    
    
    
    
    this.mobileNumber = mobileNumber;
    return this;
  }

   /**
   * Mobile Number
   * @return mobileNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Mobile Number")

  public String getMobileNumber() {
    return mobileNumber;
  }


  public void setMobileNumber(String mobileNumber) {
    
    
    
    this.mobileNumber = mobileNumber;
  }


  public UsersCreateNewUserResponseData homeNumber(String homeNumber) {
    
    
    
    
    this.homeNumber = homeNumber;
    return this;
  }

   /**
   * Home Number
   * @return homeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Home Number")

  public String getHomeNumber() {
    return homeNumber;
  }


  public void setHomeNumber(String homeNumber) {
    
    
    
    this.homeNumber = homeNumber;
  }


  public UsersCreateNewUserResponseData birthDate(LocalDate birthDate) {
    
    
    
    
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Birthdate. Format YYYY-MM-DD
   * @return birthDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Birthdate. Format YYYY-MM-DD")

  public LocalDate getBirthDate() {
    return birthDate;
  }


  public void setBirthDate(LocalDate birthDate) {
    
    
    
    this.birthDate = birthDate;
  }


  public UsersCreateNewUserResponseData address(String address) {
    
    
    
    
    this.address = address;
    return this;
  }

   /**
   * Address
   * @return address
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Address")

  public String getAddress() {
    return address;
  }


  public void setAddress(String address) {
    
    
    
    this.address = address;
  }


  public UsersCreateNewUserResponseData postalZip(String postalZip) {
    
    
    
    
    this.postalZip = postalZip;
    return this;
  }

   /**
   * Zip or postal code
   * @return postalZip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Zip or postal code")

  public String getPostalZip() {
    return postalZip;
  }


  public void setPostalZip(String postalZip) {
    
    
    
    this.postalZip = postalZip;
  }


  public UsersCreateNewUserResponseData city(String city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * City
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "City")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    
    
    
    this.city = city;
  }


  public UsersCreateNewUserResponseData provState(String provState) {
    
    
    
    
    this.provState = provState;
    return this;
  }

   /**
   * State or province
   * @return provState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "State or province")

  public String getProvState() {
    return provState;
  }


  public void setProvState(String provState) {
    
    
    
    this.provState = provState;
  }


  public UsersCreateNewUserResponseData inviteStatus(InviteStatusEnum inviteStatus) {
    
    
    
    
    this.inviteStatus = inviteStatus;
    return this;
  }

   /**
   * Invitation status to join 7shifts
   * @return inviteStatus
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Invitation status to join 7shifts")

  public InviteStatusEnum getInviteStatus() {
    return inviteStatus;
  }


  public void setInviteStatus(InviteStatusEnum inviteStatus) {
    
    
    
    this.inviteStatus = inviteStatus;
  }


  public UsersCreateNewUserResponseData active(Boolean active) {
    
    
    
    
    this.active = active;
    return this;
  }

   /**
   * If true user is active in allowed to login. If false the user has been deactivated/deleted
   * @return active
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "If true user is active in allowed to login. If false the user has been deactivated/deleted")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    
    
    
    this.active = active;
  }


  public UsersCreateNewUserResponseData photo(String photo) {
    
    
    
    
    this.photo = photo;
    return this;
  }

   /**
   * Photo url
   * @return photo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Photo url")

  public String getPhoto() {
    return photo;
  }


  public void setPhoto(String photo) {
    
    
    
    this.photo = photo;
  }


  public UsersCreateNewUserResponseData notes(String notes) {
    
    
    
    
    this.notes = notes;
    return this;
  }

   /**
   * User notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "User notes")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    
    
    
    this.notes = notes;
  }


  public UsersCreateNewUserResponseData hireDate(LocalDate hireDate) {
    
    
    
    
    this.hireDate = hireDate;
    return this;
  }

   /**
   * Date hired. YYYY-MM-DD format
   * @return hireDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Date hired. YYYY-MM-DD format")

  public LocalDate getHireDate() {
    return hireDate;
  }


  public void setHireDate(LocalDate hireDate) {
    
    
    
    this.hireDate = hireDate;
  }


  public UsersCreateNewUserResponseData timezone(String timezone) {
    
    
    
    
    this.timezone = timezone;
    return this;
  }

   /**
   * Timezone.  Valid zone info name
   * @return timezone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "America/Chicago", required = true, value = "Timezone.  Valid zone info name")

  public String getTimezone() {
    return timezone;
  }


  public void setTimezone(String timezone) {
    
    
    
    this.timezone = timezone;
  }


  public UsersCreateNewUserResponseData type(TypeEnum type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * User type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "User type")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    
    
    
    this.type = type;
  }


  public UsersCreateNewUserResponseData employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Employee ID
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Employee ID")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public UsersCreateNewUserResponseData maxWeeklyHours(String maxWeeklyHours) {
    
    
    
    
    this.maxWeeklyHours = maxWeeklyHours;
    return this;
  }

   /**
   * Maximum weekly hours user is set to work
   * @return maxWeeklyHours
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Maximum weekly hours user is set to work")

  public String getMaxWeeklyHours() {
    return maxWeeklyHours;
  }


  public void setMaxWeeklyHours(String maxWeeklyHours) {
    
    
    
    this.maxWeeklyHours = maxWeeklyHours;
  }


  public UsersCreateNewUserResponseData punchId(String punchId) {
    
    
    
    
    this.punchId = punchId;
    return this;
  }

   /**
   * Value used during clock in/out in 7shifts applications
   * @return punchId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Value used during clock in/out in 7shifts applications")

  public String getPunchId() {
    return punchId;
  }


  public void setPunchId(String punchId) {
    
    
    
    this.punchId = punchId;
  }


  public UsersCreateNewUserResponseData created(String created) {
    
    
    
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreated() {
    return created;
  }


  public void setCreated(String created) {
    
    
    
    this.created = created;
  }


  public UsersCreateNewUserResponseData modified(String modified) {
    
    
    
    
    this.modified = modified;
    return this;
  }

   /**
   * Get modified
   * @return modified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getModified() {
    return modified;
  }


  public void setModified(String modified) {
    
    
    
    this.modified = modified;
  }


  public UsersCreateNewUserResponseData invited(String invited) {
    
    
    
    
    this.invited = invited;
    return this;
  }

   /**
   * The date that the user has been sent an invitation to join 7shifts, null if not invited.
   * @return invited
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The date that the user has been sent an invitation to join 7shifts, null if not invited.")

  public String getInvited() {
    return invited;
  }


  public void setInvited(String invited) {
    
    
    
    this.invited = invited;
  }


  public UsersCreateNewUserResponseData inviteAccepted(String inviteAccepted) {
    
    
    
    
    this.inviteAccepted = inviteAccepted;
    return this;
  }

   /**
   * The date that the user accepted their 7shifts invitation, null if not accepted.
   * @return inviteAccepted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The date that the user accepted their 7shifts invitation, null if not accepted.")

  public String getInviteAccepted() {
    return inviteAccepted;
  }


  public void setInviteAccepted(String inviteAccepted) {
    
    
    
    this.inviteAccepted = inviteAccepted;
  }


  public UsersCreateNewUserResponseData isNew(Boolean isNew) {
    
    
    
    
    this.isNew = isNew;
    return this;
  }

   /**
   * If true user is new
   * @return isNew
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "If true user is new")

  public Boolean getIsNew() {
    return isNew;
  }


  public void setIsNew(Boolean isNew) {
    
    
    
    this.isNew = isNew;
  }


  public UsersCreateNewUserResponseData appearAsEmployee(Boolean appearAsEmployee) {
    
    
    
    
    this.appearAsEmployee = appearAsEmployee;
    return this;
  }

   /**
   * If true user can be assigned shifts. This applies to managers, asst_manager and employers.
   * @return appearAsEmployee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true user can be assigned shifts. This applies to managers, asst_manager and employers.")

  public Boolean getAppearAsEmployee() {
    return appearAsEmployee;
  }


  public void setAppearAsEmployee(Boolean appearAsEmployee) {
    
    
    
    this.appearAsEmployee = appearAsEmployee;
  }


  public UsersCreateNewUserResponseData subscribeToUpdates(Boolean subscribeToUpdates) {
    
    
    
    
    this.subscribeToUpdates = subscribeToUpdates;
    return this;
  }

   /**
   * If true this user is subscribed to updates from 7shifts. This includes announcing new features for 7shifts
   * @return subscribeToUpdates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true this user is subscribed to updates from 7shifts. This includes announcing new features for 7shifts")

  public Boolean getSubscribeToUpdates() {
    return subscribeToUpdates;
  }


  public void setSubscribeToUpdates(Boolean subscribeToUpdates) {
    
    
    
    this.subscribeToUpdates = subscribeToUpdates;
  }


  public UsersCreateNewUserResponseData language(String language) {
    
    
    
    
    this.language = language;
    return this;
  }

   /**
   * Specified language. In ISO 639-1 format
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "en", value = "Specified language. In ISO 639-1 format")

  public String getLanguage() {
    return language;
  }


  public void setLanguage(String language) {
    
    
    
    this.language = language;
  }


  public UsersCreateNewUserResponseData push(Boolean push) {
    
    
    
    
    this.push = push;
    return this;
  }

   /**
   * Are mobile push notifications enabled for the user
   * @return push
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Are mobile push notifications enabled for the user")

  public Boolean getPush() {
    return push;
  }


  public void setPush(Boolean push) {
    
    
    
    this.push = push;
  }


  public UsersCreateNewUserResponseData skillLevel(Integer skillLevel) {
    
    
    
    
    this.skillLevel = skillLevel;
    return this;
  }

   /**
   * Current assigned skill level
   * @return skillLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Current assigned skill level")

  public Integer getSkillLevel() {
    return skillLevel;
  }


  public void setSkillLevel(Integer skillLevel) {
    
    
    
    this.skillLevel = skillLevel;
  }


  public UsersCreateNewUserResponseData hourlyWage(Integer hourlyWage) {
    
    
    
    
    this.hourlyWage = hourlyWage;
    return this;
  }

   /**
   * Users current hourly wage in cents
   * @return hourlyWage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Users current hourly wage in cents")

  public Integer getHourlyWage() {
    return hourlyWage;
  }


  public void setHourlyWage(Integer hourlyWage) {
    
    
    
    this.hourlyWage = hourlyWage;
  }


  public UsersCreateNewUserResponseData wageType(String wageType) {
    
    
    
    
    this.wageType = wageType;
    return this;
  }

   /**
   * The type of wage the user will receive
   * @return wageType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "salary", value = "The type of wage the user will receive")

  public String getWageType() {
    return wageType;
  }


  public void setWageType(String wageType) {
    
    
    
    this.wageType = wageType;
  }


  public UsersCreateNewUserResponseData smsMeSchedules(Boolean smsMeSchedules) {
    
    
    
    
    this.smsMeSchedules = smsMeSchedules;
    return this;
  }

   /**
   * If the user should receive sms notifications for shifts
   * @return smsMeSchedules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the user should receive sms notifications for shifts")

  public Boolean getSmsMeSchedules() {
    return smsMeSchedules;
  }


  public void setSmsMeSchedules(Boolean smsMeSchedules) {
    
    
    
    this.smsMeSchedules = smsMeSchedules;
  }


  public UsersCreateNewUserResponseData notifyOtRisk(Boolean notifyOtRisk) {
    
    
    
    
    this.notifyOtRisk = notifyOtRisk;
    return this;
  }

   /**
   * Should notifications be sent if the user is at risk of overtime hours
   * @return notifyOtRisk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Should notifications be sent if the user is at risk of overtime hours")

  public Boolean getNotifyOtRisk() {
    return notifyOtRisk;
  }


  public void setNotifyOtRisk(Boolean notifyOtRisk) {
    
    
    
    this.notifyOtRisk = notifyOtRisk;
  }


  public UsersCreateNewUserResponseData permissionsTemplateId(Integer permissionsTemplateId) {
    
    
    
    
    this.permissionsTemplateId = permissionsTemplateId;
    return this;
  }

   /**
   * The ID of the permission template currently assigned to the user.
   * @return permissionsTemplateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the permission template currently assigned to the user.")

  public Integer getPermissionsTemplateId() {
    return permissionsTemplateId;
  }


  public void setPermissionsTemplateId(Integer permissionsTemplateId) {
    
    
    
    this.permissionsTemplateId = permissionsTemplateId;
  }


  public UsersCreateNewUserResponseData meta(AuthenticationGetIdentityResponseDataUsersInnerMeta meta) {
    
    
    
    
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AuthenticationGetIdentityResponseDataUsersInnerMeta getMeta() {
    return meta;
  }


  public void setMeta(AuthenticationGetIdentityResponseDataUsersInnerMeta meta) {
    
    
    
    this.meta = meta;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UsersCreateNewUserResponseData instance itself
   */
  public UsersCreateNewUserResponseData putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsersCreateNewUserResponseData usersCreateNewUserResponseData = (UsersCreateNewUserResponseData) o;
    return Objects.equals(this.id, usersCreateNewUserResponseData.id) &&
        Objects.equals(this.identityId, usersCreateNewUserResponseData.identityId) &&
        Objects.equals(this.companyId, usersCreateNewUserResponseData.companyId) &&
        Objects.equals(this.firstName, usersCreateNewUserResponseData.firstName) &&
        Objects.equals(this.lastName, usersCreateNewUserResponseData.lastName) &&
        Objects.equals(this.preferredFirstName, usersCreateNewUserResponseData.preferredFirstName) &&
        Objects.equals(this.preferredLastName, usersCreateNewUserResponseData.preferredLastName) &&
        Objects.equals(this.pronouns, usersCreateNewUserResponseData.pronouns) &&
        Objects.equals(this.email, usersCreateNewUserResponseData.email) &&
        Objects.equals(this.mobileNumber, usersCreateNewUserResponseData.mobileNumber) &&
        Objects.equals(this.homeNumber, usersCreateNewUserResponseData.homeNumber) &&
        Objects.equals(this.birthDate, usersCreateNewUserResponseData.birthDate) &&
        Objects.equals(this.address, usersCreateNewUserResponseData.address) &&
        Objects.equals(this.postalZip, usersCreateNewUserResponseData.postalZip) &&
        Objects.equals(this.city, usersCreateNewUserResponseData.city) &&
        Objects.equals(this.provState, usersCreateNewUserResponseData.provState) &&
        Objects.equals(this.inviteStatus, usersCreateNewUserResponseData.inviteStatus) &&
        Objects.equals(this.active, usersCreateNewUserResponseData.active) &&
        Objects.equals(this.photo, usersCreateNewUserResponseData.photo) &&
        Objects.equals(this.notes, usersCreateNewUserResponseData.notes) &&
        Objects.equals(this.hireDate, usersCreateNewUserResponseData.hireDate) &&
        Objects.equals(this.timezone, usersCreateNewUserResponseData.timezone) &&
        Objects.equals(this.type, usersCreateNewUserResponseData.type) &&
        Objects.equals(this.employeeId, usersCreateNewUserResponseData.employeeId) &&
        Objects.equals(this.maxWeeklyHours, usersCreateNewUserResponseData.maxWeeklyHours) &&
        Objects.equals(this.punchId, usersCreateNewUserResponseData.punchId) &&
        Objects.equals(this.created, usersCreateNewUserResponseData.created) &&
        Objects.equals(this.modified, usersCreateNewUserResponseData.modified) &&
        Objects.equals(this.invited, usersCreateNewUserResponseData.invited) &&
        Objects.equals(this.inviteAccepted, usersCreateNewUserResponseData.inviteAccepted) &&
        Objects.equals(this.isNew, usersCreateNewUserResponseData.isNew) &&
        Objects.equals(this.appearAsEmployee, usersCreateNewUserResponseData.appearAsEmployee) &&
        Objects.equals(this.subscribeToUpdates, usersCreateNewUserResponseData.subscribeToUpdates) &&
        Objects.equals(this.language, usersCreateNewUserResponseData.language) &&
        Objects.equals(this.push, usersCreateNewUserResponseData.push) &&
        Objects.equals(this.skillLevel, usersCreateNewUserResponseData.skillLevel) &&
        Objects.equals(this.hourlyWage, usersCreateNewUserResponseData.hourlyWage) &&
        Objects.equals(this.wageType, usersCreateNewUserResponseData.wageType) &&
        Objects.equals(this.smsMeSchedules, usersCreateNewUserResponseData.smsMeSchedules) &&
        Objects.equals(this.notifyOtRisk, usersCreateNewUserResponseData.notifyOtRisk) &&
        Objects.equals(this.permissionsTemplateId, usersCreateNewUserResponseData.permissionsTemplateId) &&
        Objects.equals(this.meta, usersCreateNewUserResponseData.meta)&&
        Objects.equals(this.additionalProperties, usersCreateNewUserResponseData.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, identityId, companyId, firstName, lastName, preferredFirstName, preferredLastName, pronouns, email, mobileNumber, homeNumber, birthDate, address, postalZip, city, provState, inviteStatus, active, photo, notes, hireDate, timezone, type, employeeId, maxWeeklyHours, punchId, created, modified, invited, inviteAccepted, isNew, appearAsEmployee, subscribeToUpdates, language, push, skillLevel, hourlyWage, wageType, smsMeSchedules, notifyOtRisk, permissionsTemplateId, meta, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsersCreateNewUserResponseData {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identityId: ").append(toIndentedString(identityId)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    preferredFirstName: ").append(toIndentedString(preferredFirstName)).append("\n");
    sb.append("    preferredLastName: ").append(toIndentedString(preferredLastName)).append("\n");
    sb.append("    pronouns: ").append(toIndentedString(pronouns)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    mobileNumber: ").append(toIndentedString(mobileNumber)).append("\n");
    sb.append("    homeNumber: ").append(toIndentedString(homeNumber)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    postalZip: ").append(toIndentedString(postalZip)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    provState: ").append(toIndentedString(provState)).append("\n");
    sb.append("    inviteStatus: ").append(toIndentedString(inviteStatus)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    photo: ").append(toIndentedString(photo)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    hireDate: ").append(toIndentedString(hireDate)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    maxWeeklyHours: ").append(toIndentedString(maxWeeklyHours)).append("\n");
    sb.append("    punchId: ").append(toIndentedString(punchId)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    invited: ").append(toIndentedString(invited)).append("\n");
    sb.append("    inviteAccepted: ").append(toIndentedString(inviteAccepted)).append("\n");
    sb.append("    isNew: ").append(toIndentedString(isNew)).append("\n");
    sb.append("    appearAsEmployee: ").append(toIndentedString(appearAsEmployee)).append("\n");
    sb.append("    subscribeToUpdates: ").append(toIndentedString(subscribeToUpdates)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    push: ").append(toIndentedString(push)).append("\n");
    sb.append("    skillLevel: ").append(toIndentedString(skillLevel)).append("\n");
    sb.append("    hourlyWage: ").append(toIndentedString(hourlyWage)).append("\n");
    sb.append("    wageType: ").append(toIndentedString(wageType)).append("\n");
    sb.append("    smsMeSchedules: ").append(toIndentedString(smsMeSchedules)).append("\n");
    sb.append("    notifyOtRisk: ").append(toIndentedString(notifyOtRisk)).append("\n");
    sb.append("    permissionsTemplateId: ").append(toIndentedString(permissionsTemplateId)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("identity_id");
    openapiFields.add("company_id");
    openapiFields.add("first_name");
    openapiFields.add("last_name");
    openapiFields.add("preferred_first_name");
    openapiFields.add("preferred_last_name");
    openapiFields.add("pronouns");
    openapiFields.add("email");
    openapiFields.add("mobile_number");
    openapiFields.add("home_number");
    openapiFields.add("birth_date");
    openapiFields.add("address");
    openapiFields.add("postal_zip");
    openapiFields.add("city");
    openapiFields.add("prov_state");
    openapiFields.add("invite_status");
    openapiFields.add("active");
    openapiFields.add("photo");
    openapiFields.add("notes");
    openapiFields.add("hire_date");
    openapiFields.add("timezone");
    openapiFields.add("type");
    openapiFields.add("employee_id");
    openapiFields.add("max_weekly_hours");
    openapiFields.add("punch_id");
    openapiFields.add("created");
    openapiFields.add("modified");
    openapiFields.add("invited");
    openapiFields.add("invite_accepted");
    openapiFields.add("is_new");
    openapiFields.add("appear_as_employee");
    openapiFields.add("subscribe_to_updates");
    openapiFields.add("language");
    openapiFields.add("push");
    openapiFields.add("skill_level");
    openapiFields.add("hourly_wage");
    openapiFields.add("wage_type");
    openapiFields.add("sms_me_schedules");
    openapiFields.add("notify_ot_risk");
    openapiFields.add("permissions_template_id");
    openapiFields.add("meta");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("company_id");
    openapiRequiredFields.add("first_name");
    openapiRequiredFields.add("last_name");
    openapiRequiredFields.add("email");
    openapiRequiredFields.add("mobile_number");
    openapiRequiredFields.add("home_number");
    openapiRequiredFields.add("birth_date");
    openapiRequiredFields.add("address");
    openapiRequiredFields.add("postal_zip");
    openapiRequiredFields.add("city");
    openapiRequiredFields.add("prov_state");
    openapiRequiredFields.add("invite_status");
    openapiRequiredFields.add("active");
    openapiRequiredFields.add("photo");
    openapiRequiredFields.add("notes");
    openapiRequiredFields.add("hire_date");
    openapiRequiredFields.add("timezone");
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("employee_id");
    openapiRequiredFields.add("max_weekly_hours");
    openapiRequiredFields.add("punch_id");
    openapiRequiredFields.add("invited");
    openapiRequiredFields.add("invite_accepted");
    openapiRequiredFields.add("is_new");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UsersCreateNewUserResponseData
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UsersCreateNewUserResponseData.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UsersCreateNewUserResponseData is not found in the empty JSON string", UsersCreateNewUserResponseData.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UsersCreateNewUserResponseData.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
      }
      if (!jsonObj.get("last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_name").toString()));
      }
      if (!jsonObj.get("preferred_first_name").isJsonNull() && (jsonObj.get("preferred_first_name") != null && !jsonObj.get("preferred_first_name").isJsonNull()) && !jsonObj.get("preferred_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferred_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preferred_first_name").toString()));
      }
      if (!jsonObj.get("preferred_last_name").isJsonNull() && (jsonObj.get("preferred_last_name") != null && !jsonObj.get("preferred_last_name").isJsonNull()) && !jsonObj.get("preferred_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferred_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preferred_last_name").toString()));
      }
      if (!jsonObj.get("pronouns").isJsonNull() && (jsonObj.get("pronouns") != null && !jsonObj.get("pronouns").isJsonNull()) && !jsonObj.get("pronouns").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pronouns` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pronouns").toString()));
      }
      if (!jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (!jsonObj.get("mobile_number").isJsonNull() && !jsonObj.get("mobile_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobile_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobile_number").toString()));
      }
      if (!jsonObj.get("home_number").isJsonNull() && !jsonObj.get("home_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `home_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("home_number").toString()));
      }
      if (!jsonObj.get("address").isJsonNull() && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      if (!jsonObj.get("postal_zip").isJsonNull() && !jsonObj.get("postal_zip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postal_zip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postal_zip").toString()));
      }
      if (!jsonObj.get("city").isJsonNull() && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if (!jsonObj.get("prov_state").isJsonNull() && !jsonObj.get("prov_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prov_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prov_state").toString()));
      }
      if (!jsonObj.get("invite_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invite_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invite_status").toString()));
      }
      if (!jsonObj.get("photo").isJsonNull() && !jsonObj.get("photo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `photo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("photo").toString()));
      }
      if (!jsonObj.get("notes").isJsonNull() && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if (!jsonObj.get("timezone").isJsonNull() && !jsonObj.get("timezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezone").toString()));
      }
      if (!jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if (!jsonObj.get("employee_id").isJsonNull() && !jsonObj.get("employee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employee_id").toString()));
      }
      if (!jsonObj.get("max_weekly_hours").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `max_weekly_hours` to be a primitive type in the JSON string but got `%s`", jsonObj.get("max_weekly_hours").toString()));
      }
      if (!jsonObj.get("punch_id").isJsonNull() && !jsonObj.get("punch_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `punch_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("punch_id").toString()));
      }
      if ((jsonObj.get("created") != null && !jsonObj.get("created").isJsonNull()) && !jsonObj.get("created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created").toString()));
      }
      if ((jsonObj.get("modified") != null && !jsonObj.get("modified").isJsonNull()) && !jsonObj.get("modified").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modified` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modified").toString()));
      }
      if (!jsonObj.get("invited").isJsonNull() && !jsonObj.get("invited").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invited` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invited").toString()));
      }
      if (!jsonObj.get("invite_accepted").isJsonNull() && !jsonObj.get("invite_accepted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invite_accepted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invite_accepted").toString()));
      }
      if ((jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) && !jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
      if (!jsonObj.get("wage_type").isJsonNull() && (jsonObj.get("wage_type") != null && !jsonObj.get("wage_type").isJsonNull()) && !jsonObj.get("wage_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wage_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wage_type").toString()));
      }
      // validate the optional field `meta`
      if (jsonObj.get("meta") != null && !jsonObj.get("meta").isJsonNull()) {
        AuthenticationGetIdentityResponseDataUsersInnerMeta.validateJsonObject(jsonObj.getAsJsonObject("meta"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UsersCreateNewUserResponseData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UsersCreateNewUserResponseData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UsersCreateNewUserResponseData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UsersCreateNewUserResponseData.class));

       return (TypeAdapter<T>) new TypeAdapter<UsersCreateNewUserResponseData>() {
           @Override
           public void write(JsonWriter out, UsersCreateNewUserResponseData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UsersCreateNewUserResponseData read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             UsersCreateNewUserResponseData instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UsersCreateNewUserResponseData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UsersCreateNewUserResponseData
  * @throws IOException if the JSON string is invalid with respect to UsersCreateNewUserResponseData
  */
  public static UsersCreateNewUserResponseData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UsersCreateNewUserResponseData.class);
  }

 /**
  * Convert an instance of UsersCreateNewUserResponseData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

