/*
 * 7shifts API
 * 7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.
 *
 * The version of the OpenAPI document: 2023-05-01
 * Contact: api-support@7shifts.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ShiftsUpdateShiftByIdRequestBreaksInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ShiftsUpdateShiftByIdRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ShiftsUpdateShiftByIdRequest {
  public static final String SERIALIZED_NAME_LOCATION_ID = "location_id";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private Integer locationId;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_DEPARTMENT_ID = "department_id";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_ID)
  private Integer departmentId;

  public static final String SERIALIZED_NAME_ROLE_ID = "role_id";
  @SerializedName(SERIALIZED_NAME_ROLE_ID)
  private Integer roleId;

  public static final String SERIALIZED_NAME_STATION_ID = "station_id";
  @SerializedName(SERIALIZED_NAME_STATION_ID)
  private Integer stationId;

  public static final String SERIALIZED_NAME_START = "start";
  @SerializedName(SERIALIZED_NAME_START)
  private OffsetDateTime start;

  public static final String SERIALIZED_NAME_END = "end";
  @SerializedName(SERIALIZED_NAME_END)
  private OffsetDateTime end;

  public static final String SERIALIZED_NAME_CLOSE = "close";
  @SerializedName(SERIALIZED_NAME_CLOSE)
  private Boolean close;

  public static final String SERIALIZED_NAME_BUSINESS_DECLINE = "business_decline";
  @SerializedName(SERIALIZED_NAME_BUSINESS_DECLINE)
  private Boolean businessDecline;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_DRAFT = "draft";
  @SerializedName(SERIALIZED_NAME_DRAFT)
  private Boolean draft;

  public static final String SERIALIZED_NAME_OPEN = "open";
  @SerializedName(SERIALIZED_NAME_OPEN)
  private Boolean open;

  /**
   * Set when open is true. Set to 0 when everyone at a location can request an open shift; set to 1 if only offered to specified role.
   */
  @JsonAdapter(OpenOfferTypeEnum.Adapter.class)
 public enum OpenOfferTypeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    OpenOfferTypeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OpenOfferTypeEnum fromValue(Integer value) {
      for (OpenOfferTypeEnum b : OpenOfferTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OpenOfferTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OpenOfferTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OpenOfferTypeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return OpenOfferTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_OPEN_OFFER_TYPE = "open_offer_type";
  @SerializedName(SERIALIZED_NAME_OPEN_OFFER_TYPE)
  private OpenOfferTypeEnum openOfferType;

  public static final String SERIALIZED_NAME_UNASSIGNED = "unassigned";
  @SerializedName(SERIALIZED_NAME_UNASSIGNED)
  private Boolean unassigned;

  /**
   * The skill level required for this shift.  * 1: Beginner  * 2: Intermediate  * 3: Experienced 
   */
  @JsonAdapter(UnassignedSkillLevelEnum.Adapter.class)
 public enum UnassignedSkillLevelEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    UnassignedSkillLevelEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static UnassignedSkillLevelEnum fromValue(Integer value) {
      for (UnassignedSkillLevelEnum b : UnassignedSkillLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<UnassignedSkillLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UnassignedSkillLevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UnassignedSkillLevelEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return UnassignedSkillLevelEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_UNASSIGNED_SKILL_LEVEL = "unassigned_skill_level";
  @SerializedName(SERIALIZED_NAME_UNASSIGNED_SKILL_LEVEL)
  private UnassignedSkillLevelEnum unassignedSkillLevel;

  /**
   * Shift status type.  * 0: None  * 1: Sick  * 2: No Show  * 3: Late  * 4: Call Out  * 5: Left Late 
   */
  @JsonAdapter(StatusEnum.Adapter.class)
 public enum StatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5);

    private Integer value;

    StatusEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(Integer value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_LATE_MINUTES = "late_minutes";
  @SerializedName(SERIALIZED_NAME_LATE_MINUTES)
  private Integer lateMinutes;

  public static final String SERIALIZED_NAME_BREAKS = "breaks";
  @SerializedName(SERIALIZED_NAME_BREAKS)
  private List<ShiftsUpdateShiftByIdRequestBreaksInner> breaks = null;

  public ShiftsUpdateShiftByIdRequest() {
  }

  public ShiftsUpdateShiftByIdRequest locationId(Integer locationId) {
    
    
    
    
    this.locationId = locationId;
    return this;
  }

   /**
   * Location ID
   * @return locationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Location ID")

  public Integer getLocationId() {
    return locationId;
  }


  public void setLocationId(Integer locationId) {
    
    
    
    this.locationId = locationId;
  }


  public ShiftsUpdateShiftByIdRequest userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * User ID
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User ID")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }


  public ShiftsUpdateShiftByIdRequest departmentId(Integer departmentId) {
    
    
    
    
    this.departmentId = departmentId;
    return this;
  }

   /**
   * Department ID. Required if the location uses departments
   * @return departmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Department ID. Required if the location uses departments")

  public Integer getDepartmentId() {
    return departmentId;
  }


  public void setDepartmentId(Integer departmentId) {
    
    
    
    this.departmentId = departmentId;
  }


  public ShiftsUpdateShiftByIdRequest roleId(Integer roleId) {
    
    
    
    
    this.roleId = roleId;
    return this;
  }

   /**
   * Role ID. Required if the location uses roles
   * @return roleId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Role ID. Required if the location uses roles")

  public Integer getRoleId() {
    return roleId;
  }


  public void setRoleId(Integer roleId) {
    
    
    
    this.roleId = roleId;
  }


  public ShiftsUpdateShiftByIdRequest stationId(Integer stationId) {
    
    
    
    
    this.stationId = stationId;
    return this;
  }

   /**
   * The station assigned to the shift
   * @return stationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The station assigned to the shift")

  public Integer getStationId() {
    return stationId;
  }


  public void setStationId(Integer stationId) {
    
    
    
    this.stationId = stationId;
  }


  public ShiftsUpdateShiftByIdRequest start(OffsetDateTime start) {
    
    
    
    
    this.start = start;
    return this;
  }

   /**
   * Start date time of the shift. UTC in ISO8601 format
   * @return start
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-01-01T00:00Z", value = "Start date time of the shift. UTC in ISO8601 format")

  public OffsetDateTime getStart() {
    return start;
  }


  public void setStart(OffsetDateTime start) {
    
    
    
    this.start = start;
  }


  public ShiftsUpdateShiftByIdRequest end(OffsetDateTime end) {
    
    
    
    
    this.end = end;
    return this;
  }

   /**
   * End date time of the shift. UTC in ISO8601 format
   * @return end
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-01-01T00:00Z", value = "End date time of the shift. UTC in ISO8601 format")

  public OffsetDateTime getEnd() {
    return end;
  }


  public void setEnd(OffsetDateTime end) {
    
    
    
    this.end = end;
  }


  public ShiftsUpdateShiftByIdRequest close(Boolean close) {
    
    
    
    
    this.close = close;
    return this;
  }

   /**
   * Set to true if the shift ends at closing time. If set end is not used.
   * @return close
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set to true if the shift ends at closing time. If set end is not used.")

  public Boolean getClose() {
    return close;
  }


  public void setClose(Boolean close) {
    
    
    
    this.close = close;
  }


  public ShiftsUpdateShiftByIdRequest businessDecline(Boolean businessDecline) {
    
    
    
    
    this.businessDecline = businessDecline;
    return this;
  }

   /**
   * Set to true if the shift ends at business decline.
   * @return businessDecline
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set to true if the shift ends at business decline.")

  public Boolean getBusinessDecline() {
    return businessDecline;
  }


  public void setBusinessDecline(Boolean businessDecline) {
    
    
    
    this.businessDecline = businessDecline;
  }


  public ShiftsUpdateShiftByIdRequest notes(String notes) {
    
    
    
    
    this.notes = notes;
    return this;
  }

   /**
   * Notes displayed on a shift
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Notes displayed on a shift")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    
    
    
    this.notes = notes;
  }


  public ShiftsUpdateShiftByIdRequest draft(Boolean draft) {
    
    
    
    
    this.draft = draft;
    return this;
  }

   /**
   * If true the shift is not published.
   * @return draft
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true the shift is not published.")

  public Boolean getDraft() {
    return draft;
  }


  public void setDraft(Boolean draft) {
    
    
    
    this.draft = draft;
  }


  public ShiftsUpdateShiftByIdRequest open(Boolean open) {
    
    
    
    
    this.open = open;
    return this;
  }

   /**
   * Set to true if the shift is not assigned to any user. Open shifts can be requested by users.
   * @return open
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set to true if the shift is not assigned to any user. Open shifts can be requested by users.")

  public Boolean getOpen() {
    return open;
  }


  public void setOpen(Boolean open) {
    
    
    
    this.open = open;
  }


  public ShiftsUpdateShiftByIdRequest openOfferType(OpenOfferTypeEnum openOfferType) {
    
    
    
    
    this.openOfferType = openOfferType;
    return this;
  }

   /**
   * Set when open is true. Set to 0 when everyone at a location can request an open shift; set to 1 if only offered to specified role.
   * @return openOfferType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set when open is true. Set to 0 when everyone at a location can request an open shift; set to 1 if only offered to specified role.")

  public OpenOfferTypeEnum getOpenOfferType() {
    return openOfferType;
  }


  public void setOpenOfferType(OpenOfferTypeEnum openOfferType) {
    
    
    
    this.openOfferType = openOfferType;
  }


  public ShiftsUpdateShiftByIdRequest unassigned(Boolean unassigned) {
    
    
    
    
    this.unassigned = unassigned;
    return this;
  }

   /**
   * When true the shift is unassigned. Internal use only.
   * @return unassigned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When true the shift is unassigned. Internal use only.")

  public Boolean getUnassigned() {
    return unassigned;
  }


  public void setUnassigned(Boolean unassigned) {
    
    
    
    this.unassigned = unassigned;
  }


  public ShiftsUpdateShiftByIdRequest unassignedSkillLevel(UnassignedSkillLevelEnum unassignedSkillLevel) {
    
    
    
    
    this.unassignedSkillLevel = unassignedSkillLevel;
    return this;
  }

   /**
   * The skill level required for this shift.  * 1: Beginner  * 2: Intermediate  * 3: Experienced 
   * @return unassignedSkillLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The skill level required for this shift.  * 1: Beginner  * 2: Intermediate  * 3: Experienced ")

  public UnassignedSkillLevelEnum getUnassignedSkillLevel() {
    return unassignedSkillLevel;
  }


  public void setUnassignedSkillLevel(UnassignedSkillLevelEnum unassignedSkillLevel) {
    
    
    
    this.unassignedSkillLevel = unassignedSkillLevel;
  }


  public ShiftsUpdateShiftByIdRequest status(StatusEnum status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Shift status type.  * 0: None  * 1: Sick  * 2: No Show  * 3: Late  * 4: Call Out  * 5: Left Late 
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shift status type.  * 0: None  * 1: Sick  * 2: No Show  * 3: Late  * 4: Call Out  * 5: Left Late ")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    
    
    
    this.status = status;
  }


  public ShiftsUpdateShiftByIdRequest lateMinutes(Integer lateMinutes) {
    
    
    
    
    this.lateMinutes = lateMinutes;
    return this;
  }

   /**
   * Number of minutes a user can clock in late after the shift starts.
   * @return lateMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of minutes a user can clock in late after the shift starts.")

  public Integer getLateMinutes() {
    return lateMinutes;
  }


  public void setLateMinutes(Integer lateMinutes) {
    
    
    
    this.lateMinutes = lateMinutes;
  }


  public ShiftsUpdateShiftByIdRequest breaks(List<ShiftsUpdateShiftByIdRequestBreaksInner> breaks) {
    
    
    
    
    this.breaks = breaks;
    return this;
  }

  public ShiftsUpdateShiftByIdRequest addBreaksItem(ShiftsUpdateShiftByIdRequestBreaksInner breaksItem) {
    if (this.breaks == null) {
      this.breaks = new ArrayList<>();
    }
    this.breaks.add(breaksItem);
    return this;
  }

   /**
   * Breaks to be updated with the shift
   * @return breaks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Breaks to be updated with the shift")

  public List<ShiftsUpdateShiftByIdRequestBreaksInner> getBreaks() {
    return breaks;
  }


  public void setBreaks(List<ShiftsUpdateShiftByIdRequestBreaksInner> breaks) {
    
    
    
    this.breaks = breaks;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ShiftsUpdateShiftByIdRequest instance itself
   */
  public ShiftsUpdateShiftByIdRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShiftsUpdateShiftByIdRequest shiftsUpdateShiftByIdRequest = (ShiftsUpdateShiftByIdRequest) o;
    return Objects.equals(this.locationId, shiftsUpdateShiftByIdRequest.locationId) &&
        Objects.equals(this.userId, shiftsUpdateShiftByIdRequest.userId) &&
        Objects.equals(this.departmentId, shiftsUpdateShiftByIdRequest.departmentId) &&
        Objects.equals(this.roleId, shiftsUpdateShiftByIdRequest.roleId) &&
        Objects.equals(this.stationId, shiftsUpdateShiftByIdRequest.stationId) &&
        Objects.equals(this.start, shiftsUpdateShiftByIdRequest.start) &&
        Objects.equals(this.end, shiftsUpdateShiftByIdRequest.end) &&
        Objects.equals(this.close, shiftsUpdateShiftByIdRequest.close) &&
        Objects.equals(this.businessDecline, shiftsUpdateShiftByIdRequest.businessDecline) &&
        Objects.equals(this.notes, shiftsUpdateShiftByIdRequest.notes) &&
        Objects.equals(this.draft, shiftsUpdateShiftByIdRequest.draft) &&
        Objects.equals(this.open, shiftsUpdateShiftByIdRequest.open) &&
        Objects.equals(this.openOfferType, shiftsUpdateShiftByIdRequest.openOfferType) &&
        Objects.equals(this.unassigned, shiftsUpdateShiftByIdRequest.unassigned) &&
        Objects.equals(this.unassignedSkillLevel, shiftsUpdateShiftByIdRequest.unassignedSkillLevel) &&
        Objects.equals(this.status, shiftsUpdateShiftByIdRequest.status) &&
        Objects.equals(this.lateMinutes, shiftsUpdateShiftByIdRequest.lateMinutes) &&
        Objects.equals(this.breaks, shiftsUpdateShiftByIdRequest.breaks)&&
        Objects.equals(this.additionalProperties, shiftsUpdateShiftByIdRequest.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationId, userId, departmentId, roleId, stationId, start, end, close, businessDecline, notes, draft, open, openOfferType, unassigned, unassignedSkillLevel, status, lateMinutes, breaks, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShiftsUpdateShiftByIdRequest {\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    roleId: ").append(toIndentedString(roleId)).append("\n");
    sb.append("    stationId: ").append(toIndentedString(stationId)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    close: ").append(toIndentedString(close)).append("\n");
    sb.append("    businessDecline: ").append(toIndentedString(businessDecline)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    draft: ").append(toIndentedString(draft)).append("\n");
    sb.append("    open: ").append(toIndentedString(open)).append("\n");
    sb.append("    openOfferType: ").append(toIndentedString(openOfferType)).append("\n");
    sb.append("    unassigned: ").append(toIndentedString(unassigned)).append("\n");
    sb.append("    unassignedSkillLevel: ").append(toIndentedString(unassignedSkillLevel)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lateMinutes: ").append(toIndentedString(lateMinutes)).append("\n");
    sb.append("    breaks: ").append(toIndentedString(breaks)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("location_id");
    openapiFields.add("user_id");
    openapiFields.add("department_id");
    openapiFields.add("role_id");
    openapiFields.add("station_id");
    openapiFields.add("start");
    openapiFields.add("end");
    openapiFields.add("close");
    openapiFields.add("business_decline");
    openapiFields.add("notes");
    openapiFields.add("draft");
    openapiFields.add("open");
    openapiFields.add("open_offer_type");
    openapiFields.add("unassigned");
    openapiFields.add("unassigned_skill_level");
    openapiFields.add("status");
    openapiFields.add("late_minutes");
    openapiFields.add("breaks");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ShiftsUpdateShiftByIdRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ShiftsUpdateShiftByIdRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ShiftsUpdateShiftByIdRequest is not found in the empty JSON string", ShiftsUpdateShiftByIdRequest.openapiRequiredFields.toString()));
        }
      }
      if (!jsonObj.get("notes").isJsonNull() && (jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if (jsonObj.get("breaks") != null && !jsonObj.get("breaks").isJsonNull()) {
        JsonArray jsonArraybreaks = jsonObj.getAsJsonArray("breaks");
        if (jsonArraybreaks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("breaks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `breaks` to be an array in the JSON string but got `%s`", jsonObj.get("breaks").toString()));
          }

          // validate the optional field `breaks` (array)
          for (int i = 0; i < jsonArraybreaks.size(); i++) {
            ShiftsUpdateShiftByIdRequestBreaksInner.validateJsonObject(jsonArraybreaks.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ShiftsUpdateShiftByIdRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ShiftsUpdateShiftByIdRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ShiftsUpdateShiftByIdRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ShiftsUpdateShiftByIdRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<ShiftsUpdateShiftByIdRequest>() {
           @Override
           public void write(JsonWriter out, ShiftsUpdateShiftByIdRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ShiftsUpdateShiftByIdRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ShiftsUpdateShiftByIdRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ShiftsUpdateShiftByIdRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ShiftsUpdateShiftByIdRequest
  * @throws IOException if the JSON string is invalid with respect to ShiftsUpdateShiftByIdRequest
  */
  public static ShiftsUpdateShiftByIdRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ShiftsUpdateShiftByIdRequest.class);
  }

 /**
  * Convert an instance of ShiftsUpdateShiftByIdRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

