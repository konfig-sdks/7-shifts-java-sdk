/*
 * 7shifts API
 * 7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.
 *
 * The version of the OpenAPI document: 2023-05-01
 * Contact: api-support@7shifts.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.TimeOffCreateRequestRequestHoursInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * TimeOffCreateRequestRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TimeOffCreateRequestRequest {
  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_COMPANY_ID = "company_id";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private Integer companyId;

  public static final String SERIALIZED_NAME_FROM_DATE = "from_date";
  @SerializedName(SERIALIZED_NAME_FROM_DATE)
  private String fromDate;

  public static final String SERIALIZED_NAME_TO_DATE = "to_date";
  @SerializedName(SERIALIZED_NAME_TO_DATE)
  private String toDate;

  public static final String SERIALIZED_NAME_PARTIAL = "partial";
  @SerializedName(SERIALIZED_NAME_PARTIAL)
  private Boolean partial;

  public static final String SERIALIZED_NAME_PARTIAL_FROM = "partial_from";
  @SerializedName(SERIALIZED_NAME_PARTIAL_FROM)
  private String partialFrom;

  public static final String SERIALIZED_NAME_PARTIAL_TO = "partial_to";
  @SerializedName(SERIALIZED_NAME_PARTIAL_TO)
  private String partialTo;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Integer status;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_HOURS = "hours";
  @SerializedName(SERIALIZED_NAME_HOURS)
  private List<TimeOffCreateRequestRequestHoursInner> hours = null;

  public static final String SERIALIZED_NAME_STATUS_ACTION_USER_ID = "status_action_user_id";
  @SerializedName(SERIALIZED_NAME_STATUS_ACTION_USER_ID)
  private Integer statusActionUserId;

  public static final String SERIALIZED_NAME_STATUS_ACTION_MESSAGE = "status_action_message";
  @SerializedName(SERIALIZED_NAME_STATUS_ACTION_MESSAGE)
  private String statusActionMessage;

  public TimeOffCreateRequestRequest() {
  }

  public TimeOffCreateRequestRequest userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }


  public TimeOffCreateRequestRequest companyId(Integer companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getCompanyId() {
    return companyId;
  }


  public void setCompanyId(Integer companyId) {
    
    
    
    this.companyId = companyId;
  }


  public TimeOffCreateRequestRequest fromDate(String fromDate) {
    
    
    
    
    this.fromDate = fromDate;
    return this;
  }

   /**
   * Get fromDate
   * @return fromDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getFromDate() {
    return fromDate;
  }


  public void setFromDate(String fromDate) {
    
    
    
    this.fromDate = fromDate;
  }


  public TimeOffCreateRequestRequest toDate(String toDate) {
    
    
    
    
    this.toDate = toDate;
    return this;
  }

   /**
   * Get toDate
   * @return toDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getToDate() {
    return toDate;
  }


  public void setToDate(String toDate) {
    
    
    
    this.toDate = toDate;
  }


  public TimeOffCreateRequestRequest partial(Boolean partial) {
    
    
    
    
    this.partial = partial;
    return this;
  }

   /**
   * Get partial
   * @return partial
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getPartial() {
    return partial;
  }


  public void setPartial(Boolean partial) {
    
    
    
    this.partial = partial;
  }


  public TimeOffCreateRequestRequest partialFrom(String partialFrom) {
    
    
    
    
    this.partialFrom = partialFrom;
    return this;
  }

   /**
   * Get partialFrom
   * @return partialFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPartialFrom() {
    return partialFrom;
  }


  public void setPartialFrom(String partialFrom) {
    
    
    
    this.partialFrom = partialFrom;
  }


  public TimeOffCreateRequestRequest partialTo(String partialTo) {
    
    
    
    
    this.partialTo = partialTo;
    return this;
  }

   /**
   * Get partialTo
   * @return partialTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPartialTo() {
    return partialTo;
  }


  public void setPartialTo(String partialTo) {
    
    
    
    this.partialTo = partialTo;
  }


  public TimeOffCreateRequestRequest comments(String comments) {
    
    
    
    
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComments() {
    return comments;
  }


  public void setComments(String comments) {
    
    
    
    this.comments = comments;
  }


  public TimeOffCreateRequestRequest status(Integer status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getStatus() {
    return status;
  }


  public void setStatus(Integer status) {
    
    
    
    this.status = status;
  }


  public TimeOffCreateRequestRequest category(String category) {
    
    
    
    
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    
    
    
    this.category = category;
  }


  public TimeOffCreateRequestRequest hours(List<TimeOffCreateRequestRequestHoursInner> hours) {
    
    
    
    
    this.hours = hours;
    return this;
  }

  public TimeOffCreateRequestRequest addHoursItem(TimeOffCreateRequestRequestHoursInner hoursItem) {
    if (this.hours == null) {
      this.hours = new ArrayList<>();
    }
    this.hours.add(hoursItem);
    return this;
  }

   /**
   * Get hours
   * @return hours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TimeOffCreateRequestRequestHoursInner> getHours() {
    return hours;
  }


  public void setHours(List<TimeOffCreateRequestRequestHoursInner> hours) {
    
    
    
    this.hours = hours;
  }


  public TimeOffCreateRequestRequest statusActionUserId(Integer statusActionUserId) {
    
    
    
    
    this.statusActionUserId = statusActionUserId;
    return this;
  }

   /**
   * Get statusActionUserId
   * @return statusActionUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatusActionUserId() {
    return statusActionUserId;
  }


  public void setStatusActionUserId(Integer statusActionUserId) {
    
    
    
    this.statusActionUserId = statusActionUserId;
  }


  public TimeOffCreateRequestRequest statusActionMessage(String statusActionMessage) {
    
    
    
    
    this.statusActionMessage = statusActionMessage;
    return this;
  }

   /**
   * Get statusActionMessage
   * @return statusActionMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatusActionMessage() {
    return statusActionMessage;
  }


  public void setStatusActionMessage(String statusActionMessage) {
    
    
    
    this.statusActionMessage = statusActionMessage;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the TimeOffCreateRequestRequest instance itself
   */
  public TimeOffCreateRequestRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeOffCreateRequestRequest timeOffCreateRequestRequest = (TimeOffCreateRequestRequest) o;
    return Objects.equals(this.userId, timeOffCreateRequestRequest.userId) &&
        Objects.equals(this.companyId, timeOffCreateRequestRequest.companyId) &&
        Objects.equals(this.fromDate, timeOffCreateRequestRequest.fromDate) &&
        Objects.equals(this.toDate, timeOffCreateRequestRequest.toDate) &&
        Objects.equals(this.partial, timeOffCreateRequestRequest.partial) &&
        Objects.equals(this.partialFrom, timeOffCreateRequestRequest.partialFrom) &&
        Objects.equals(this.partialTo, timeOffCreateRequestRequest.partialTo) &&
        Objects.equals(this.comments, timeOffCreateRequestRequest.comments) &&
        Objects.equals(this.status, timeOffCreateRequestRequest.status) &&
        Objects.equals(this.category, timeOffCreateRequestRequest.category) &&
        Objects.equals(this.hours, timeOffCreateRequestRequest.hours) &&
        Objects.equals(this.statusActionUserId, timeOffCreateRequestRequest.statusActionUserId) &&
        Objects.equals(this.statusActionMessage, timeOffCreateRequestRequest.statusActionMessage)&&
        Objects.equals(this.additionalProperties, timeOffCreateRequestRequest.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, companyId, fromDate, toDate, partial, partialFrom, partialTo, comments, status, category, hours, statusActionUserId, statusActionMessage, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeOffCreateRequestRequest {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    toDate: ").append(toIndentedString(toDate)).append("\n");
    sb.append("    partial: ").append(toIndentedString(partial)).append("\n");
    sb.append("    partialFrom: ").append(toIndentedString(partialFrom)).append("\n");
    sb.append("    partialTo: ").append(toIndentedString(partialTo)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    hours: ").append(toIndentedString(hours)).append("\n");
    sb.append("    statusActionUserId: ").append(toIndentedString(statusActionUserId)).append("\n");
    sb.append("    statusActionMessage: ").append(toIndentedString(statusActionMessage)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("user_id");
    openapiFields.add("company_id");
    openapiFields.add("from_date");
    openapiFields.add("to_date");
    openapiFields.add("partial");
    openapiFields.add("partial_from");
    openapiFields.add("partial_to");
    openapiFields.add("comments");
    openapiFields.add("status");
    openapiFields.add("category");
    openapiFields.add("hours");
    openapiFields.add("status_action_user_id");
    openapiFields.add("status_action_message");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("user_id");
    openapiRequiredFields.add("company_id");
    openapiRequiredFields.add("from_date");
    openapiRequiredFields.add("to_date");
    openapiRequiredFields.add("partial");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("category");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TimeOffCreateRequestRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TimeOffCreateRequestRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TimeOffCreateRequestRequest is not found in the empty JSON string", TimeOffCreateRequestRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TimeOffCreateRequestRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("from_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from_date").toString()));
      }
      if (!jsonObj.get("to_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `to_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("to_date").toString()));
      }
      if (!jsonObj.get("partial_from").isJsonNull() && (jsonObj.get("partial_from") != null && !jsonObj.get("partial_from").isJsonNull()) && !jsonObj.get("partial_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partial_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partial_from").toString()));
      }
      if (!jsonObj.get("partial_to").isJsonNull() && (jsonObj.get("partial_to") != null && !jsonObj.get("partial_to").isJsonNull()) && !jsonObj.get("partial_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partial_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partial_to").toString()));
      }
      if ((jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if (!jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      if (jsonObj.get("hours") != null && !jsonObj.get("hours").isJsonNull()) {
        JsonArray jsonArrayhours = jsonObj.getAsJsonArray("hours");
        if (jsonArrayhours != null) {
          // ensure the json data is an array
          if (!jsonObj.get("hours").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `hours` to be an array in the JSON string but got `%s`", jsonObj.get("hours").toString()));
          }

          // validate the optional field `hours` (array)
          for (int i = 0; i < jsonArrayhours.size(); i++) {
            TimeOffCreateRequestRequestHoursInner.validateJsonObject(jsonArrayhours.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("status_action_message") != null && !jsonObj.get("status_action_message").isJsonNull()) && !jsonObj.get("status_action_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_action_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_action_message").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TimeOffCreateRequestRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TimeOffCreateRequestRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TimeOffCreateRequestRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TimeOffCreateRequestRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<TimeOffCreateRequestRequest>() {
           @Override
           public void write(JsonWriter out, TimeOffCreateRequestRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public TimeOffCreateRequestRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             TimeOffCreateRequestRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TimeOffCreateRequestRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TimeOffCreateRequestRequest
  * @throws IOException if the JSON string is invalid with respect to TimeOffCreateRequestRequest
  */
  public static TimeOffCreateRequestRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TimeOffCreateRequestRequest.class);
  }

 /**
  * Convert an instance of TimeOffCreateRequestRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

