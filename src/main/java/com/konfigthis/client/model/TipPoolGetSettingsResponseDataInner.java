/*
 * 7shifts API
 * 7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.
 *
 * The version of the OpenAPI document: 2023-05-01
 * Contact: api-support@7shifts.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.TipPoolGetSettingsResponseDataInnerTipPoolCadenceSettings;
import com.konfigthis.client.model.TipPoolGetSettingsResponseDataInnerTipPoolContributionsInner;
import com.konfigthis.client.model.TipPoolGetSettingsResponseDataInnerTipPoolStakeholdersInner;
import com.konfigthis.client.model.TipPoolGetSettingsResponseDataInnerUnmappedContributionFiltersInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * TipPoolGetSettingsResponseDataInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TipPoolGetSettingsResponseDataInner {
  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private UUID uuid;

  public static final String SERIALIZED_NAME_COMPANY_ID = "company_id";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private Long companyId;

  public static final String SERIALIZED_NAME_LOCATION_ID = "location_id";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private Long locationId;

  public static final String SERIALIZED_NAME_DAY_PART_UUIDS = "day_part_uuids";
  @SerializedName(SERIALIZED_NAME_DAY_PART_UUIDS)
  private List<UUID> dayPartUuids = null;

  /**
   * Tip pool contribution type
   */
  @JsonAdapter(ContributionTypeEnum.Adapter.class)
 public enum ContributionTypeEnum {
    POS_PERCENT_TIPS_AND_SALES("POS_PERCENT_TIPS_AND_SALES"),
    
    MANUAL_ENTRY("MANUAL_ENTRY");

    private String value;

    ContributionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ContributionTypeEnum fromValue(String value) {
      for (ContributionTypeEnum b : ContributionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ContributionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ContributionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ContributionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ContributionTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CONTRIBUTION_TYPE = "contribution_type";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTION_TYPE)
  private ContributionTypeEnum contributionType;

  /**
   * Tip pool distribution type
   */
  @JsonAdapter(DistributionTypeEnum.Adapter.class)
 public enum DistributionTypeEnum {
    HOURS_WORKED("HOURS_WORKED"),
    
    ROLE_PERCENT_HOURS_WORKED("ROLE_PERCENT_HOURS_WORKED"),
    
    POINTS("POINTS");

    private String value;

    DistributionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DistributionTypeEnum fromValue(String value) {
      for (DistributionTypeEnum b : DistributionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DistributionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DistributionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DistributionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DistributionTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DISTRIBUTION_TYPE = "distribution_type";
  @SerializedName(SERIALIZED_NAME_DISTRIBUTION_TYPE)
  private DistributionTypeEnum distributionType;

  public static final String SERIALIZED_NAME_SALES_TIP_PERCENTAGE = "sales_tip_percentage";
  @SerializedName(SERIALIZED_NAME_SALES_TIP_PERCENTAGE)
  private Float salesTipPercentage;

  public static final String SERIALIZED_NAME_UNMAPPED_CONTRIBUTION_METHOD = "unmapped_contribution_method";
  @SerializedName(SERIALIZED_NAME_UNMAPPED_CONTRIBUTION_METHOD)
  private String unmappedContributionMethod;

  public static final String SERIALIZED_NAME_UNMAPPED_CONTRIBUTION_FILTERS = "unmapped_contribution_filters";
  @SerializedName(SERIALIZED_NAME_UNMAPPED_CONTRIBUTION_FILTERS)
  private List<TipPoolGetSettingsResponseDataInnerUnmappedContributionFiltersInner> unmappedContributionFilters = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_TIP_POOL_STAKEHOLDERS = "tip_pool_stakeholders";
  @SerializedName(SERIALIZED_NAME_TIP_POOL_STAKEHOLDERS)
  private List<TipPoolGetSettingsResponseDataInnerTipPoolStakeholdersInner> tipPoolStakeholders = new ArrayList<>();

  public static final String SERIALIZED_NAME_TIP_POOL_CONTRIBUTIONS = "tip_pool_contributions";
  @SerializedName(SERIALIZED_NAME_TIP_POOL_CONTRIBUTIONS)
  private List<TipPoolGetSettingsResponseDataInnerTipPoolContributionsInner> tipPoolContributions = new ArrayList<>();

  public static final String SERIALIZED_NAME_TIP_POOL_CADENCE_SETTINGS = "tip_pool_cadence_settings";
  @SerializedName(SERIALIZED_NAME_TIP_POOL_CADENCE_SETTINGS)
  private TipPoolGetSettingsResponseDataInnerTipPoolCadenceSettings tipPoolCadenceSettings;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_MODIFIED = "modified";
  @SerializedName(SERIALIZED_NAME_MODIFIED)
  private OffsetDateTime modified;

  public TipPoolGetSettingsResponseDataInner() {
  }

  public TipPoolGetSettingsResponseDataInner uuid(UUID uuid) {
    
    
    
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Tip pool settings UUID
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tip pool settings UUID")

  public UUID getUuid() {
    return uuid;
  }


  public void setUuid(UUID uuid) {
    
    
    
    this.uuid = uuid;
  }


  public TipPoolGetSettingsResponseDataInner companyId(Long companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Company ID
   * @return companyId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1234", required = true, value = "Company ID")

  public Long getCompanyId() {
    return companyId;
  }


  public void setCompanyId(Long companyId) {
    
    
    
    this.companyId = companyId;
  }


  public TipPoolGetSettingsResponseDataInner locationId(Long locationId) {
    
    
    
    
    this.locationId = locationId;
    return this;
  }

   /**
   * Location ID
   * @return locationId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1234", required = true, value = "Location ID")

  public Long getLocationId() {
    return locationId;
  }


  public void setLocationId(Long locationId) {
    
    
    
    this.locationId = locationId;
  }


  public TipPoolGetSettingsResponseDataInner dayPartUuids(List<UUID> dayPartUuids) {
    
    
    
    
    this.dayPartUuids = dayPartUuids;
    return this;
  }

  public TipPoolGetSettingsResponseDataInner addDayPartUuidsItem(UUID dayPartUuidsItem) {
    if (this.dayPartUuids == null) {
      this.dayPartUuids = new ArrayList<>();
    }
    this.dayPartUuids.add(dayPartUuidsItem);
    return this;
  }

   /**
   * Day parts associated with this tip pool
   * @return dayPartUuids
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Day parts associated with this tip pool")

  public List<UUID> getDayPartUuids() {
    return dayPartUuids;
  }


  public void setDayPartUuids(List<UUID> dayPartUuids) {
    
    
    
    this.dayPartUuids = dayPartUuids;
  }


  public TipPoolGetSettingsResponseDataInner contributionType(ContributionTypeEnum contributionType) {
    
    
    
    
    this.contributionType = contributionType;
    return this;
  }

   /**
   * Tip pool contribution type
   * @return contributionType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "POS_PERCENT_TIPS_AND_SALES", required = true, value = "Tip pool contribution type")

  public ContributionTypeEnum getContributionType() {
    return contributionType;
  }


  public void setContributionType(ContributionTypeEnum contributionType) {
    
    
    
    this.contributionType = contributionType;
  }


  public TipPoolGetSettingsResponseDataInner distributionType(DistributionTypeEnum distributionType) {
    
    
    
    
    this.distributionType = distributionType;
    return this;
  }

   /**
   * Tip pool distribution type
   * @return distributionType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "HOURS_WORKED", required = true, value = "Tip pool distribution type")

  public DistributionTypeEnum getDistributionType() {
    return distributionType;
  }


  public void setDistributionType(DistributionTypeEnum distributionType) {
    
    
    
    this.distributionType = distributionType;
  }


  public TipPoolGetSettingsResponseDataInner salesTipPercentage(Float salesTipPercentage) {
    
    
    
    
    this.salesTipPercentage = salesTipPercentage;
    return this;
  }

   /**
   * The proportion of sales tips or tips for unassigned roles (in percentage) you wish to contribute to the tip pool
   * @return salesTipPercentage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "75.5", required = true, value = "The proportion of sales tips or tips for unassigned roles (in percentage) you wish to contribute to the tip pool")

  public Float getSalesTipPercentage() {
    return salesTipPercentage;
  }


  public void setSalesTipPercentage(Float salesTipPercentage) {
    
    
    
    this.salesTipPercentage = salesTipPercentage;
  }


  public TipPoolGetSettingsResponseDataInner unmappedContributionMethod(String unmappedContributionMethod) {
    
    
    
    
    this.unmappedContributionMethod = unmappedContributionMethod;
    return this;
  }

   /**
   * A field representing whether we source our unmapped contribution amounts from tips, sales receipts or remaining tips
   * @return unmappedContributionMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A field representing whether we source our unmapped contribution amounts from tips, sales receipts or remaining tips")

  public String getUnmappedContributionMethod() {
    return unmappedContributionMethod;
  }


  public void setUnmappedContributionMethod(String unmappedContributionMethod) {
    
    
    
    this.unmappedContributionMethod = unmappedContributionMethod;
  }


  public TipPoolGetSettingsResponseDataInner unmappedContributionFilters(List<TipPoolGetSettingsResponseDataInnerUnmappedContributionFiltersInner> unmappedContributionFilters) {
    
    
    
    
    this.unmappedContributionFilters = unmappedContributionFilters;
    return this;
  }

  public TipPoolGetSettingsResponseDataInner addUnmappedContributionFiltersItem(TipPoolGetSettingsResponseDataInnerUnmappedContributionFiltersInner unmappedContributionFiltersItem) {
    if (this.unmappedContributionFilters == null) {
      this.unmappedContributionFilters = new ArrayList<>();
    }
    this.unmappedContributionFilters.add(unmappedContributionFiltersItem);
    return this;
  }

   /**
   * Get unmappedContributionFilters
   * @return unmappedContributionFilters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TipPoolGetSettingsResponseDataInnerUnmappedContributionFiltersInner> getUnmappedContributionFilters() {
    return unmappedContributionFilters;
  }


  public void setUnmappedContributionFilters(List<TipPoolGetSettingsResponseDataInnerUnmappedContributionFiltersInner> unmappedContributionFilters) {
    
    
    
    this.unmappedContributionFilters = unmappedContributionFilters;
  }


  public TipPoolGetSettingsResponseDataInner name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Tip pool name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "My tip pool", required = true, value = "Tip pool name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public TipPoolGetSettingsResponseDataInner enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Whether the tip pool is enabled
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "Whether the tip pool is enabled")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public TipPoolGetSettingsResponseDataInner tipPoolStakeholders(List<TipPoolGetSettingsResponseDataInnerTipPoolStakeholdersInner> tipPoolStakeholders) {
    
    
    
    
    this.tipPoolStakeholders = tipPoolStakeholders;
    return this;
  }

  public TipPoolGetSettingsResponseDataInner addTipPoolStakeholdersItem(TipPoolGetSettingsResponseDataInnerTipPoolStakeholdersInner tipPoolStakeholdersItem) {
    this.tipPoolStakeholders.add(tipPoolStakeholdersItem);
    return this;
  }

   /**
   * Get tipPoolStakeholders
   * @return tipPoolStakeholders
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<TipPoolGetSettingsResponseDataInnerTipPoolStakeholdersInner> getTipPoolStakeholders() {
    return tipPoolStakeholders;
  }


  public void setTipPoolStakeholders(List<TipPoolGetSettingsResponseDataInnerTipPoolStakeholdersInner> tipPoolStakeholders) {
    
    
    
    this.tipPoolStakeholders = tipPoolStakeholders;
  }


  public TipPoolGetSettingsResponseDataInner tipPoolContributions(List<TipPoolGetSettingsResponseDataInnerTipPoolContributionsInner> tipPoolContributions) {
    
    
    
    
    this.tipPoolContributions = tipPoolContributions;
    return this;
  }

  public TipPoolGetSettingsResponseDataInner addTipPoolContributionsItem(TipPoolGetSettingsResponseDataInnerTipPoolContributionsInner tipPoolContributionsItem) {
    this.tipPoolContributions.add(tipPoolContributionsItem);
    return this;
  }

   /**
   * Get tipPoolContributions
   * @return tipPoolContributions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<TipPoolGetSettingsResponseDataInnerTipPoolContributionsInner> getTipPoolContributions() {
    return tipPoolContributions;
  }


  public void setTipPoolContributions(List<TipPoolGetSettingsResponseDataInnerTipPoolContributionsInner> tipPoolContributions) {
    
    
    
    this.tipPoolContributions = tipPoolContributions;
  }


  public TipPoolGetSettingsResponseDataInner tipPoolCadenceSettings(TipPoolGetSettingsResponseDataInnerTipPoolCadenceSettings tipPoolCadenceSettings) {
    
    
    
    
    this.tipPoolCadenceSettings = tipPoolCadenceSettings;
    return this;
  }

   /**
   * Get tipPoolCadenceSettings
   * @return tipPoolCadenceSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TipPoolGetSettingsResponseDataInnerTipPoolCadenceSettings getTipPoolCadenceSettings() {
    return tipPoolCadenceSettings;
  }


  public void setTipPoolCadenceSettings(TipPoolGetSettingsResponseDataInnerTipPoolCadenceSettings tipPoolCadenceSettings) {
    
    
    
    this.tipPoolCadenceSettings = tipPoolCadenceSettings;
  }


  public TipPoolGetSettingsResponseDataInner created(OffsetDateTime created) {
    
    
    
    
    this.created = created;
    return this;
  }

   /**
   * When this tip pool was created in UTC timezone and Zulu format
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-02-12T12:00Z", value = "When this tip pool was created in UTC timezone and Zulu format")

  public OffsetDateTime getCreated() {
    return created;
  }


  public void setCreated(OffsetDateTime created) {
    
    
    
    this.created = created;
  }


  public TipPoolGetSettingsResponseDataInner modified(OffsetDateTime modified) {
    
    
    
    
    this.modified = modified;
    return this;
  }

   /**
   * When this tip pool was last modified in UTC timezone and Zulu format
   * @return modified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-02-12T13:00Z", value = "When this tip pool was last modified in UTC timezone and Zulu format")

  public OffsetDateTime getModified() {
    return modified;
  }


  public void setModified(OffsetDateTime modified) {
    
    
    
    this.modified = modified;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the TipPoolGetSettingsResponseDataInner instance itself
   */
  public TipPoolGetSettingsResponseDataInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TipPoolGetSettingsResponseDataInner tipPoolGetSettingsResponseDataInner = (TipPoolGetSettingsResponseDataInner) o;
    return Objects.equals(this.uuid, tipPoolGetSettingsResponseDataInner.uuid) &&
        Objects.equals(this.companyId, tipPoolGetSettingsResponseDataInner.companyId) &&
        Objects.equals(this.locationId, tipPoolGetSettingsResponseDataInner.locationId) &&
        Objects.equals(this.dayPartUuids, tipPoolGetSettingsResponseDataInner.dayPartUuids) &&
        Objects.equals(this.contributionType, tipPoolGetSettingsResponseDataInner.contributionType) &&
        Objects.equals(this.distributionType, tipPoolGetSettingsResponseDataInner.distributionType) &&
        Objects.equals(this.salesTipPercentage, tipPoolGetSettingsResponseDataInner.salesTipPercentage) &&
        Objects.equals(this.unmappedContributionMethod, tipPoolGetSettingsResponseDataInner.unmappedContributionMethod) &&
        Objects.equals(this.unmappedContributionFilters, tipPoolGetSettingsResponseDataInner.unmappedContributionFilters) &&
        Objects.equals(this.name, tipPoolGetSettingsResponseDataInner.name) &&
        Objects.equals(this.enabled, tipPoolGetSettingsResponseDataInner.enabled) &&
        Objects.equals(this.tipPoolStakeholders, tipPoolGetSettingsResponseDataInner.tipPoolStakeholders) &&
        Objects.equals(this.tipPoolContributions, tipPoolGetSettingsResponseDataInner.tipPoolContributions) &&
        Objects.equals(this.tipPoolCadenceSettings, tipPoolGetSettingsResponseDataInner.tipPoolCadenceSettings) &&
        Objects.equals(this.created, tipPoolGetSettingsResponseDataInner.created) &&
        Objects.equals(this.modified, tipPoolGetSettingsResponseDataInner.modified)&&
        Objects.equals(this.additionalProperties, tipPoolGetSettingsResponseDataInner.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, companyId, locationId, dayPartUuids, contributionType, distributionType, salesTipPercentage, unmappedContributionMethod, unmappedContributionFilters, name, enabled, tipPoolStakeholders, tipPoolContributions, tipPoolCadenceSettings, created, modified, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TipPoolGetSettingsResponseDataInner {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    dayPartUuids: ").append(toIndentedString(dayPartUuids)).append("\n");
    sb.append("    contributionType: ").append(toIndentedString(contributionType)).append("\n");
    sb.append("    distributionType: ").append(toIndentedString(distributionType)).append("\n");
    sb.append("    salesTipPercentage: ").append(toIndentedString(salesTipPercentage)).append("\n");
    sb.append("    unmappedContributionMethod: ").append(toIndentedString(unmappedContributionMethod)).append("\n");
    sb.append("    unmappedContributionFilters: ").append(toIndentedString(unmappedContributionFilters)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    tipPoolStakeholders: ").append(toIndentedString(tipPoolStakeholders)).append("\n");
    sb.append("    tipPoolContributions: ").append(toIndentedString(tipPoolContributions)).append("\n");
    sb.append("    tipPoolCadenceSettings: ").append(toIndentedString(tipPoolCadenceSettings)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("uuid");
    openapiFields.add("company_id");
    openapiFields.add("location_id");
    openapiFields.add("day_part_uuids");
    openapiFields.add("contribution_type");
    openapiFields.add("distribution_type");
    openapiFields.add("sales_tip_percentage");
    openapiFields.add("unmapped_contribution_method");
    openapiFields.add("unmapped_contribution_filters");
    openapiFields.add("name");
    openapiFields.add("enabled");
    openapiFields.add("tip_pool_stakeholders");
    openapiFields.add("tip_pool_contributions");
    openapiFields.add("tip_pool_cadence_settings");
    openapiFields.add("created");
    openapiFields.add("modified");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("company_id");
    openapiRequiredFields.add("location_id");
    openapiRequiredFields.add("contribution_type");
    openapiRequiredFields.add("distribution_type");
    openapiRequiredFields.add("sales_tip_percentage");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("enabled");
    openapiRequiredFields.add("tip_pool_stakeholders");
    openapiRequiredFields.add("tip_pool_contributions");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TipPoolGetSettingsResponseDataInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TipPoolGetSettingsResponseDataInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TipPoolGetSettingsResponseDataInner is not found in the empty JSON string", TipPoolGetSettingsResponseDataInner.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TipPoolGetSettingsResponseDataInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("uuid").isJsonNull() && (jsonObj.get("uuid") != null && !jsonObj.get("uuid").isJsonNull()) && !jsonObj.get("uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uuid").toString()));
      }
      // ensure the optional json data is an array if present (nullable)
      if (jsonObj.get("day_part_uuids") != null && !jsonObj.get("day_part_uuids").isJsonNull() && !jsonObj.get("day_part_uuids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `day_part_uuids` to be an array in the JSON string or null but got `%s`", jsonObj.get("day_part_uuids").toString()));
      }
      if (!jsonObj.get("contribution_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contribution_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contribution_type").toString()));
      }
      if (!jsonObj.get("distribution_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `distribution_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("distribution_type").toString()));
      }
      if (!jsonObj.get("unmapped_contribution_method").isJsonNull() && (jsonObj.get("unmapped_contribution_method") != null && !jsonObj.get("unmapped_contribution_method").isJsonNull()) && !jsonObj.get("unmapped_contribution_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unmapped_contribution_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unmapped_contribution_method").toString()));
      }
      if (jsonObj.get("unmapped_contribution_filters") != null && !jsonObj.get("unmapped_contribution_filters").isJsonNull()) {
        JsonArray jsonArrayunmappedContributionFilters = jsonObj.getAsJsonArray("unmapped_contribution_filters");
        if (jsonArrayunmappedContributionFilters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("unmapped_contribution_filters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `unmapped_contribution_filters` to be an array in the JSON string but got `%s`", jsonObj.get("unmapped_contribution_filters").toString()));
          }

          // validate the optional field `unmapped_contribution_filters` (array)
          for (int i = 0; i < jsonArrayunmappedContributionFilters.size(); i++) {
            TipPoolGetSettingsResponseDataInnerUnmappedContributionFiltersInner.validateJsonObject(jsonArrayunmappedContributionFilters.get(i).getAsJsonObject());
          };
        }
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("tip_pool_stakeholders").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tip_pool_stakeholders` to be an array in the JSON string but got `%s`", jsonObj.get("tip_pool_stakeholders").toString()));
      }

      JsonArray jsonArraytipPoolStakeholders = jsonObj.getAsJsonArray("tip_pool_stakeholders");
      // validate the required field `tip_pool_stakeholders` (array)
      for (int i = 0; i < jsonArraytipPoolStakeholders.size(); i++) {
        TipPoolGetSettingsResponseDataInnerTipPoolStakeholdersInner.validateJsonObject(jsonArraytipPoolStakeholders.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("tip_pool_contributions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tip_pool_contributions` to be an array in the JSON string but got `%s`", jsonObj.get("tip_pool_contributions").toString()));
      }

      JsonArray jsonArraytipPoolContributions = jsonObj.getAsJsonArray("tip_pool_contributions");
      // validate the required field `tip_pool_contributions` (array)
      for (int i = 0; i < jsonArraytipPoolContributions.size(); i++) {
        TipPoolGetSettingsResponseDataInnerTipPoolContributionsInner.validateJsonObject(jsonArraytipPoolContributions.get(i).getAsJsonObject());
      };
      // validate the optional field `tip_pool_cadence_settings`
      if (jsonObj.get("tip_pool_cadence_settings") != null && !jsonObj.get("tip_pool_cadence_settings").isJsonNull()) {
        TipPoolGetSettingsResponseDataInnerTipPoolCadenceSettings.validateJsonObject(jsonObj.getAsJsonObject("tip_pool_cadence_settings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TipPoolGetSettingsResponseDataInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TipPoolGetSettingsResponseDataInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TipPoolGetSettingsResponseDataInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TipPoolGetSettingsResponseDataInner.class));

       return (TypeAdapter<T>) new TypeAdapter<TipPoolGetSettingsResponseDataInner>() {
           @Override
           public void write(JsonWriter out, TipPoolGetSettingsResponseDataInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public TipPoolGetSettingsResponseDataInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             TipPoolGetSettingsResponseDataInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TipPoolGetSettingsResponseDataInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TipPoolGetSettingsResponseDataInner
  * @throws IOException if the JSON string is invalid with respect to TipPoolGetSettingsResponseDataInner
  */
  public static TipPoolGetSettingsResponseDataInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TipPoolGetSettingsResponseDataInner.class);
  }

 /**
  * Convert an instance of TipPoolGetSettingsResponseDataInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

