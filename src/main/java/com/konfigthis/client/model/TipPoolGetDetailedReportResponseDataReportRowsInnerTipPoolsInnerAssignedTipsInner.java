/*
 * 7shifts API
 * 7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.
 *
 * The version of the OpenAPI document: 2023-05-01
 * Contact: api-support@7shifts.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Tips assigned to employees
 */
@ApiModel(description = "Tips assigned to employees")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner {
  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employee_id";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_ROLE_NAME = "role_name";
  @SerializedName(SERIALIZED_NAME_ROLE_NAME)
  private String roleName;

  public static final String SERIALIZED_NAME_DEPARTMENT_NAME = "department_name";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_NAME)
  private String departmentName;

  public static final String SERIALIZED_NAME_TIME_PUNCH_ID = "time_punch_id";
  @SerializedName(SERIALIZED_NAME_TIME_PUNCH_ID)
  private Integer timePunchId;

  public static final String SERIALIZED_NAME_CLOCKED_IN = "clocked_in";
  @SerializedName(SERIALIZED_NAME_CLOCKED_IN)
  private OffsetDateTime clockedIn;

  public static final String SERIALIZED_NAME_CLOCKED_OUT = "clocked_out";
  @SerializedName(SERIALIZED_NAME_CLOCKED_OUT)
  private OffsetDateTime clockedOut;

  public static final String SERIALIZED_NAME_APPROVED = "approved";
  @SerializedName(SERIALIZED_NAME_APPROVED)
  private Boolean approved;

  public static final String SERIALIZED_NAME_NET_SALES = "net_sales";
  @SerializedName(SERIALIZED_NAME_NET_SALES)
  private Integer netSales;

  public static final String SERIALIZED_NAME_CC_TIPS = "cc_tips";
  @SerializedName(SERIALIZED_NAME_CC_TIPS)
  private Integer ccTips;

  public static final String SERIALIZED_NAME_CC_TIPS_WITHHELD = "cc_tips_withheld";
  @SerializedName(SERIALIZED_NAME_CC_TIPS_WITHHELD)
  private Integer ccTipsWithheld;

  public static final String SERIALIZED_NAME_AUTO_GRAT_TIPS = "auto_grat_tips";
  @SerializedName(SERIALIZED_NAME_AUTO_GRAT_TIPS)
  private Integer autoGratTips;

  public static final String SERIALIZED_NAME_CASH_TIPS = "cash_tips";
  @SerializedName(SERIALIZED_NAME_CASH_TIPS)
  private Integer cashTips;

  public static final String SERIALIZED_NAME_DECLARED_TIPS = "declared_tips";
  @SerializedName(SERIALIZED_NAME_DECLARED_TIPS)
  private Integer declaredTips;

  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner() {
  }

  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Employee ID
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "220974", required = true, value = "Employee ID")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * User ID
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "User ID")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Employee first name
   * @return firstName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Employee first name")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Employee last name
   * @return lastName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Employee last name")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner roleName(String roleName) {
    
    
    
    
    this.roleName = roleName;
    return this;
  }

   /**
   * Role name
   * @return roleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Role name")

  public String getRoleName() {
    return roleName;
  }


  public void setRoleName(String roleName) {
    
    
    
    this.roleName = roleName;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner departmentName(String departmentName) {
    
    
    
    
    this.departmentName = departmentName;
    return this;
  }

   /**
   * Department name
   * @return departmentName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Department name")

  public String getDepartmentName() {
    return departmentName;
  }


  public void setDepartmentName(String departmentName) {
    
    
    
    this.departmentName = departmentName;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner timePunchId(Integer timePunchId) {
    
    
    
    
    this.timePunchId = timePunchId;
    return this;
  }

   /**
   * Time punch ID
   * @return timePunchId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Time punch ID")

  public Integer getTimePunchId() {
    return timePunchId;
  }


  public void setTimePunchId(Integer timePunchId) {
    
    
    
    this.timePunchId = timePunchId;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner clockedIn(OffsetDateTime clockedIn) {
    
    
    
    
    this.clockedIn = clockedIn;
    return this;
  }

   /**
   * Start date and time when the user clocked in. Formatted as ISO8601 datetime in UTC timezone.
   * @return clockedIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-01-01T00:00Z", value = "Start date and time when the user clocked in. Formatted as ISO8601 datetime in UTC timezone.")

  public OffsetDateTime getClockedIn() {
    return clockedIn;
  }


  public void setClockedIn(OffsetDateTime clockedIn) {
    
    
    
    this.clockedIn = clockedIn;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner clockedOut(OffsetDateTime clockedOut) {
    
    
    
    
    this.clockedOut = clockedOut;
    return this;
  }

   /**
   * End date and time when the user clocked out. Formatted as ISO8601 datetime in UTC timezone.
   * @return clockedOut
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-01-01T08:00Z", value = "End date and time when the user clocked out. Formatted as ISO8601 datetime in UTC timezone.")

  public OffsetDateTime getClockedOut() {
    return clockedOut;
  }


  public void setClockedOut(OffsetDateTime clockedOut) {
    
    
    
    this.clockedOut = clockedOut;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner approved(Boolean approved) {
    
    
    
    
    this.approved = approved;
    return this;
  }

   /**
   * If true the time punch is approved
   * @return approved
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true the time punch is approved")

  public Boolean getApproved() {
    return approved;
  }


  public void setApproved(Boolean approved) {
    
    
    
    this.approved = approved;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner netSales(Integer netSales) {
    
    
    
    
    this.netSales = netSales;
    return this;
  }

   /**
   * The net sales (in cents)
   * @return netSales
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The net sales (in cents)")

  public Integer getNetSales() {
    return netSales;
  }


  public void setNetSales(Integer netSales) {
    
    
    
    this.netSales = netSales;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner ccTips(Integer ccTips) {
    
    
    
    
    this.ccTips = ccTips;
    return this;
  }

   /**
   * Tips from credit card (in cents)
   * @return ccTips
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tips from credit card (in cents)")

  public Integer getCcTips() {
    return ccTips;
  }


  public void setCcTips(Integer ccTips) {
    
    
    
    this.ccTips = ccTips;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner ccTipsWithheld(Integer ccTipsWithheld) {
    
    
    
    
    this.ccTipsWithheld = ccTipsWithheld;
    return this;
  }

   /**
   * Tips from credit card withheld (in cents)
   * @return ccTipsWithheld
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tips from credit card withheld (in cents)")

  public Integer getCcTipsWithheld() {
    return ccTipsWithheld;
  }


  public void setCcTipsWithheld(Integer ccTipsWithheld) {
    
    
    
    this.ccTipsWithheld = ccTipsWithheld;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner autoGratTips(Integer autoGratTips) {
    
    
    
    
    this.autoGratTips = autoGratTips;
    return this;
  }

   /**
   * Auto gratuity tips (in cents)
   * @return autoGratTips
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Auto gratuity tips (in cents)")

  public Integer getAutoGratTips() {
    return autoGratTips;
  }


  public void setAutoGratTips(Integer autoGratTips) {
    
    
    
    this.autoGratTips = autoGratTips;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner cashTips(Integer cashTips) {
    
    
    
    
    this.cashTips = cashTips;
    return this;
  }

   /**
   * Tips in cash (in cents)
   * @return cashTips
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tips in cash (in cents)")

  public Integer getCashTips() {
    return cashTips;
  }


  public void setCashTips(Integer cashTips) {
    
    
    
    this.cashTips = cashTips;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner declaredTips(Integer declaredTips) {
    
    
    
    
    this.declaredTips = declaredTips;
    return this;
  }

   /**
   * Declared tips (in cents)
   * @return declaredTips
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Declared tips (in cents)")

  public Integer getDeclaredTips() {
    return declaredTips;
  }


  public void setDeclaredTips(Integer declaredTips) {
    
    
    
    this.declaredTips = declaredTips;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner instance itself
   */
  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner = (TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner) o;
    return Objects.equals(this.employeeId, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.employeeId) &&
        Objects.equals(this.userId, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.userId) &&
        Objects.equals(this.firstName, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.firstName) &&
        Objects.equals(this.lastName, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.lastName) &&
        Objects.equals(this.roleName, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.roleName) &&
        Objects.equals(this.departmentName, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.departmentName) &&
        Objects.equals(this.timePunchId, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.timePunchId) &&
        Objects.equals(this.clockedIn, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.clockedIn) &&
        Objects.equals(this.clockedOut, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.clockedOut) &&
        Objects.equals(this.approved, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.approved) &&
        Objects.equals(this.netSales, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.netSales) &&
        Objects.equals(this.ccTips, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.ccTips) &&
        Objects.equals(this.ccTipsWithheld, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.ccTipsWithheld) &&
        Objects.equals(this.autoGratTips, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.autoGratTips) &&
        Objects.equals(this.cashTips, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.cashTips) &&
        Objects.equals(this.declaredTips, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.declaredTips)&&
        Objects.equals(this.additionalProperties, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(employeeId, userId, firstName, lastName, roleName, departmentName, timePunchId, clockedIn, clockedOut, approved, netSales, ccTips, ccTipsWithheld, autoGratTips, cashTips, declaredTips, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner {\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    roleName: ").append(toIndentedString(roleName)).append("\n");
    sb.append("    departmentName: ").append(toIndentedString(departmentName)).append("\n");
    sb.append("    timePunchId: ").append(toIndentedString(timePunchId)).append("\n");
    sb.append("    clockedIn: ").append(toIndentedString(clockedIn)).append("\n");
    sb.append("    clockedOut: ").append(toIndentedString(clockedOut)).append("\n");
    sb.append("    approved: ").append(toIndentedString(approved)).append("\n");
    sb.append("    netSales: ").append(toIndentedString(netSales)).append("\n");
    sb.append("    ccTips: ").append(toIndentedString(ccTips)).append("\n");
    sb.append("    ccTipsWithheld: ").append(toIndentedString(ccTipsWithheld)).append("\n");
    sb.append("    autoGratTips: ").append(toIndentedString(autoGratTips)).append("\n");
    sb.append("    cashTips: ").append(toIndentedString(cashTips)).append("\n");
    sb.append("    declaredTips: ").append(toIndentedString(declaredTips)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("net_sales");
    openapiFields.add("cc_tips");
    openapiFields.add("cc_tips_withheld");
    openapiFields.add("auto_grat_tips");
    openapiFields.add("cash_tips");
    openapiFields.add("declared_tips");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("employee_id");
    openapiRequiredFields.add("user_id");
    openapiRequiredFields.add("first_name");
    openapiRequiredFields.add("last_name");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner is not found in the empty JSON string", TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("employee_id").isJsonNull() && !jsonObj.get("employee_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employee_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employee_id").toString()));
      }
      if (!jsonObj.get("first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
      }
      if (!jsonObj.get("last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_name").toString()));
      }
      if ((jsonObj.get("role_name") != null && !jsonObj.get("role_name").isJsonNull()) && !jsonObj.get("role_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role_name").toString()));
      }
      if ((jsonObj.get("department_name") != null && !jsonObj.get("department_name").isJsonNull()) && !jsonObj.get("department_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `department_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("department_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner>() {
           @Override
           public void write(JsonWriter out, TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner
  * @throws IOException if the JSON string is invalid with respect to TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner
  */
  public static TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner.class);
  }

 /**
  * Convert an instance of TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerAssignedTipsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

