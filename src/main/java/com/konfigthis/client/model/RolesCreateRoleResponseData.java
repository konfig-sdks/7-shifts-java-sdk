/*
 * 7shifts API
 * 7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.
 *
 * The version of the OpenAPI document: 2023-05-01
 * Contact: api-support@7shifts.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.RolesListResponseDataInnerStationsInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * RolesCreateRoleResponseData
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class RolesCreateRoleResponseData {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_COMPANY_ID = "company_id";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private Integer companyId;

  public static final String SERIALIZED_NAME_LOCATION_ID = "location_id";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private Integer locationId;

  public static final String SERIALIZED_NAME_DEPARTMENT_ID = "department_id";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_ID)
  private Integer departmentId;

  public static final String SERIALIZED_NAME_COLOR = "color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private String color;

  public static final String SERIALIZED_NAME_NUM_STATIONS = "num_stations";
  @SerializedName(SERIALIZED_NAME_NUM_STATIONS)
  private Integer numStations;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_JOB_CODE = "job_code";
  @SerializedName(SERIALIZED_NAME_JOB_CODE)
  private String jobCode;

  public static final String SERIALIZED_NAME_SORT = "sort";
  @SerializedName(SERIALIZED_NAME_SORT)
  private Integer sort;

  public static final String SERIALIZED_NAME_STATIONS = "stations";
  @SerializedName(SERIALIZED_NAME_STATIONS)
  private List<RolesListResponseDataInnerStationsInner> stations = null;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_MODIFIED = "modified";
  @SerializedName(SERIALIZED_NAME_MODIFIED)
  private OffsetDateTime modified;

  public RolesCreateRoleResponseData() {
  }

  public RolesCreateRoleResponseData id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Role ID
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Role ID")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }


  public RolesCreateRoleResponseData companyId(Integer companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Company ID
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Company ID")

  public Integer getCompanyId() {
    return companyId;
  }


  public void setCompanyId(Integer companyId) {
    
    
    
    this.companyId = companyId;
  }


  public RolesCreateRoleResponseData locationId(Integer locationId) {
    
    
    
    
    this.locationId = locationId;
    return this;
  }

   /**
   * Location ID
   * @return locationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Location ID")

  public Integer getLocationId() {
    return locationId;
  }


  public void setLocationId(Integer locationId) {
    
    
    
    this.locationId = locationId;
  }


  public RolesCreateRoleResponseData departmentId(Integer departmentId) {
    
    
    
    
    this.departmentId = departmentId;
    return this;
  }

   /**
   * Department ID
   * @return departmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Department ID")

  public Integer getDepartmentId() {
    return departmentId;
  }


  public void setDepartmentId(Integer departmentId) {
    
    
    
    this.departmentId = departmentId;
  }


  public RolesCreateRoleResponseData color(String color) {
    
    
    
    
    this.color = color;
    return this;
  }

   /**
   * A hex number representing the color
   * @return color
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A hex number representing the color")

  public String getColor() {
    return color;
  }


  public void setColor(String color) {
    
    
    
    this.color = color;
  }


  public RolesCreateRoleResponseData numStations(Integer numStations) {
    
    
    
    
    this.numStations = numStations;
    return this;
  }

   /**
   * The number of stations this role contains
   * @return numStations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of stations this role contains")

  public Integer getNumStations() {
    return numStations;
  }


  public void setNumStations(Integer numStations) {
    
    
    
    this.numStations = numStations;
  }


  public RolesCreateRoleResponseData name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Role name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Role name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public RolesCreateRoleResponseData jobCode(String jobCode) {
    
    
    
    
    this.jobCode = jobCode;
    return this;
  }

   /**
   * Job code
   * @return jobCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Job code")

  public String getJobCode() {
    return jobCode;
  }


  public void setJobCode(String jobCode) {
    
    
    
    this.jobCode = jobCode;
  }


  public RolesCreateRoleResponseData sort(Integer sort) {
    
    
    
    
    this.sort = sort;
    return this;
  }

   /**
   * The order in which the roles will be listed in the web app
   * @return sort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order in which the roles will be listed in the web app")

  public Integer getSort() {
    return sort;
  }


  public void setSort(Integer sort) {
    
    
    
    this.sort = sort;
  }


  public RolesCreateRoleResponseData stations(List<RolesListResponseDataInnerStationsInner> stations) {
    
    
    
    
    this.stations = stations;
    return this;
  }

  public RolesCreateRoleResponseData addStationsItem(RolesListResponseDataInnerStationsInner stationsItem) {
    if (this.stations == null) {
      this.stations = new ArrayList<>();
    }
    this.stations.add(stationsItem);
    return this;
  }

   /**
   * Get stations
   * @return stations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RolesListResponseDataInnerStationsInner> getStations() {
    return stations;
  }


  public void setStations(List<RolesListResponseDataInnerStationsInner> stations) {
    
    
    
    this.stations = stations;
  }


  public RolesCreateRoleResponseData created(OffsetDateTime created) {
    
    
    
    
    this.created = created;
    return this;
  }

   /**
   * The ISO8601 date and time in UTC when the role was created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-01-01T00:00Z", value = "The ISO8601 date and time in UTC when the role was created")

  public OffsetDateTime getCreated() {
    return created;
  }


  public void setCreated(OffsetDateTime created) {
    
    
    
    this.created = created;
  }


  public RolesCreateRoleResponseData modified(OffsetDateTime modified) {
    
    
    
    
    this.modified = modified;
    return this;
  }

   /**
   * The ISO8601 date and time in UTC when the role was modified
   * @return modified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-01-01T00:00Z", value = "The ISO8601 date and time in UTC when the role was modified")

  public OffsetDateTime getModified() {
    return modified;
  }


  public void setModified(OffsetDateTime modified) {
    
    
    
    this.modified = modified;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the RolesCreateRoleResponseData instance itself
   */
  public RolesCreateRoleResponseData putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RolesCreateRoleResponseData rolesCreateRoleResponseData = (RolesCreateRoleResponseData) o;
    return Objects.equals(this.id, rolesCreateRoleResponseData.id) &&
        Objects.equals(this.companyId, rolesCreateRoleResponseData.companyId) &&
        Objects.equals(this.locationId, rolesCreateRoleResponseData.locationId) &&
        Objects.equals(this.departmentId, rolesCreateRoleResponseData.departmentId) &&
        Objects.equals(this.color, rolesCreateRoleResponseData.color) &&
        Objects.equals(this.numStations, rolesCreateRoleResponseData.numStations) &&
        Objects.equals(this.name, rolesCreateRoleResponseData.name) &&
        Objects.equals(this.jobCode, rolesCreateRoleResponseData.jobCode) &&
        Objects.equals(this.sort, rolesCreateRoleResponseData.sort) &&
        Objects.equals(this.stations, rolesCreateRoleResponseData.stations) &&
        Objects.equals(this.created, rolesCreateRoleResponseData.created) &&
        Objects.equals(this.modified, rolesCreateRoleResponseData.modified)&&
        Objects.equals(this.additionalProperties, rolesCreateRoleResponseData.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, companyId, locationId, departmentId, color, numStations, name, jobCode, sort, stations, created, modified, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RolesCreateRoleResponseData {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    numStations: ").append(toIndentedString(numStations)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    jobCode: ").append(toIndentedString(jobCode)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    stations: ").append(toIndentedString(stations)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("company_id");
    openapiFields.add("location_id");
    openapiFields.add("department_id");
    openapiFields.add("color");
    openapiFields.add("num_stations");
    openapiFields.add("name");
    openapiFields.add("job_code");
    openapiFields.add("sort");
    openapiFields.add("stations");
    openapiFields.add("created");
    openapiFields.add("modified");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RolesCreateRoleResponseData
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!RolesCreateRoleResponseData.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RolesCreateRoleResponseData is not found in the empty JSON string", RolesCreateRoleResponseData.openapiRequiredFields.toString()));
        }
      }
      if (!jsonObj.get("color").isJsonNull() && (jsonObj.get("color") != null && !jsonObj.get("color").isJsonNull()) && !jsonObj.get("color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("color").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("job_code").isJsonNull() && (jsonObj.get("job_code") != null && !jsonObj.get("job_code").isJsonNull()) && !jsonObj.get("job_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `job_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("job_code").toString()));
      }
      if (jsonObj.get("stations") != null && !jsonObj.get("stations").isJsonNull()) {
        JsonArray jsonArraystations = jsonObj.getAsJsonArray("stations");
        if (jsonArraystations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("stations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `stations` to be an array in the JSON string but got `%s`", jsonObj.get("stations").toString()));
          }

          // validate the optional field `stations` (array)
          for (int i = 0; i < jsonArraystations.size(); i++) {
            RolesListResponseDataInnerStationsInner.validateJsonObject(jsonArraystations.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RolesCreateRoleResponseData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RolesCreateRoleResponseData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RolesCreateRoleResponseData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RolesCreateRoleResponseData.class));

       return (TypeAdapter<T>) new TypeAdapter<RolesCreateRoleResponseData>() {
           @Override
           public void write(JsonWriter out, RolesCreateRoleResponseData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public RolesCreateRoleResponseData read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             RolesCreateRoleResponseData instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RolesCreateRoleResponseData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RolesCreateRoleResponseData
  * @throws IOException if the JSON string is invalid with respect to RolesCreateRoleResponseData
  */
  public static RolesCreateRoleResponseData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RolesCreateRoleResponseData.class);
  }

 /**
  * Convert an instance of RolesCreateRoleResponseData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

