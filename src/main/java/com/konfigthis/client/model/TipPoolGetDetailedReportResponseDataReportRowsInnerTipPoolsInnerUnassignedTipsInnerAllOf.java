/*
 * 7shifts API
 * 7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.
 *
 * The version of the OpenAPI document: 2023-05-01
 * Contact: api-support@7shifts.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf {
  public static final String SERIALIZED_NAME_SALES_FILTERS = "sales_filters";
  @SerializedName(SERIALIZED_NAME_SALES_FILTERS)
  private List<String> salesFilters = null;

  public static final String SERIALIZED_NAME_FILTERED_SALES = "filtered_sales";
  @SerializedName(SERIALIZED_NAME_FILTERED_SALES)
  private Integer filteredSales;

  public static final String SERIALIZED_NAME_SALES_CONTRIBUTION_PERCENT = "sales_contribution_percent";
  @SerializedName(SERIALIZED_NAME_SALES_CONTRIBUTION_PERCENT)
  private List<Double> salesContributionPercent = null;

  public static final String SERIALIZED_NAME_TIPS_FILTERS = "tips_filters";
  @SerializedName(SERIALIZED_NAME_TIPS_FILTERS)
  private List<String> tipsFilters = null;

  public static final String SERIALIZED_NAME_FILTERED_TIPS = "filtered_tips";
  @SerializedName(SERIALIZED_NAME_FILTERED_TIPS)
  private Integer filteredTips;

  public static final String SERIALIZED_NAME_TIPS_CONTRIBUTION_PERCENT = "tips_contribution_percent";
  @SerializedName(SERIALIZED_NAME_TIPS_CONTRIBUTION_PERCENT)
  private List<Double> tipsContributionPercent = null;

  public static final String SERIALIZED_NAME_HOURS_WORKED = "hours_worked";
  @SerializedName(SERIALIZED_NAME_HOURS_WORKED)
  private Double hoursWorked;

  public static final String SERIALIZED_NAME_TIP_IN = "tip_in";
  @SerializedName(SERIALIZED_NAME_TIP_IN)
  private Integer tipIn;

  public static final String SERIALIZED_NAME_TIP_OUT = "tip_out";
  @SerializedName(SERIALIZED_NAME_TIP_OUT)
  private Integer tipOut;

  public static final String SERIALIZED_NAME_NET_SALES = "net_sales";
  @SerializedName(SERIALIZED_NAME_NET_SALES)
  private Integer netSales;

  public static final String SERIALIZED_NAME_CC_TIPS = "cc_tips";
  @SerializedName(SERIALIZED_NAME_CC_TIPS)
  private Integer ccTips;

  public static final String SERIALIZED_NAME_CC_TIPS_WITHHELD = "cc_tips_withheld";
  @SerializedName(SERIALIZED_NAME_CC_TIPS_WITHHELD)
  private Integer ccTipsWithheld;

  public static final String SERIALIZED_NAME_AUTO_GRAT_TIPS = "auto_grat_tips";
  @SerializedName(SERIALIZED_NAME_AUTO_GRAT_TIPS)
  private Integer autoGratTips;

  public static final String SERIALIZED_NAME_CASH_TIPS = "cash_tips";
  @SerializedName(SERIALIZED_NAME_CASH_TIPS)
  private Integer cashTips;

  public static final String SERIALIZED_NAME_DECLARED_TIPS = "declared_tips";
  @SerializedName(SERIALIZED_NAME_DECLARED_TIPS)
  private Integer declaredTips;

  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf() {
  }

  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf salesFilters(List<String> salesFilters) {
    
    
    
    
    this.salesFilters = salesFilters;
    return this;
  }

  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf addSalesFiltersItem(String salesFiltersItem) {
    if (this.salesFilters == null) {
      this.salesFilters = new ArrayList<>();
    }
    this.salesFilters.add(salesFiltersItem);
    return this;
  }

   /**
   * Get salesFilters
   * @return salesFilters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getSalesFilters() {
    return salesFilters;
  }


  public void setSalesFilters(List<String> salesFilters) {
    
    
    
    this.salesFilters = salesFilters;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf filteredSales(Integer filteredSales) {
    
    
    
    
    this.filteredSales = filteredSales;
    return this;
  }

   /**
   * Filtered sales in cents
   * @return filteredSales
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filtered sales in cents")

  public Integer getFilteredSales() {
    return filteredSales;
  }


  public void setFilteredSales(Integer filteredSales) {
    
    
    
    this.filteredSales = filteredSales;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf salesContributionPercent(List<Double> salesContributionPercent) {
    
    
    
    
    this.salesContributionPercent = salesContributionPercent;
    return this;
  }

  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf addSalesContributionPercentItem(Double salesContributionPercentItem) {
    if (this.salesContributionPercent == null) {
      this.salesContributionPercent = new ArrayList<>();
    }
    this.salesContributionPercent.add(salesContributionPercentItem);
    return this;
  }

   /**
   * Sales contribution percertage
   * @return salesContributionPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sales contribution percertage")

  public List<Double> getSalesContributionPercent() {
    return salesContributionPercent;
  }


  public void setSalesContributionPercent(List<Double> salesContributionPercent) {
    
    
    
    this.salesContributionPercent = salesContributionPercent;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf tipsFilters(List<String> tipsFilters) {
    
    
    
    
    this.tipsFilters = tipsFilters;
    return this;
  }

  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf addTipsFiltersItem(String tipsFiltersItem) {
    if (this.tipsFilters == null) {
      this.tipsFilters = new ArrayList<>();
    }
    this.tipsFilters.add(tipsFiltersItem);
    return this;
  }

   /**
   * Get tipsFilters
   * @return tipsFilters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTipsFilters() {
    return tipsFilters;
  }


  public void setTipsFilters(List<String> tipsFilters) {
    
    
    
    this.tipsFilters = tipsFilters;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf filteredTips(Integer filteredTips) {
    
    
    
    
    this.filteredTips = filteredTips;
    return this;
  }

   /**
   * Filtered tips in cents
   * @return filteredTips
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filtered tips in cents")

  public Integer getFilteredTips() {
    return filteredTips;
  }


  public void setFilteredTips(Integer filteredTips) {
    
    
    
    this.filteredTips = filteredTips;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf tipsContributionPercent(List<Double> tipsContributionPercent) {
    
    
    
    
    this.tipsContributionPercent = tipsContributionPercent;
    return this;
  }

  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf addTipsContributionPercentItem(Double tipsContributionPercentItem) {
    if (this.tipsContributionPercent == null) {
      this.tipsContributionPercent = new ArrayList<>();
    }
    this.tipsContributionPercent.add(tipsContributionPercentItem);
    return this;
  }

   /**
   * Sales contribution percertage
   * @return tipsContributionPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sales contribution percertage")

  public List<Double> getTipsContributionPercent() {
    return tipsContributionPercent;
  }


  public void setTipsContributionPercent(List<Double> tipsContributionPercent) {
    
    
    
    this.tipsContributionPercent = tipsContributionPercent;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf hoursWorked(Double hoursWorked) {
    
    
    
    
    this.hoursWorked = hoursWorked;
    return this;
  }

  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf hoursWorked(Integer hoursWorked) {
    
    
    
    
    this.hoursWorked = hoursWorked.doubleValue();
    return this;
  }

   /**
   * The amount of hours worked
   * @return hoursWorked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The amount of hours worked")

  public Double getHoursWorked() {
    return hoursWorked;
  }


  public void setHoursWorked(Double hoursWorked) {
    
    
    
    this.hoursWorked = hoursWorked;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf tipIn(Integer tipIn) {
    
    
    
    
    this.tipIn = tipIn;
    return this;
  }

   /**
   * Tip in amount (in cents)
   * @return tipIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tip in amount (in cents)")

  public Integer getTipIn() {
    return tipIn;
  }


  public void setTipIn(Integer tipIn) {
    
    
    
    this.tipIn = tipIn;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf tipOut(Integer tipOut) {
    
    
    
    
    this.tipOut = tipOut;
    return this;
  }

   /**
   * Tip out amount (in cents)
   * @return tipOut
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1025", value = "Tip out amount (in cents)")

  public Integer getTipOut() {
    return tipOut;
  }


  public void setTipOut(Integer tipOut) {
    
    
    
    this.tipOut = tipOut;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf netSales(Integer netSales) {
    
    
    
    
    this.netSales = netSales;
    return this;
  }

   /**
   * The net sales (in cents)
   * @return netSales
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The net sales (in cents)")

  public Integer getNetSales() {
    return netSales;
  }


  public void setNetSales(Integer netSales) {
    
    
    
    this.netSales = netSales;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf ccTips(Integer ccTips) {
    
    
    
    
    this.ccTips = ccTips;
    return this;
  }

   /**
   * Tips from credit card (in cents)
   * @return ccTips
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tips from credit card (in cents)")

  public Integer getCcTips() {
    return ccTips;
  }


  public void setCcTips(Integer ccTips) {
    
    
    
    this.ccTips = ccTips;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf ccTipsWithheld(Integer ccTipsWithheld) {
    
    
    
    
    this.ccTipsWithheld = ccTipsWithheld;
    return this;
  }

   /**
   * Tips from credit card withheld (in cents)
   * @return ccTipsWithheld
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tips from credit card withheld (in cents)")

  public Integer getCcTipsWithheld() {
    return ccTipsWithheld;
  }


  public void setCcTipsWithheld(Integer ccTipsWithheld) {
    
    
    
    this.ccTipsWithheld = ccTipsWithheld;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf autoGratTips(Integer autoGratTips) {
    
    
    
    
    this.autoGratTips = autoGratTips;
    return this;
  }

   /**
   * Auto gratuity tips (in cents)
   * @return autoGratTips
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Auto gratuity tips (in cents)")

  public Integer getAutoGratTips() {
    return autoGratTips;
  }


  public void setAutoGratTips(Integer autoGratTips) {
    
    
    
    this.autoGratTips = autoGratTips;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf cashTips(Integer cashTips) {
    
    
    
    
    this.cashTips = cashTips;
    return this;
  }

   /**
   * Tips in cash (in cents)
   * @return cashTips
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tips in cash (in cents)")

  public Integer getCashTips() {
    return cashTips;
  }


  public void setCashTips(Integer cashTips) {
    
    
    
    this.cashTips = cashTips;
  }


  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf declaredTips(Integer declaredTips) {
    
    
    
    
    this.declaredTips = declaredTips;
    return this;
  }

   /**
   * Declared tips (in cents)
   * @return declaredTips
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Declared tips (in cents)")

  public Integer getDeclaredTips() {
    return declaredTips;
  }


  public void setDeclaredTips(Integer declaredTips) {
    
    
    
    this.declaredTips = declaredTips;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf instance itself
   */
  public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf = (TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf) o;
    return Objects.equals(this.salesFilters, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.salesFilters) &&
        Objects.equals(this.filteredSales, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.filteredSales) &&
        Objects.equals(this.salesContributionPercent, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.salesContributionPercent) &&
        Objects.equals(this.tipsFilters, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.tipsFilters) &&
        Objects.equals(this.filteredTips, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.filteredTips) &&
        Objects.equals(this.tipsContributionPercent, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.tipsContributionPercent) &&
        Objects.equals(this.hoursWorked, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.hoursWorked) &&
        Objects.equals(this.tipIn, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.tipIn) &&
        Objects.equals(this.tipOut, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.tipOut) &&
        Objects.equals(this.netSales, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.netSales) &&
        Objects.equals(this.ccTips, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.ccTips) &&
        Objects.equals(this.ccTipsWithheld, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.ccTipsWithheld) &&
        Objects.equals(this.autoGratTips, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.autoGratTips) &&
        Objects.equals(this.cashTips, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.cashTips) &&
        Objects.equals(this.declaredTips, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.declaredTips)&&
        Objects.equals(this.additionalProperties, tipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(salesFilters, filteredSales, salesContributionPercent, tipsFilters, filteredTips, tipsContributionPercent, hoursWorked, tipIn, tipOut, netSales, ccTips, ccTipsWithheld, autoGratTips, cashTips, declaredTips, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf {\n");
    sb.append("    salesFilters: ").append(toIndentedString(salesFilters)).append("\n");
    sb.append("    filteredSales: ").append(toIndentedString(filteredSales)).append("\n");
    sb.append("    salesContributionPercent: ").append(toIndentedString(salesContributionPercent)).append("\n");
    sb.append("    tipsFilters: ").append(toIndentedString(tipsFilters)).append("\n");
    sb.append("    filteredTips: ").append(toIndentedString(filteredTips)).append("\n");
    sb.append("    tipsContributionPercent: ").append(toIndentedString(tipsContributionPercent)).append("\n");
    sb.append("    hoursWorked: ").append(toIndentedString(hoursWorked)).append("\n");
    sb.append("    tipIn: ").append(toIndentedString(tipIn)).append("\n");
    sb.append("    tipOut: ").append(toIndentedString(tipOut)).append("\n");
    sb.append("    netSales: ").append(toIndentedString(netSales)).append("\n");
    sb.append("    ccTips: ").append(toIndentedString(ccTips)).append("\n");
    sb.append("    ccTipsWithheld: ").append(toIndentedString(ccTipsWithheld)).append("\n");
    sb.append("    autoGratTips: ").append(toIndentedString(autoGratTips)).append("\n");
    sb.append("    cashTips: ").append(toIndentedString(cashTips)).append("\n");
    sb.append("    declaredTips: ").append(toIndentedString(declaredTips)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("net_sales");
    openapiFields.add("cc_tips");
    openapiFields.add("cc_tips_withheld");
    openapiFields.add("auto_grat_tips");
    openapiFields.add("cash_tips");
    openapiFields.add("declared_tips");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf is not found in the empty JSON string", TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.openapiRequiredFields.toString()));
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sales_filters") != null && !jsonObj.get("sales_filters").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sales_filters` to be an array in the JSON string but got `%s`", jsonObj.get("sales_filters").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sales_contribution_percent") != null && !jsonObj.get("sales_contribution_percent").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sales_contribution_percent` to be an array in the JSON string but got `%s`", jsonObj.get("sales_contribution_percent").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tips_filters") != null && !jsonObj.get("tips_filters").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tips_filters` to be an array in the JSON string but got `%s`", jsonObj.get("tips_filters").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tips_contribution_percent") != null && !jsonObj.get("tips_contribution_percent").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tips_contribution_percent` to be an array in the JSON string but got `%s`", jsonObj.get("tips_contribution_percent").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.class));

       return (TypeAdapter<T>) new TypeAdapter<TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf>() {
           @Override
           public void write(JsonWriter out, TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf
  * @throws IOException if the JSON string is invalid with respect to TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf
  */
  public static TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf.class);
  }

 /**
  * Convert an instance of TipPoolGetDetailedReportResponseDataReportRowsInnerTipPoolsInnerUnassignedTipsInnerAllOf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

