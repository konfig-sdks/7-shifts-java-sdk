/*
 * 7shifts API
 * 7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.  7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.  Start your free trial or request a demo at www.7shifts.com.
 *
 * The version of the OpenAPI document: 2023-05-01
 * Contact: api-support@7shifts.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInnerComplianceExceptionsInner;
import com.konfigthis.client.model.ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInnerTotal;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner {
  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Double userId;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private String date;

  public static final String SERIALIZED_NAME_WEEK_LABEL = "week_label";
  @SerializedName(SERIALIZED_NAME_WEEK_LABEL)
  private String weekLabel;

  public static final String SERIALIZED_NAME_DAY_LABEL = "day_label";
  @SerializedName(SERIALIZED_NAME_DAY_LABEL)
  private String dayLabel;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_BREAKS = "breaks";
  @SerializedName(SERIALIZED_NAME_BREAKS)
  private List<String> breaks = null;

  public static final String SERIALIZED_NAME_LOCATION_ID = "location_id";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private Double locationId;

  public static final String SERIALIZED_NAME_LOCATION_LABEL = "location_label";
  @SerializedName(SERIALIZED_NAME_LOCATION_LABEL)
  private String locationLabel;

  public static final String SERIALIZED_NAME_ROLE_ID = "role_id";
  @SerializedName(SERIALIZED_NAME_ROLE_ID)
  private Double roleId;

  public static final String SERIALIZED_NAME_ROLE_LABEL = "role_label";
  @SerializedName(SERIALIZED_NAME_ROLE_LABEL)
  private String roleLabel;

  public static final String SERIALIZED_NAME_WAGE = "wage";
  @SerializedName(SERIALIZED_NAME_WAGE)
  private Double wage;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Double status;

  public static final String SERIALIZED_NAME_SALARIED = "salaried";
  @SerializedName(SERIALIZED_NAME_SALARIED)
  private Boolean salaried;

  public static final String SERIALIZED_NAME_COMPLIANCE_EXCEPTIONS = "compliance_exceptions";
  @SerializedName(SERIALIZED_NAME_COMPLIANCE_EXCEPTIONS)
  private List<ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInnerComplianceExceptionsInner> complianceExceptions = null;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInnerTotal total;

  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner() {
  }

  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner userId(Double userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner userId(Integer userId) {
    
    
    
    
    this.userId = userId.doubleValue();
    return this;
  }

   /**
   * User ID
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "123", value = "User ID")

  public Double getUserId() {
    return userId;
  }


  public void setUserId(Double userId) {
    
    
    
    this.userId = userId;
  }


  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner date(String date) {
    
    
    
    
    this.date = date;
    return this;
  }

   /**
   * Date and time the shift or time punch started on
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-01-12 13:45:00", value = "Date and time the shift or time punch started on")

  public String getDate() {
    return date;
  }


  public void setDate(String date) {
    
    
    
    this.date = date;
  }


  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner weekLabel(String weekLabel) {
    
    
    
    
    this.weekLabel = weekLabel;
    return this;
  }

   /**
   * Work week the shift or time punch occurred in
   * @return weekLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-01-10", value = "Work week the shift or time punch occurred in")

  public String getWeekLabel() {
    return weekLabel;
  }


  public void setWeekLabel(String weekLabel) {
    
    
    
    this.weekLabel = weekLabel;
  }


  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner dayLabel(String dayLabel) {
    
    
    
    
    this.dayLabel = dayLabel;
    return this;
  }

   /**
   * Formatted day the shift or time punch started on
   * @return dayLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Dec 2", value = "Formatted day the shift or time punch started on")

  public String getDayLabel() {
    return dayLabel;
  }


  public void setDayLabel(String dayLabel) {
    
    
    
    this.dayLabel = dayLabel;
  }


  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner label(String label) {
    
    
    
    
    this.label = label;
    return this;
  }

   /**
   * Start and end times of shift or time punch
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1:45PM - 7:28PM", value = "Start and end times of shift or time punch")

  public String getLabel() {
    return label;
  }


  public void setLabel(String label) {
    
    
    
    this.label = label;
  }


  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner breaks(List<String> breaks) {
    
    
    
    
    this.breaks = breaks;
    return this;
  }

  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner addBreaksItem(String breaksItem) {
    if (this.breaks == null) {
      this.breaks = new ArrayList<>();
    }
    this.breaks.add(breaksItem);
    return this;
  }

   /**
   * Breaks
   * @return breaks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Breaks")

  public List<String> getBreaks() {
    return breaks;
  }


  public void setBreaks(List<String> breaks) {
    
    
    
    this.breaks = breaks;
  }


  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner locationId(Double locationId) {
    
    
    
    
    this.locationId = locationId;
    return this;
  }

  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner locationId(Integer locationId) {
    
    
    
    
    this.locationId = locationId.doubleValue();
    return this;
  }

   /**
   * Location ID
   * @return locationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "408", value = "Location ID")

  public Double getLocationId() {
    return locationId;
  }


  public void setLocationId(Double locationId) {
    
    
    
    this.locationId = locationId;
  }


  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner locationLabel(String locationLabel) {
    
    
    
    
    this.locationLabel = locationLabel;
    return this;
  }

   /**
   * Location name
   * @return locationLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Quacker's", value = "Location name")

  public String getLocationLabel() {
    return locationLabel;
  }


  public void setLocationLabel(String locationLabel) {
    
    
    
    this.locationLabel = locationLabel;
  }


  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner roleId(Double roleId) {
    
    
    
    
    this.roleId = roleId;
    return this;
  }

  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner roleId(Integer roleId) {
    
    
    
    
    this.roleId = roleId.doubleValue();
    return this;
  }

   /**
   * Role ID
   * @return roleId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "604", value = "Role ID")

  public Double getRoleId() {
    return roleId;
  }


  public void setRoleId(Double roleId) {
    
    
    
    this.roleId = roleId;
  }


  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner roleLabel(String roleLabel) {
    
    
    
    
    this.roleLabel = roleLabel;
    return this;
  }

   /**
   * Role name
   * @return roleLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Cook", value = "Role name")

  public String getRoleLabel() {
    return roleLabel;
  }


  public void setRoleLabel(String roleLabel) {
    
    
    
    this.roleLabel = roleLabel;
  }


  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner wage(Double wage) {
    
    
    
    
    this.wage = wage;
    return this;
  }

  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner wage(Integer wage) {
    
    
    
    
    this.wage = wage.doubleValue();
    return this;
  }

   /**
   * Hourly wage
   * @return wage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "15.5", value = "Hourly wage")

  public Double getWage() {
    return wage;
  }


  public void setWage(Double wage) {
    
    
    
    this.wage = wage;
  }


  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner status(Double status) {
    
    
    
    
    this.status = status;
    return this;
  }

  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner status(Integer status) {
    
    
    
    
    this.status = status.doubleValue();
    return this;
  }

   /**
   * Shift flag (late, no-show, sick)
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "Shift flag (late, no-show, sick)")

  public Double getStatus() {
    return status;
  }


  public void setStatus(Double status) {
    
    
    
    this.status = status;
  }


  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner salaried(Boolean salaried) {
    
    
    
    
    this.salaried = salaried;
    return this;
  }

   /**
   * Whether the employee was salaried during this shift
   * @return salaried
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Whether the employee was salaried during this shift")

  public Boolean getSalaried() {
    return salaried;
  }


  public void setSalaried(Boolean salaried) {
    
    
    
    this.salaried = salaried;
  }


  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner complianceExceptions(List<ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInnerComplianceExceptionsInner> complianceExceptions) {
    
    
    
    
    this.complianceExceptions = complianceExceptions;
    return this;
  }

  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner addComplianceExceptionsItem(ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInnerComplianceExceptionsInner complianceExceptionsItem) {
    if (this.complianceExceptions == null) {
      this.complianceExceptions = new ArrayList<>();
    }
    this.complianceExceptions.add(complianceExceptionsItem);
    return this;
  }

   /**
   * Compliance exceptions for the shift
   * @return complianceExceptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Compliance exceptions for the shift")

  public List<ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInnerComplianceExceptionsInner> getComplianceExceptions() {
    return complianceExceptions;
  }


  public void setComplianceExceptions(List<ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInnerComplianceExceptionsInner> complianceExceptions) {
    
    
    
    this.complianceExceptions = complianceExceptions;
  }


  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner total(ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInnerTotal total) {
    
    
    
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInnerTotal getTotal() {
    return total;
  }


  public void setTotal(ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInnerTotal total) {
    
    
    
    this.total = total;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner instance itself
   */
  public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner = (ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner) o;
    return Objects.equals(this.userId, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.userId) &&
        Objects.equals(this.date, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.date) &&
        Objects.equals(this.weekLabel, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.weekLabel) &&
        Objects.equals(this.dayLabel, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.dayLabel) &&
        Objects.equals(this.label, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.label) &&
        Objects.equals(this.breaks, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.breaks) &&
        Objects.equals(this.locationId, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.locationId) &&
        Objects.equals(this.locationLabel, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.locationLabel) &&
        Objects.equals(this.roleId, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.roleId) &&
        Objects.equals(this.roleLabel, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.roleLabel) &&
        Objects.equals(this.wage, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.wage) &&
        Objects.equals(this.status, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.status) &&
        Objects.equals(this.salaried, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.salaried) &&
        Objects.equals(this.complianceExceptions, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.complianceExceptions) &&
        Objects.equals(this.total, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.total)&&
        Objects.equals(this.additionalProperties, reportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, date, weekLabel, dayLabel, label, breaks, locationId, locationLabel, roleId, roleLabel, wage, status, salaried, complianceExceptions, total, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    weekLabel: ").append(toIndentedString(weekLabel)).append("\n");
    sb.append("    dayLabel: ").append(toIndentedString(dayLabel)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    breaks: ").append(toIndentedString(breaks)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    locationLabel: ").append(toIndentedString(locationLabel)).append("\n");
    sb.append("    roleId: ").append(toIndentedString(roleId)).append("\n");
    sb.append("    roleLabel: ").append(toIndentedString(roleLabel)).append("\n");
    sb.append("    wage: ").append(toIndentedString(wage)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    salaried: ").append(toIndentedString(salaried)).append("\n");
    sb.append("    complianceExceptions: ").append(toIndentedString(complianceExceptions)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("user_id");
    openapiFields.add("date");
    openapiFields.add("week_label");
    openapiFields.add("day_label");
    openapiFields.add("label");
    openapiFields.add("breaks");
    openapiFields.add("location_id");
    openapiFields.add("location_label");
    openapiFields.add("role_id");
    openapiFields.add("role_label");
    openapiFields.add("wage");
    openapiFields.add("status");
    openapiFields.add("salaried");
    openapiFields.add("compliance_exceptions");
    openapiFields.add("total");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner is not found in the empty JSON string", ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("date") != null && !jsonObj.get("date").isJsonNull()) && !jsonObj.get("date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date").toString()));
      }
      if ((jsonObj.get("week_label") != null && !jsonObj.get("week_label").isJsonNull()) && !jsonObj.get("week_label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `week_label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("week_label").toString()));
      }
      if ((jsonObj.get("day_label") != null && !jsonObj.get("day_label").isJsonNull()) && !jsonObj.get("day_label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `day_label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("day_label").toString()));
      }
      if ((jsonObj.get("label") != null && !jsonObj.get("label").isJsonNull()) && !jsonObj.get("label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("label").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("breaks") != null && !jsonObj.get("breaks").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `breaks` to be an array in the JSON string but got `%s`", jsonObj.get("breaks").toString()));
      }
      if ((jsonObj.get("location_label") != null && !jsonObj.get("location_label").isJsonNull()) && !jsonObj.get("location_label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location_label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location_label").toString()));
      }
      if ((jsonObj.get("role_label") != null && !jsonObj.get("role_label").isJsonNull()) && !jsonObj.get("role_label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role_label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role_label").toString()));
      }
      if (jsonObj.get("compliance_exceptions") != null && !jsonObj.get("compliance_exceptions").isJsonNull()) {
        JsonArray jsonArraycomplianceExceptions = jsonObj.getAsJsonArray("compliance_exceptions");
        if (jsonArraycomplianceExceptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("compliance_exceptions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `compliance_exceptions` to be an array in the JSON string but got `%s`", jsonObj.get("compliance_exceptions").toString()));
          }

          // validate the optional field `compliance_exceptions` (array)
          for (int i = 0; i < jsonArraycomplianceExceptions.size(); i++) {
            ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInnerComplianceExceptionsInner.validateJsonObject(jsonArraycomplianceExceptions.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `total`
      if (jsonObj.get("total") != null && !jsonObj.get("total").isJsonNull()) {
        ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInnerTotal.validateJsonObject(jsonObj.getAsJsonObject("total"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner>() {
           @Override
           public void write(JsonWriter out, ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner
  * @throws IOException if the JSON string is invalid with respect to ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner
  */
  public static ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner.class);
  }

 /**
  * Convert an instance of ReportsGetWorkedHoursWagesResponseUsersInnerWeeksInnerShiftsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

